<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Mr.Wen</title>
  
  <subtitle>To strive, to seek, to find, and not to yield</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://blogwenbo.com/"/>
  <updated>2018-07-08T10:48:59.207Z</updated>
  <id>http://blogwenbo.com/</id>
  
  <author>
    <name>Mr.Wen</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Hexo七牛插件安装与使用</title>
    <link href="http://blogwenbo.com/2018/07/08/Hexo%E4%B8%83%E7%89%9B%E6%8F%92%E4%BB%B6%E5%AE%89%E8%A3%85%E4%B8%8E%E4%BD%BF%E7%94%A8/"/>
    <id>http://blogwenbo.com/2018/07/08/Hexo七牛插件安装与使用/</id>
    <published>2018-07-08T10:37:19.000Z</published>
    <updated>2018-07-08T10:48:59.207Z</updated>
    
    <content type="html"><![CDATA[<p class="description"></p><a id="more"></a><h3 id="相关网址"><a href="#相关网址" class="headerlink" title="相关网址"></a><strong>相关网址</strong></h3><ul><li><a href="https://github.com/gyk001/hexo-qiniu-sync" target="_blank" rel="noopener">hexo-qiniu-sync</a></li><li><a href="https://www.qiniu.com/" target="_blank" rel="noopener">七牛云</a><h3 id="注册七牛个人账号"><a href="#注册七牛个人账号" class="headerlink" title="注册七牛个人账号"></a>注册七牛个人账号</h3></li><li>首先需要到<a href="https://www.qiniu.com/" target="_blank" rel="noopener">七牛云</a>官网注册个人账号。</li><li>进入控制台创建存储空间，如下图所示：<br><img src="https://user-gold-cdn.xitu.io/2018/1/24/16128a78182fc141?w=1240&amp;h=630&amp;f=png&amp;s=161064" alt="创建存储空间.png"></li><li>将融合 CDN默认域名添加到<a href="https://www.aliyun.com/?spm=a2c1d.8251892.0.0.7b61a3c0xNylGH" target="_blank" rel="noopener">万网</a>中，配置格式如下图所示：<br><img src="https://user-gold-cdn.xitu.io/2018/1/24/16128a781811be5d?w=1240&amp;h=78&amp;f=png&amp;s=22185" alt="添加到万网.png"><h3 id="安装七牛云插件"><a href="#安装七牛云插件" class="headerlink" title="安装七牛云插件"></a>安装七牛云插件</h3></li><li>安装七牛云插件<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-qiniu-sync --save</span><br></pre></td></tr></table></figure></li></ul><h3 id="配置相关信息"><a href="#配置相关信息" class="headerlink" title="配置相关信息"></a>配置相关信息</h3><ul><li><p>配置站点文件<strong>_config.yml</strong>，配置入内容（<strong>注意</strong>：添加到配置文件时，把//去掉）</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">#plugins:</span><br><span class="line"># - hexo-qiniu-sync</span><br><span class="line"></span><br><span class="line">qiniu:</span><br><span class="line">  offline: false</span><br><span class="line">  sync: true</span><br><span class="line">  bucket: blogwenbo</span><br><span class="line">  //这里将其注释掉，不注释，执行hexo g报错</span><br><span class="line">  # secret_file: sec/qn.json or C:</span><br><span class="line">  access_key: your access_key</span><br><span class="line">  secret_key: your secret_key</span><br><span class="line">  // 上传的资源子目录前缀.如设置，需与urlPrefix同步</span><br><span class="line">  dirPrefix: static</span><br><span class="line">  //外链前缀</span><br><span class="line">  urlPrefix: http://p2zukkwm9.bkt.clouddn.com/static</span><br><span class="line">  //使用默认配置即可</span><br><span class="line">  up_host: http://upload.qiniu.com</span><br><span class="line">  //本地目录</span><br><span class="line">  local_dir: static</span><br><span class="line">  // 是否更新已经上传过的文件(仅文件大小不同或在上次上传后进行更新的才会重新上传)</span><br><span class="line">  update_exist: true</span><br><span class="line">  image: </span><br><span class="line">    folder: images</span><br><span class="line">    extend: </span><br><span class="line">  js:</span><br><span class="line">    folder: js</span><br><span class="line">  css:</span><br><span class="line">    folder: css</span><br></pre></td></tr></table></figure></li><li><p>生成七牛配置路径，执行下面命令任意一个</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">hexo s</span><br><span class="line">或</span><br><span class="line">hexo g</span><br><span class="line">//终端输出</span><br><span class="line">INFO  -----------------------------------------------------------</span><br><span class="line">INFO  qiniu state: online</span><br><span class="line">INFO  qiniu sync:  true</span><br><span class="line">INFO  qiniu local dir:  static</span><br><span class="line">INFO  qiniu url:   http://blogwenbo.com/static</span><br><span class="line">INFO  -----------------------------------------------------------</span><br><span class="line">INFO  Start processing</span><br><span class="line">INFO  Now start qiniu sync.</span><br><span class="line">INFO  Need upload file num: 0</span><br></pre></td></tr></table></figure><p>就会在<strong>static</strong>目录下生成<strong>images</strong>、<strong>css</strong>、<strong>js</strong>三个文件夹。这时我们把测试图片<strong>七牛云.png</strong>放在<strong>images</strong>文件夹下，然后按照如下标签语法书写：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% qnimg 七牛云.png title:七牛云 alt:七牛云 &apos;class:&apos; extend:?imageView2/2/w/450 %&#125;</span><br></pre></td></tr></table></figure><p><img src="https://user-gold-cdn.xitu.io/2018/1/24/16128a78184a6943?w=300&amp;h=300&amp;f=png&amp;s=1759" alt="七牛云.png"></p><ul><li><p>同步静态资源到七牛云空间，主要有两种方式，一种是使用hexo命令，还有一种是使用七牛插件命令，可以参考GitHub文档：<a href="https://github.com/gyk001/hexo-qiniu-sync" target="_blank" rel="noopener">hexo-qiniu-sync</a></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">//1、启用本地服务器.即使用 hexo server 命令（简写为 hexo s）</span><br><span class="line">//当以本地服务器模式启动后，会自动监测 local_dir 目录下的文件变化， 会自动将新文件进行上传。</span><br><span class="line">如果文件进行了修改，但设置中没有启用 update_exist 配置，则不会更新到七牛空间。</span><br><span class="line">hexo s</span><br><span class="line">hexo server</span><br><span class="line"></span><br><span class="line">//2、使用命令行命令(sync | s | sync2 | s2)</span><br><span class="line">//命令行命令会扫描 local_dir 目录下的文件，同步至七牛空间。</span><br><span class="line">hexo qiniu sync</span><br><span class="line">hexo qiniu s</span><br><span class="line">hexo qiniu sync2</span><br><span class="line">hexo qiniu s2</span><br></pre></td></tr></table></figure></li><li><p>图片处理可参考官方文档<br><a href="https://developer.qiniu.com/dora/manual/1279/basic-processing-images-imageview2" target="_blank" rel="noopener">图片基本处理</a></p><h3 id="问题解决"><a href="#问题解决" class="headerlink" title="问题解决"></a>问题解决</h3></li></ul></li><li><p>没有注释<strong>secret_file: sec/qn.json or C:</strong>报错，如下图所示：<br><img src="https://user-gold-cdn.xitu.io/2018/1/24/16128a7818576183?w=1142&amp;h=250&amp;f=png&amp;s=48638" alt="HexoError.png"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"># secret_file: sec/qn.json or C:</span><br></pre></td></tr></table></figure></li><li><p><a href="https://github.com/gyk001/hexo-qiniu-sync/issues/41#issuecomment-279229378" target="_blank" rel="noopener">hexo-qiniu-sync安装好后，hexo s命令不见了，hexo d也提示问题 #41</a></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">//将其注释就好了</span><br><span class="line">#plugins:</span><br><span class="line"># - hexo-qiniu-sync</span><br></pre></td></tr></table></figure></li></ul><h3 id="结语"><a href="#结语" class="headerlink" title="结语"></a>结语</h3><p>自己也参考了一些文章，但讲解的都不是很详细完整，有些博客只讲解了重要的一些步骤，不管怎样，最后自己还是捣腾出来了，还是挺折腾人的，我也是第一次用七牛云存储图片，有些地方可能讲解的不是很完整，也请谅解。希望本篇博客能给你一些帮助，也欢迎大家一起交流学习。成功案例：<a href="http://blogwenbo.com/2018/01/23/Hexo%E4%B8%83%E7%89%9B%E6%8F%92%E4%BB%B6%E5%AE%89%E8%A3%85%E4%B8%8E%E4%BD%BF%E7%94%A8/">Hexo七牛插件安装与使用</a>。</p><h3 id="参考文章"><a href="#参考文章" class="headerlink" title="参考文章"></a>参考文章</h3><p><a href="http://www.ixirong.com/2016/10/31/how-to-use-hexo-qiniu-sync-plugin/" target="_blank" rel="noopener">Hexo 七牛同步插件的使用</a></p>]]></content>
    
    <summary type="html">
    
      本篇博客主要讲解七牛云插件安装与使用，博客中获取七牛云存储的图片主要有两种方式，一种是在七牛控制台中上传图片然后取图片外链地址，另外一种是用七牛云插件+标签语法将图片上传到七牛云并显示到我们所写的博客中，这里主要介绍第二种方式。
    
    </summary>
    
      <category term="Hexo" scheme="http://blogwenbo.com/categories/Hexo/"/>
    
    
      <category term="Hexo" scheme="http://blogwenbo.com/tags/Hexo/"/>
    
      <category term="QiNiu" scheme="http://blogwenbo.com/tags/QiNiu/"/>
    
  </entry>
  
  <entry>
    <title>最新MBProgressHUD封装</title>
    <link href="http://blogwenbo.com/2018/07/08/%E6%9C%80%E6%96%B0MBProgressHUD%E5%B0%81%E8%A3%85/"/>
    <id>http://blogwenbo.com/2018/07/08/最新MBProgressHUD封装/</id>
    <published>2018-07-08T10:26:42.000Z</published>
    <updated>2018-07-08T10:35:15.389Z</updated>
    
    <content type="html"><![CDATA[<p class="description"></p><a id="more"></a><h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><blockquote><p>在我们平时做项目的时候，为了提高交互体验，难免会用到一些提示语。除了UI上有特殊的要求需要自定义提示UI，一般会选择<a href="https://github.com/" target="_blank" rel="noopener">GitHub</a>上一些知名的提示框架库，如：</p><ul><li><a href="https://github.com/jdg/MBProgressHUD" target="_blank" rel="noopener">MBProgressHUD</a></li><li><a href="https://github.com/SVProgressHUD/SVProgressHUD" target="_blank" rel="noopener">SVProgressHUD</a></li><li><a href="https://github.com/JonasGessner/JGProgressHUD" target="_blank" rel="noopener">JGProgressHUD</a></li><li><a href="https://github.com/scalessec/Toast" target="_blank" rel="noopener">Toast</a></li></ul></blockquote><p>之前做项目都是用的<strong>SVProgressHUD</strong>，这个三方提示库使用非常接单，基于这个库，也很好做自定义提示封装。后来做项目改成了MBProgressHUD，相对于SVProgressHUD，MBProgressHUD使用相对来说要麻烦一点，因此，我对MBProgressHUD一些常用提示进行了封装，最开始封装的工具类存在着一些缺点，比如说在网络请求的时候，如果网络不好，拿不到回调，MBProgressHUD就会一直显示，用户无法交互，因此对这个工具类进行了改进。</p><h3 id="MBProgressHUD-v1-1-0"><a href="#MBProgressHUD-v1-1-0" class="headerlink" title="MBProgressHUD(v1.1.0)"></a>MBProgressHUD(v1.1.0)</h3><p>我主要写了一个分类，有菊花、文字、文字+图片提示，并提供了显示完成对调，方便显示完成后进行相应的操作或界面跳转，提供的调用方法如下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br></pre></td><td class="code"><pre><span class="line">#pragma mark ------ &lt; Mask Layer &gt; ------</span><br><span class="line">#pragma mark</span><br><span class="line">/** &lt;&lt; 设置是否显示蒙层 &gt; */</span><br><span class="line">+ (void)wb_maskLayerEnabled:(BOOL)enabled;</span><br><span class="line"></span><br><span class="line">#pragma mark --------  Basic Method  --------</span><br><span class="line">#pragma mark</span><br><span class="line">/**</span><br><span class="line"> *  快速创建提示框 有菊花</span><br><span class="line"> *</span><br><span class="line"> *  @param message 提示信息</span><br><span class="line"> *  @param view 显示视图</span><br><span class="line"> *  @return hud</span><br><span class="line"> */</span><br><span class="line">+ (MBProgressHUD *)wb_showActivityMessage:(NSString *)message</span><br><span class="line">                                   toView:(UIView *)view;</span><br><span class="line">/**</span><br><span class="line"> *  显示提示文字</span><br><span class="line"> *</span><br><span class="line"> *  @param message 提示信息</span><br><span class="line"> *  @param view 显示的视图</span><br><span class="line"> */</span><br><span class="line">+ (void)wb_showMessage:(NSString *)message</span><br><span class="line">                toView:(UIView *)view completion:(MBProgressHUDCompletionBlock)completion;</span><br><span class="line">/**</span><br><span class="line"> *  自定义成功提示</span><br><span class="line"> *</span><br><span class="line"> *  @param success 提示文字</span><br><span class="line"> *  @param view 显示视图</span><br><span class="line"> */</span><br><span class="line">+ (void)wb_showSuccess:(NSString *)success</span><br><span class="line">                toView:(UIView *)view completion:(MBProgressHUDCompletionBlock)completion;</span><br><span class="line">/**</span><br><span class="line"> *  自定义失败提示</span><br><span class="line"> *</span><br><span class="line"> *  @param error 提示文字</span><br><span class="line"> *  @param view 显示视图</span><br><span class="line"> */</span><br><span class="line">+ (void)wb_showError:(NSString *)error</span><br><span class="line">              toView:(UIView *)view completion:(MBProgressHUDCompletionBlock)completion;</span><br><span class="line">/**</span><br><span class="line"> *  自定义提示信息</span><br><span class="line"> *</span><br><span class="line"> *  @param info 提示信息</span><br><span class="line"> *  @param view 示视图</span><br><span class="line"> */</span><br><span class="line">+ (void)wb_showInfo:(NSString *)info</span><br><span class="line">             toView:(UIView *)view</span><br><span class="line">         completion:(MBProgressHUDCompletionBlock)completion;</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> *  自定义警告提示</span><br><span class="line"> *</span><br><span class="line"> *  @param warning 提示信息</span><br><span class="line"> *  @param view 示视图</span><br><span class="line"> */</span><br><span class="line">+ (void)wb_showWarning:(NSString *)warning</span><br><span class="line">                toView:(UIView *)view completion:(MBProgressHUDCompletionBlock)completion;</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> *  自定义提示框</span><br><span class="line"> *</span><br><span class="line"> *  @param text 提示文字</span><br><span class="line"> *  @param icon 图片名称</span><br><span class="line"> *  @param view 展示视图</span><br><span class="line"> */</span><br><span class="line">+ (void)wb_show:(NSString *)text</span><br><span class="line">           icon:(NSString *)icon</span><br><span class="line">           view:(UIView *)view</span><br><span class="line">     completion:(MBProgressHUDCompletionBlock)completion;</span><br><span class="line"></span><br><span class="line">#pragma mark --------  Activity &amp;&amp; Text  --------</span><br><span class="line">#pragma mark</span><br><span class="line">/**  &lt; 只显示菊花 &gt;  */</span><br><span class="line">+ (MBProgressHUD *)wb_showActivity;</span><br><span class="line">/**  &lt; 菊花带有文字 &gt;  */</span><br><span class="line">+ (MBProgressHUD *)wb_showActivityMessage:(NSString *)message;</span><br><span class="line"></span><br><span class="line">#pragma mark --------  Text &amp;&amp; Image  --------</span><br><span class="line">#pragma mark</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> 文字提示</span><br><span class="line"></span><br><span class="line"> @param message 提示文字</span><br><span class="line"> @param completion 完成回调</span><br><span class="line"> */</span><br><span class="line">+ (void)wb_showMessage:(NSString *)message completion:(MBProgressHUDCompletionBlock)completion;</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> 成功提示</span><br><span class="line"></span><br><span class="line"> @param success 提示文字</span><br><span class="line"> @param completion 完成回调</span><br><span class="line"> */</span><br><span class="line">+ (void)wb_showSuccess:(NSString *)success completion:(MBProgressHUDCompletionBlock)completion;</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> 错误提示</span><br><span class="line"></span><br><span class="line"> @param error 提示文字</span><br><span class="line"> @param completion 完成回调</span><br><span class="line"> */</span><br><span class="line">+ (void)wb_showError:(NSString *)error completion:(MBProgressHUDCompletionBlock)completion;</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> 信息提示</span><br><span class="line"></span><br><span class="line"> @param info 提示文字</span><br><span class="line"> @param completion 完成回调</span><br><span class="line"> */</span><br><span class="line">+ (void)wb_showInfo:(NSString *)info completion:(MBProgressHUDCompletionBlock)completion;</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> 警告提示</span><br><span class="line"></span><br><span class="line"> @param warning 提示文字</span><br><span class="line"> @param completion 完成回调</span><br><span class="line"> */</span><br><span class="line">+ (void)wb_showWarning:(NSString *)warning completion:(MBProgressHUDCompletionBlock)completion;</span><br></pre></td></tr></table></figure></p><p>举一个.m显示菊花方法的例子吧，MBProgressHUD最新版本对比老版本API还是有些变化的：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">+ (MBProgressHUD *)wb_showActivityMessage:(NSString *)message</span><br><span class="line">                                   toView:(UIView *)view &#123;</span><br><span class="line">    if (!view) view = [UIApplication sharedApplication].delegate.window;    /**  快速显示提示信息  */</span><br><span class="line">    MBProgressHUD * hud = [MBProgressHUD showHUDAddedTo:view animated:YES];</span><br><span class="line">    /**  &lt; 显示动画效果 &gt;  */</span><br><span class="line">    hud.animationType = MBProgressHUDAnimationZoom;</span><br><span class="line">    /**  &lt; 文字内容 &gt;  */</span><br><span class="line">    hud.label.text = message;</span><br><span class="line">    /**  &lt; 影藏后移除视图 &gt;  */</span><br><span class="line">    hud.removeFromSuperViewOnHide = YES;</span><br><span class="line">    /**  中间方框背景色  */</span><br><span class="line">    hud.bezelView.color = [[UIColor blackColor] colorWithAlphaComponent:0.85f];</span><br><span class="line">    /**  内容颜色  */</span><br><span class="line">    hud.contentColor = [UIColor whiteColor];</span><br><span class="line">    /**  &lt; 最小显示时间 &gt;  */</span><br><span class="line">    hud.minShowTime = kActivityMinDismissTime;</span><br><span class="line">    [self wb_configMaskLayer:hud];</span><br><span class="line">    return hud;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>具体详情，请戳：<a href="https://github.com/wenmobo/WBMBProgressHUDManager" target="_blank" rel="noopener">WBMBProgressHUDManager</a><br><img src="https://user-gold-cdn.xitu.io/2018/2/2/16156e6d8ec2f0b5?w=312&amp;h=612&amp;f=gif&amp;s=247767" alt="Untitled.gif"></p><h3 id="结语"><a href="#结语" class="headerlink" title="结语"></a>结语</h3><blockquote><p>选择哪一款提示框架，都要看自己喜好了，因为我代码水平有限，有些地方可能考虑的不够完善，只能说是抛砖引玉吧，大神们可能有更好的封装。要想基于这些框架自定义出自己需要风格的UI，还是要对框架提供的方法属性有一定的了解。</p></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;p class=&quot;description&quot;&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="iOS" scheme="http://blogwenbo.com/categories/iOS/"/>
    
    
      <category term="iOS" scheme="http://blogwenbo.com/tags/iOS/"/>
    
      <category term="GitHub" scheme="http://blogwenbo.com/tags/GitHub/"/>
    
      <category term="Objective-C" scheme="http://blogwenbo.com/tags/Objective-C/"/>
    
      <category term="Swift" scheme="http://blogwenbo.com/tags/Swift/"/>
    
      <category term="MBProgressHUD" scheme="http://blogwenbo.com/tags/MBProgressHUD/"/>
    
  </entry>
  
  <entry>
    <title>Mac OS X系统常用工具</title>
    <link href="http://blogwenbo.com/2018/07/08/Mac-OS-X%E7%B3%BB%E7%BB%9F%E5%B8%B8%E7%94%A8%E5%B7%A5%E5%85%B7/"/>
    <id>http://blogwenbo.com/2018/07/08/Mac-OS-X系统常用工具/</id>
    <published>2018-07-08T09:33:50.000Z</published>
    <updated>2018-07-08T10:22:34.937Z</updated>
    
    <content type="html"><![CDATA[<p class="description"></p><a id="more"></a><h1 id="分类目录"><a href="#分类目录" class="headerlink" title="分类目录"></a>分类目录</h1><blockquote><p>版本控制</p><ul><li>Cornerstone</li><li>Sourcetree</li><li>Tower</li><li>GitHubDesktop</li></ul></blockquote><blockquote><p>办公</p><ul><li>office2016</li></ul></blockquote><blockquote><p>效率</p><ul><li>Alfred</li></ul></blockquote><blockquote><p>实用</p><ul><li>Mounty</li><li>CleanMyMac</li><li>HideSwitch</li><li>LICEcap</li></ul></blockquote><blockquote><p>iOS开发必备</p><ul><li>Dash</li><li>真机调试包</li></ul></blockquote><blockquote><p>数据库管理</p><ul><li>Navicat</li></ul></blockquote><blockquote><p>设计工具</p><ul><li>Sketch</li></ul></blockquote><blockquote><p>MarkDown 工具</p><ul><li>Typora</li><li>iPic</li></ul></blockquote><blockquote><p>网络工具</p><ul><li>shadowsocks</li><li>Charles</li></ul></blockquote><blockquote><p>终端工具</p><ul><li>iTerm 2</li></ul></blockquote><h1 id="版本控制"><a href="#版本控制" class="headerlink" title="版本控制"></a>版本控制</h1><h3 id="Cornerstone"><a href="#Cornerstone" class="headerlink" title="Cornerstone"></a>Cornerstone</h3><blockquote><p>Cornerstone is an elegant SVN client designed specifically for the Mac. It is built on Subversion, a popular version control system well-known for its performance, flexibility, and scalability. Cornerstone excels in tracking &amp; displaying changes to data; its comparison tools enable users to view differences in multi-language formats. Better yet, Planio is now integrated into the Cornerstone environment — so you can now easily sync a local folder with your <a href="https://plan.io/subversion-hosting-and-git-hosting/" target="_blank" rel="noopener">Planio repositories</a> using your Mac!  </p></blockquote><p>MAC上一款优雅的SVN客服端，进入公司后，使用的第一款项目版本控制工具就是它了。它是建立在Subversion之上的，因其简洁、灵活、可扩展性而闻名。</p><h4 id="官方网站：planio"><a href="#官方网站：planio" class="headerlink" title="官方网站：planio"></a>官方网站：<a href="https://plan.io/cornerstone-svn/" target="_blank" rel="noopener">planio</a></h4><h4 id="百度网盘"><a href="#百度网盘" class="headerlink" title="百度网盘"></a>百度网盘</h4><p>链接:<code>https://pan.baidu.com/s/1o9O4CGi</code> 密码:<code>fb14</code><br><img src="https://user-gold-cdn.xitu.io/2018/6/20/1641ddfd2b663a3b?w=1240&amp;h=567&amp;f=png&amp;s=277892" alt="1615c2235a0ed7ce.png"></p><hr><h3 id="Sourcetree"><a href="#Sourcetree" class="headerlink" title="Sourcetree"></a>Sourcetree</h3><blockquote><p>Simplicity and power in a beautiful Git GUI. </p></blockquote><p>一款免费非常值得推荐的Git GUI图形客户端。自己托管在GitHub上的demo就是用的这款软件，使用很方便，免去了git繁琐命令，极大提高了工作效率。</p><h4 id="官方网站：Sourcetree"><a href="#官方网站：Sourcetree" class="headerlink" title="官方网站：Sourcetree"></a>官方网站：<a href="https://www.sourcetreeapp.com/" target="_blank" rel="noopener">Sourcetree</a></h4><h4 id="相关博客：Sourcetree安装与使用"><a href="#相关博客：Sourcetree安装与使用" class="headerlink" title="相关博客：Sourcetree安装与使用"></a>相关博客：<a href="https://www.jianshu.com/p/fdbf7c0bca93" target="_blank" rel="noopener">Sourcetree安装与使用</a></h4><h4 id="百度网盘-1"><a href="#百度网盘-1" class="headerlink" title="百度网盘"></a>百度网盘</h4><p>链接:<code>https://pan.baidu.com/s/1eTJvpMM</code> 密码:<code>urmg</code><br><img src="https://ws3.sinaimg.cn/large/006tNc79ly1ft2lp2voypj31kw0qjhda.jpg" alt=""></p><hr><h3 id="Tower"><a href="#Tower" class="headerlink" title="Tower"></a>Tower</h3><blockquote><p>Version control with Git - made easy.<br>In a beautiful, efficient, and powerful app.</p></blockquote><p>MAC&amp;&amp;Windows平台上最好用的Git GUI客户端。不像Sourcetree，这个款软件是付费的，RMB大概500元左右，不过也有破解版的，我也没有使用过，感觉功能和Sourcetree差不多吧。</p><h4 id="官方网址：git-tower"><a href="#官方网址：git-tower" class="headerlink" title="官方网址：git-tower"></a>官方网址：<a href="https://www.git-tower.com/mac/" target="_blank" rel="noopener">git-tower</a></h4><h4 id="百度网盘-2"><a href="#百度网盘-2" class="headerlink" title="百度网盘"></a>百度网盘</h4><p>链接:<code>https://pan.baidu.com/s/1ggmPmkr</code>   密码: <code>8bm3</code><br><img src="https://ws1.sinaimg.cn/large/006tNc79ly1ft2lnzddz9j31kw0rctjc.jpg" alt=""></p><hr><h3 id="GitHubDesktop"><a href="#GitHubDesktop" class="headerlink" title="GitHubDesktop"></a>GitHubDesktop</h3><blockquote><p>Extend your GitHub workflow beyond your browser with GitHub Desktop, completely redesigned with Electron. Get a unified cross-platform experience that’s completely open source and ready to customize.</p></blockquote><p>在我搜索MAC上好用的Git GUI客户端时下载用过，功能不是很多，基本的Git操都有，可以自己去了解下吧。</p><h4 id="官方网址：GitHubDesktop"><a href="#官方网址：GitHubDesktop" class="headerlink" title="官方网址：GitHubDesktop"></a>官方网址：<a href="https://desktop.github.com/" target="_blank" rel="noopener">GitHubDesktop</a></h4><h4 id="百度网盘-3"><a href="#百度网盘-3" class="headerlink" title="百度网盘"></a>百度网盘</h4><p>链接:<code>https://pan.baidu.com/s/1bqJ1xgF</code>  密码:<code>8tzk</code><br><img src="https://ws1.sinaimg.cn/large/006tNc79ly1ft2lm9pqnuj31kw0v80zi.jpg" alt=""></p><hr><h1 id="网络工具"><a href="#网络工具" class="headerlink" title="网络工具"></a>网络工具</h1><h3 id="shadowsocks"><a href="#shadowsocks" class="headerlink" title="shadowsocks"></a>shadowsocks</h3><blockquote><p>A secure socks5 proxy, designed to protect your Internet traffic.</p></blockquote><p>一个安全的socks5代理，旨在保护你的网络流量。ShadowsocksX-NG有些文件是用swift写的，也是最近才接触，配置VPN时用到。</p><h4 id="官网网址：shadowsocks"><a href="#官网网址：shadowsocks" class="headerlink" title="官网网址：shadowsocks"></a>官网网址：<a href="https://github.com/shadowsocks" target="_blank" rel="noopener">shadowsocks</a></h4><h4 id="百度网盘-4"><a href="#百度网盘-4" class="headerlink" title="百度网盘"></a>百度网盘</h4><p>链接:<a href="https://pan.baidu.com/s/1nvZLJFN" target="_blank" rel="noopener">https://pan.baidu.com/s/1nvZLJFN</a>  密码:cnyv<br><img src="https://ws3.sinaimg.cn/large/006tNc79ly1ft2lkqycsjj31kw07ataf.jpg" alt=""></p><hr><h3 id="Charles"><a href="#Charles" class="headerlink" title="Charles"></a>Charles</h3><blockquote><p>Charles is an HTTP proxy / HTTP monitor / Reverse Proxy that enables a developer to view all of the HTTP and SSL / HTTPS traffic between their machine and the Internet. This includes requests, responses and the HTTP headers (which contain the cookies and caching information). </p></blockquote><p><a href="http://www.charlesproxy.com/" target="_blank" rel="noopener">Charles</a> 是在 Mac 下常用的网络封包截取工具，在做<br>移动开发时，我们为了调试与服务器端的网络通讯协议，常常需要截取网络封包来分析。</p><p>Charles 通过将自己设置成系统的网络访问代理服务器，使得所有的网络访问请求都通过它来完成，从而实现了网络封包的截取和分析。</p><p>除了在做移动开发中调试端口外，Charles 也可以用于分析第三方应用的通讯协议。配合 Charles 的 SSL 功能，Charles 还可以分析 Https 协议。</p><p>Charles 是收费软件，可以免费试用 30 天。试用期过后，未付费的用户仍然可以继续使用，但是每次使用时间不能超过 30 分钟，并且启动时将会有 10 秒种的延时。因此，该付费方案对广大用户还是相当友好的，即使你长期不付费，也能使用完整的软件功能。只是当你需要长时间进行封包调试时，会因为 Charles 强制关闭而遇到影响。</p><h4 id="官方网址：Charles"><a href="#官方网址：Charles" class="headerlink" title="官方网址：Charles"></a>官方网址：<a href="https://www.charlesproxy.com/" target="_blank" rel="noopener">Charles</a></h4><p><img src="https://ws4.sinaimg.cn/large/006tNc79ly1ft2m8kkhc4j31kw0eq12y.jpg" alt=""></p><h1 id="iOS开发必备"><a href="#iOS开发必备" class="headerlink" title="iOS开发必备"></a>iOS开发必备</h1><h3 id="真机调试包"><a href="#真机调试包" class="headerlink" title="真机调试包"></a>真机调试包</h3><h4 id="百度网盘-5"><a href="#百度网盘-5" class="headerlink" title="百度网盘"></a>百度网盘</h4><p>链接:<code>https://pan.baidu.com/s/1qZVmja0</code>  密码:<code>nq3s</code></p><hr><h3 id="Dash"><a href="#Dash" class="headerlink" title="Dash"></a>Dash</h3><blockquote><p>Dash is an API Documentation Browser and Code Snippet Manager. Dash stores snippets of code and instantly searches offline documentation sets for 200+ APIs, 100+ cheat sheets and more. You can even generate your own docsets or request docsets to be included.</p></blockquote><p>开发人员不可缺少的杰作。作为一名开发开者，我们可以通过这款软件阅读官方文档，存储代码片段，离线搜索API文档集，开发必备软件。</p><h4 id="官方网站：Dash"><a href="#官方网站：Dash" class="headerlink" title="官方网站：Dash"></a>官方网站：<a href="https://kapeli.com/dash" target="_blank" rel="noopener">Dash</a></h4><h4 id="百度网盘-6"><a href="#百度网盘-6" class="headerlink" title="百度网盘"></a>百度网盘</h4><p>链接:<code>https://pan.baidu.com/s/1c3UUEHU</code>  密码:<code>cvu9</code></p><p><img src="https://ws2.sinaimg.cn/large/006tNc79ly1ft2lft1yk1j31kw0loqak.jpg" alt="1615c3aa45f22f8c.png"></p><h1 id="实用工具"><a href="#实用工具" class="headerlink" title="实用工具"></a>实用工具</h1><h3 id="LICEcap"><a href="#LICEcap" class="headerlink" title="LICEcap"></a>LICEcap</h3><blockquote><p>simple animated screen captures   </p></blockquote><p>一款简单好用的屏幕GIF录制软件。比如做demo的时候，录制demo效果。</p><h4 id="官网网址：LICEcap"><a href="#官网网址：LICEcap" class="headerlink" title="官网网址：LICEcap"></a>官网网址：<a href="https://www.cockos.com/licecap/" target="_blank" rel="noopener">LICEcap</a></h4><h4 id="相关博客：licecap-For-Mac安装与使用"><a href="#相关博客：licecap-For-Mac安装与使用" class="headerlink" title="相关博客：licecap For Mac安装与使用"></a>相关博客：<a href="https://www.jianshu.com/p/ea8f828802a3" target="_blank" rel="noopener">licecap For Mac安装与使用</a></h4><h4 id="百度网盘-7"><a href="#百度网盘-7" class="headerlink" title="百度网盘"></a>百度网盘</h4><p>链接:<code>https://pan.baidu.com/s/1i6bVLE9</code>  密码:<code>0cni</code><br><img src="https://ws2.sinaimg.cn/large/006tNc79ly1ft2ljbjo8nj31kw0iujw8.jpg" alt=""></p><hr><h3 id="Mounty"><a href="#Mounty" class="headerlink" title="Mounty"></a>Mounty</h3><blockquote><p>A tiny tool to re-mount write-protected NTFS volumes under Mac OS X 10.9+ in read-write mode.</p></blockquote><p>一款MAC上mini的NTFS读写软件，相比付费的NTFS读写软件，这款软件值得推荐哦。</p><h4 id="官网：Mounty"><a href="#官网：Mounty" class="headerlink" title="官网：Mounty"></a>官网：<a href="http://enjoygineering.com/mounty/" target="_blank" rel="noopener">Mounty</a></h4><h4 id="通过Homebrew安装："><a href="#通过Homebrew安装：" class="headerlink" title="通过Homebrew安装："></a>通过Homebrew安装：</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">brew cask install mounty</span><br></pre></td></tr></table></figure><h4 id="百度网盘-8"><a href="#百度网盘-8" class="headerlink" title="百度网盘"></a>百度网盘</h4><p>链接:<code>https://pan.baidu.com/s/1i6BhDOh</code>  密码:<code>rs5j</code><br><img src="https://ws1.sinaimg.cn/large/006tNc79ly1ft2li35swmj31g60so44q.jpg" alt=""></p><hr><h3 id="HideSwitch"><a href="#HideSwitch" class="headerlink" title="HideSwitch"></a>HideSwitch</h3><blockquote><p>一款实用小工具，显示和隐藏系统隐藏文件，和Show Or Hide这个款软件类似。</p></blockquote><h4 id="百度网盘-9"><a href="#百度网盘-9" class="headerlink" title="百度网盘"></a>百度网盘</h4><p>链接:<code>https://pan.baidu.com/s/1jJFjxu2</code>  密码:<code>r1kb</code><br><img src="https://user-gold-cdn.xitu.io/2018/6/20/1641ddfd8a452070?w=520&amp;h=158&amp;f=webp&amp;s=3692" alt="1615c2b4f7a59971.png"></p><hr><h3 id="CleanMyMac"><a href="#CleanMyMac" class="headerlink" title="CleanMyMac"></a>CleanMyMac</h3><blockquote><p>MAC系统清理软件，MAC上非常值得推荐的一款软件，不过是需要付费的，不过也有破解版的哦。</p></blockquote><h4 id="官方中文网站：mycleanmymac"><a href="#官方中文网站：mycleanmymac" class="headerlink" title="官方中文网站：mycleanmymac"></a>官方中文网站：<a href="http://www.mycleanmymac.com/" target="_blank" rel="noopener">mycleanmymac</a></h4><h4 id="百度网盘-10"><a href="#百度网盘-10" class="headerlink" title="百度网盘"></a>百度网盘</h4><p>链接:<code>https://pan.baidu.com/s/1o96nJ9g</code>  密码:<code>rphk</code><br><img src="https://user-gold-cdn.xitu.io/2018/6/20/1641ddfdc473d485?w=1240&amp;h=724&amp;f=png&amp;s=348857" alt="屏幕快照 2018-02-03 下午11.19.21.png"></p><hr><h1 id="效率"><a href="#效率" class="headerlink" title="效率"></a>效率</h1><h3 id="Alfred"><a href="#Alfred" class="headerlink" title="Alfred"></a>Alfred</h3><blockquote><p>Alfred is an award-winning app for Mac OS X which boosts your efficiency with hotkeys, keywords, text expansion and more. Search your Mac and the web, and be more productive with custom actions to control your Mac.</p></blockquote><p>它是MAC OS X一款可以极大提高操作效率的软件，被人称之为一款神器。我们可以通过快捷键唤出Alfred，然后通过关键词搜索，总之，它是一款强大的软件。我也是最近才安装，了解的也不是很多，有兴趣的朋友可以下载使用吧。</p><h4 id="官方网站：Alfred"><a href="#官方网站：Alfred" class="headerlink" title="官方网站：Alfred"></a>官方网站：<a href="https://www.alfredapp.com/" target="_blank" rel="noopener">Alfred</a></h4><h4 id="百度网盘-11"><a href="#百度网盘-11" class="headerlink" title="百度网盘"></a>百度网盘</h4><p>链接:<code>https://pan.baidu.com/s/1gg9PNH5</code>  密码:<code>2r19</code><br><img src="https://ws3.sinaimg.cn/large/006tNc79ly1ft2laclcp7j31kw0qo1kx.jpg" alt=""></p><hr><h1 id="办公"><a href="#办公" class="headerlink" title="办公"></a>办公</h1><h3 id="office2016"><a href="#office2016" class="headerlink" title="office2016"></a>office2016</h3><blockquote><p>MAC平台下的办公软件。</p></blockquote><h4 id="百度网盘-12"><a href="#百度网盘-12" class="headerlink" title="百度网盘"></a>百度网盘</h4><p>链接:<code>https://pan.baidu.com/s/1mjnuZmo</code>  密码:<code>urz4</code><br><img src="https://ws1.sinaimg.cn/large/006tNc79ly1ft2ldy5lvyj31kw0nu7wh.jpg" alt="1615c30cc3cfe199.png"></p><h1 id="终端工具"><a href="#终端工具" class="headerlink" title="终端工具"></a>终端工具</h1><h3 id="iTerm-2"><a href="#iTerm-2" class="headerlink" title="iTerm 2"></a>iTerm 2</h3><blockquote><p>iTerm2 is a replacement for Terminal and the successor to iTerm. It works on Macs with macOS 10.10 or newer. iTerm2 brings the terminal into the modern age with features you never knew you always wanted.</p></blockquote><p>MAC上最好用的终端工具。</p><h4 id="官方网站：iTerm-2"><a href="#官方网站：iTerm-2" class="headerlink" title="官方网站：iTerm 2"></a>官方网站：<a href="http://www.iterm2.com/" target="_blank" rel="noopener">iTerm 2</a></h4><p>相关博客：<a href="https://www.jianshu.com/p/34e0f4d6f7c0" target="_blank" rel="noopener">MAC上iTerm 2安装与使用</a><br><img src="https://user-gold-cdn.xitu.io/2018/5/20/1637e1a0a82db7fe?w=1240&amp;h=484&amp;f=jpeg&amp;s=30907" alt=""></p><hr><h1 id="数据库管理"><a href="#数据库管理" class="headerlink" title="数据库管理"></a>数据库管理</h1><h3 id="Navicat"><a href="#Navicat" class="headerlink" title="Navicat"></a>Navicat</h3><blockquote><p>Powerful . Intuitive . Easy-to-use The ultimate solution for MongoDB management and development</p></blockquote><p>Navicat是一套快速、可靠并价格相当便宜的<a href="https://baike.baidu.com/item/%E6%95%B0%E6%8D%AE%E5%BA%93%E7%AE%A1%E7%90%86/10509024" target="_blank" rel="noopener">数据库管理</a>工具，专为简化数据库的管理及降低系统管理成本而设。它的设计符合<a href="https://baike.baidu.com/item/%E6%95%B0%E6%8D%AE%E5%BA%93%E7%AE%A1%E7%90%86%E5%91%98/1216449" target="_blank" rel="noopener">数据库管理员</a>、开发人员及中小企业的需要。Navicat 是以直觉化的<a href="https://baike.baidu.com/item/%E5%9B%BE%E5%BD%A2%E7%94%A8%E6%88%B7%E7%95%8C%E9%9D%A2/3352324" target="_blank" rel="noopener">图形用户界面</a>而建的，让你可以以安全并且简单的方式创建、组织、访问并共用信息。</p><h4 id="官方网址：Navicat"><a href="#官方网址：Navicat" class="headerlink" title="官方网址：Navicat"></a>官方网址：<a href="https://www.navicat.com/en/" target="_blank" rel="noopener">Navicat</a></h4><p><img src="https://ws4.sinaimg.cn/large/006tNc79ly1ft2mcnzraej31kw0ns4qp.jpg" alt=""></p>]]></content>
    
    <summary type="html">
    
      自己使用Mac OS X系统也有一段时间了，也使用过许多MAC上好用的软件，下面是我对使用过和了解的软件资源一些整理。以后可能也会接触使用新的软件，我也会对文章进行更新。
    
    </summary>
    
      <category term="MAC" scheme="http://blogwenbo.com/categories/MAC/"/>
    
    
      <category term="MAC" scheme="http://blogwenbo.com/tags/MAC/"/>
    
      <category term="DMG" scheme="http://blogwenbo.com/tags/DMG/"/>
    
  </entry>
  
  <entry>
    <title>iOS-WBCategories</title>
    <link href="http://blogwenbo.com/2018/07/08/iOS-WBCategories/"/>
    <id>http://blogwenbo.com/2018/07/08/iOS-WBCategories/</id>
    <published>2018-07-08T09:26:13.000Z</published>
    <updated>2018-07-08T09:31:50.794Z</updated>
    
    <content type="html"><![CDATA[<p class="description"></p><a id="more"></a><h3 id="更新日志"><a href="#更新日志" class="headerlink" title="更新日志"></a>更新日志</h3><blockquote><p>2018-06-19 整理文章目录结构，更新常用分类方法</p></blockquote><h3 id="一、官方介绍"><a href="#一、官方介绍" class="headerlink" title="一、官方介绍"></a>一、官方介绍</h3><blockquote><p>You use categories to define additional methods of an existing class—even one whose source code is unavailable to you—without subclassing. You typically use a category to add methods to an existing class, such as one defined in the Cocoa frameworks. The added methods are inherited by subclasses and are indistinguishable at runtime from the original methods of the class. You can also use categories of your own classes to:</p></blockquote><blockquote><ul><li>Distribute the implementation of your own classes into separate source files—for example, you could group the methods of a large class into several categories and put each category in a different file.</li><li>Declare private methods.</li></ul></blockquote><blockquote><p>You add methods to a class by declaring them in an interface file under a category name and defining them in an implementation file under the same name. The category name indicates that the methods are an extension to a class declared elsewhere, not a new class.</p></blockquote><h3 id="二、WBCategories"><a href="#二、WBCategories" class="headerlink" title="二、WBCategories"></a>二、<a href="https://github.com/wenmobo/WBCategories" target="_blank" rel="noopener">WBCategories</a></h3><p>在我们日常开发中，通常我们会把项目中常用一些公用的方法抽离出来，写在分类文件当中，<strong>WBCategories</strong>这个工程就是我平时开发过程中常用整理的分类，分类文件主要包含系统框架和宏定义如下：</p><blockquote><ul><li><strong>UIKit</strong></li><li><strong>Foundation</strong></li><li><strong>AVFoundation</strong></li><li><strong>CoreTelephony</strong></li><li><strong>QuartzCore</strong></li><li><strong>常用Macro</strong></li></ul></blockquote><p>最开始这些分类文件也挺零散的，大部分分类方法都是在网上查询资料，也参考了一些大神在Github上开源库，有些分类方法也是自己写的。下面我会介绍上面框架下常用的一些分类方法。</p><h3 id="三、Foundation"><a href="#三、Foundation" class="headerlink" title="三、Foundation"></a>三、Foundation</h3><ul><li><p>计算文字size，手动布局用需计算文字size</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">- (CGSize)wb_sizeForFont:(UIFont *)font</span><br><span class="line">                    size:(CGSize)size</span><br><span class="line">                    mode:(NSLineBreakMode)lineBreakMode &#123;</span><br><span class="line">    CGSize result;</span><br><span class="line">    if (!font) font = [UIFont systemFontOfSize:12];</span><br><span class="line">    if ([self respondsToSelector:@selector(boundingRectWithSize:options:attributes:context:)]) &#123;</span><br><span class="line">        NSMutableDictionary *attr = [NSMutableDictionary new];</span><br><span class="line">        attr[NSFontAttributeName] = font;</span><br><span class="line">        if (lineBreakMode != NSLineBreakByWordWrapping) &#123;</span><br><span class="line">            NSMutableParagraphStyle *paragraphStyle = [NSMutableParagraphStyle new];</span><br><span class="line">            paragraphStyle.lineBreakMode = lineBreakMode;</span><br><span class="line">            attr[NSParagraphStyleAttributeName] = paragraphStyle;</span><br><span class="line">        &#125;</span><br><span class="line">        CGRect rect = [self boundingRectWithSize:size</span><br><span class="line">                                         options:NSStringDrawingUsesLineFragmentOrigin | NSStringDrawingUsesFontLeading</span><br><span class="line">                                      attributes:attr context:nil];</span><br><span class="line">        result = rect.size;</span><br><span class="line">    &#125; else &#123;</span><br><span class="line">#pragma clang diagnostic push</span><br><span class="line">#pragma clang diagnostic ignored &quot;-Wdeprecated-declarations&quot;</span><br><span class="line">        result = [self sizeWithFont:font constrainedToSize:size lineBreakMode:lineBreakMode];</span><br><span class="line">#pragma clang diagnostic pop</span><br><span class="line">    &#125;</span><br><span class="line">    return result;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>字典，数组，可变字符串防越界，主要是通过Runtime实现，在数据越界的情况下APP不会闪退奔溃，还能正常运行，由于篇幅的关系只贴数组的实现方法</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"> + (void)load &#123;</span><br><span class="line">    static dispatch_once_t onceToken;</span><br><span class="line">    dispatch_once(&amp;onceToken, ^&#123;</span><br><span class="line">        [NSObject swizzleInstanceMethodWithOriginSel:@selector(objectAtIndex:)</span><br><span class="line">                                         swizzledSel:@selector(_wb_safe_ZeroObjectAtIndex:)</span><br><span class="line">                                           selfClass:NSClassFromString(@&quot;__NSArray0&quot;)];</span><br><span class="line">        [NSObject swizzleInstanceMethodWithOriginSel:@selector(objectAtIndex:)</span><br><span class="line">                                         swizzledSel:@selector(_wb_safe_singleObjectAtIndex:)</span><br><span class="line">                                           selfClass:NSClassFromString(@&quot;__NSSingleObjectArrayI&quot;)];</span><br><span class="line">        [NSObject swizzleInstanceMethodWithOriginSel:@selector(objectAtIndex:)</span><br><span class="line">                                         swizzledSel:@selector(_wb_safe_ObjectAtIndex:)</span><br><span class="line">                                           selfClass:NSClassFromString(@&quot;__NSArrayI&quot;)];</span><br><span class="line">        [NSObject swizzleInstanceMethodWithOriginSel:@selector(objectAtIndexedSubscript:)</span><br><span class="line">                                         swizzledSel:@selector(_wb_safe_objectAtIndexedSubscript:)</span><br><span class="line">                                           selfClass:NSClassFromString(@&quot;__NSArrayI&quot;)];</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#pragma mark &lt; Exchage Method &gt;</span><br><span class="line">- (id)_wb_safe_ZeroObjectAtIndex:(NSUInteger)index &#123;</span><br><span class="line">    if (index &gt;= self.count) &#123;</span><br><span class="line">        return nil;</span><br><span class="line">    &#125;</span><br><span class="line">    return [self _wb_safe_ZeroObjectAtIndex:index];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">- (id)_wb_safe_ObjectAtIndex:(NSUInteger)index &#123;</span><br><span class="line">    if (index &gt;= self.count) &#123;</span><br><span class="line">        return nil;</span><br><span class="line">    &#125;</span><br><span class="line">    return [self _wb_safe_ObjectAtIndex:index];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">- (id)_wb_safe_singleObjectAtIndex:(NSUInteger)index &#123;</span><br><span class="line">    if (index &gt;= self.count) &#123;</span><br><span class="line">        return nil;</span><br><span class="line">    &#125;</span><br><span class="line">    return [self _wb_safe_singleObjectAtIndex:index];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">- (id)_wb_safe_objectAtIndexedSubscript:(NSUInteger)index &#123;</span><br><span class="line">    if (index &gt;= self.count) &#123;</span><br><span class="line">        return nil;</span><br><span class="line">    &#125;</span><br><span class="line">    return [self _wb_safe_objectAtIndexedSubscript:index];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>计算时间差，类似朋友圈动态时间显示需要用到</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">+ (NSString *)compareCurrentTimeWithTimeString:(NSString *)timeString &#123;</span><br><span class="line">    if (!timeString) return nil;</span><br><span class="line">    NSDateFormatter *formatter = [[WBDateFormatterPool shareInstance] wb_dateFormatterWithFormat:@&quot;yyyy-MM-dd HH:mm:ss&quot;];</span><br><span class="line">    NSDate *nowDate = [NSDate date];</span><br><span class="line">    NSDate *compareDate = [formatter dateFromString:timeString];</span><br><span class="line">    /** &lt; 时间差转换成秒 &gt; */</span><br><span class="line">    long delta = (long)[nowDate timeIntervalSinceDate:compareDate];</span><br><span class="line">    if (delta &lt;= 0 )return timeString;</span><br><span class="line">    if(delta / (60 * 60 * 24 * 365) &gt; 0) return [NSString stringWithFormat:@&quot;%ld年前&quot;, delta / (60 * 60 * 24 * 365)];</span><br><span class="line">    if (delta / (60 * 60 * 24 * 30) &gt; 0) return [NSString stringWithFormat:@&quot;%ld月前&quot;, delta / (60 * 60 * 24 * 30)];</span><br><span class="line">    if (delta / (60 * 60 * 24 * 7) &gt; 0) return [NSString stringWithFormat:@&quot;%ld周前&quot;, delta / (60 * 60 * 24 * 7)];</span><br><span class="line">    if (delta / (60 * 60 * 24) &gt; 0) return [NSString stringWithFormat:@&quot;%ld天前&quot;, delta / (60 * 60 * 24)];</span><br><span class="line">    if (delta / (60 * 60) &gt; 0) return [NSString stringWithFormat:@&quot;%ld小时前&quot;, delta / (60 * 60)];</span><br><span class="line">    if (delta / (60) &gt; 0) return [NSString stringWithFormat:@&quot;%ld分钟前&quot;, delta / (60)];</span><br><span class="line">    return @&quot;刚刚&quot;;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h3 id="四、UIKit"><a href="#四、UIKit" class="headerlink" title="四、UIKit"></a>四、UIKit</h3><ul><li><p>图片压缩上传</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br></pre></td><td class="code"><pre><span class="line">#pragma mark --------  图片压缩  --------</span><br><span class="line">+ (NSData *)wb_compressOriginalImage:(UIImage *)image</span><br><span class="line">                 toMaxDataSizeKBytes:(CGFloat)size &#123;</span><br><span class="line">    NSData *data = UIImageJPEGRepresentation(image, 1.0);</span><br><span class="line">    CGFloat dataKBytes = data.length / 1000.0;</span><br><span class="line">    CGFloat maxQuality = 0.9f;</span><br><span class="line">    CGFloat lastData = dataKBytes;</span><br><span class="line">    while (dataKBytes &gt; size &amp;&amp; maxQuality &gt; 0.01f) &#123;</span><br><span class="line">        maxQuality = maxQuality - 0.01f;</span><br><span class="line">        data = UIImageJPEGRepresentation(image, maxQuality);</span><br><span class="line">        dataKBytes = data.length / 1000.0;</span><br><span class="line">        if (lastData == dataKBytes) &#123;</span><br><span class="line">            break;</span><br><span class="line">        &#125;else&#123;</span><br><span class="line">            lastData = dataKBytes;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    return data;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">- (NSData *)wb_compressImageWithQuality:(CGFloat)quality &#123;</span><br><span class="line">    CGSize size = [self resizeImageWithBoundary:kBoundary];</span><br><span class="line">    UIImage *reImage = [self resizeImageWithSize:size];</span><br><span class="line">    NSData *imageData = UIImageJPEGRepresentation(reImage, quality);</span><br><span class="line">    NSLog(@&quot;压缩后图片大小 = %luKB&quot;,imageData.length / 1000);</span><br><span class="line">    return imageData;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">- (CGSize)resizeImageWithBoundary:(CGFloat)boundary &#123;</span><br><span class="line">    CGFloat width = self.size.width;</span><br><span class="line">    CGFloat height = self.size.width;</span><br><span class="line">    </span><br><span class="line">    if (width &lt; boundary || height &lt; boundary) return CGSizeMake(width, height);</span><br><span class="line">    </span><br><span class="line">    CGFloat ratio = MAX(width, height) / MIN(width, height);</span><br><span class="line">    if (ratio &lt;= 2) &#123;</span><br><span class="line">        // Set the larger value to the boundary, the smaller the value of the compression</span><br><span class="line">        CGFloat x = MAX(width, height) / boundary;</span><br><span class="line">        if (width &gt; height) &#123;</span><br><span class="line">            width = boundary;</span><br><span class="line">            height = height / x;</span><br><span class="line">        &#125;else &#123;</span><br><span class="line">            height = boundary;</span><br><span class="line">            width = width / x;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;else &#123;</span><br><span class="line">        // width, height &gt; 1280</span><br><span class="line">        if (MIN(width, height) &gt;= boundary) &#123;</span><br><span class="line">            // Set the smaller value to the boundary, and the larger value is compressed</span><br><span class="line">            CGFloat x = MIN(width, height) / boundary;</span><br><span class="line">            if (width &lt; height) &#123;</span><br><span class="line">                width = boundary;</span><br><span class="line">                height = height / x;</span><br><span class="line">            &#125;else &#123;</span><br><span class="line">                height = boundary;</span><br><span class="line">                width = width / x;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    return CGSizeMake(width, height);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">- (UIImage *)resizeImageWithSize:(CGSize)size &#123;</span><br><span class="line">    CGRect rect = CGRectMake(0, 0, size.width, size.height);</span><br><span class="line">    UIImage *newImage;</span><br><span class="line">    UIGraphicsBeginImageContext(rect.size);</span><br><span class="line">    newImage = [UIImage imageWithCGImage:self.CGImage</span><br><span class="line">                                   scale:1.f</span><br><span class="line">                             orientation:self.imageOrientation];</span><br><span class="line">    [newImage drawInRect:rect];</span><br><span class="line">    newImage = UIGraphicsGetImageFromCurrentImageContext();</span><br><span class="line">    UIGraphicsEndImageContext();</span><br><span class="line">    return newImage;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>扩大按钮点击区域</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">- (UIEdgeInsets)wb_touchAreaInsets</span><br><span class="line">&#123;</span><br><span class="line">    return [objc_getAssociatedObject(self, @selector(wb_touchAreaInsets)) UIEdgeInsetsValue];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> *  @brief  设置按钮额外热区</span><br><span class="line"> */</span><br><span class="line">- (void)setWb_touchAreaInsets:(UIEdgeInsets)touchAreaInsets</span><br><span class="line">&#123;</span><br><span class="line">    NSValue *value = [NSValue valueWithUIEdgeInsets:touchAreaInsets];</span><br><span class="line">    objc_setAssociatedObject(self, @selector(wb_touchAreaInsets), value, OBJC_ASSOCIATION_RETAIN_NONATOMIC);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">- (BOOL)pointInside:(CGPoint)point withEvent:(UIEvent *)event</span><br><span class="line">&#123;</span><br><span class="line">    UIEdgeInsets touchAreaInsets = self.wb_touchAreaInsets;</span><br><span class="line">    CGRect bounds = self.bounds;</span><br><span class="line">    bounds = CGRectMake(bounds.origin.x - touchAreaInsets.left,</span><br><span class="line">                        bounds.origin.y - touchAreaInsets.top,</span><br><span class="line">                        bounds.size.width + touchAreaInsets.left + touchAreaInsets.right,</span><br><span class="line">                        bounds.size.height + touchAreaInsets.top + touchAreaInsets.bottom);</span><br><span class="line">    return CGRectContainsPoint(bounds, point);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>按钮倒计时，GCD定时器实现</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">- (void)wb_startTime:(NSInteger )timeout</span><br><span class="line">               title:(NSString *)tittle</span><br><span class="line">          waitTittle:(NSString *)waitTittle &#123;</span><br><span class="line">    __block NSInteger timeOut=timeout; //倒计时时间</span><br><span class="line">    dispatch_queue_t queue = dispatch_get_global_queue(DISPATCH_QUEUE_PRIORITY_DEFAULT, 0);</span><br><span class="line">    dispatch_source_t _timer = dispatch_source_create(DISPATCH_SOURCE_TYPE_TIMER, 0, 0,queue);</span><br><span class="line">    dispatch_source_set_timer(_timer,dispatch_walltime(NULL, 0),1.0*NSEC_PER_SEC, 0); //每秒执行</span><br><span class="line">    dispatch_source_set_event_handler(_timer, ^&#123;</span><br><span class="line">        if(timeOut&lt;=0)&#123; //倒计时结束，关闭</span><br><span class="line">            dispatch_source_cancel(_timer);</span><br><span class="line">            dispatch_async(dispatch_get_main_queue(), ^&#123;</span><br><span class="line">                //设置界面的按钮显示 根据自己需求设置</span><br><span class="line">                [self setTitle:tittle forState:UIControlStateNormal];</span><br><span class="line">                self.userInteractionEnabled = YES;</span><br><span class="line">            &#125;);</span><br><span class="line">        &#125;else&#123;</span><br><span class="line">            //            int minutes = timeout / 60;</span><br><span class="line">            int seconds = timeOut % 60;</span><br><span class="line">            NSString *strTime = [NSString stringWithFormat:@&quot;%.2d&quot;, seconds];</span><br><span class="line">            dispatch_async(dispatch_get_main_queue(), ^&#123;</span><br><span class="line">                //设置界面的按钮显示 根据自己需求设置</span><br><span class="line">                NSLog(@&quot;____%@&quot;,strTime);</span><br><span class="line">                [self setTitle:[NSString stringWithFormat:@&quot;%@%@&quot;,strTime,waitTittle] forState:UIControlStateNormal];</span><br><span class="line">                self.userInteractionEnabled = NO;</span><br><span class="line">                </span><br><span class="line">            &#125;);</span><br><span class="line">            timeOut--;</span><br><span class="line">            </span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">    dispatch_resume(_timer);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>SDWebImageView设置图片交叉渐变效果</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">- (void)wb_setImageWithFadeAnimation:(NSString *)url</span><br><span class="line">                    placeholderImage:(NSString *)placeholder</span><br><span class="line">                            duration:(CGFloat)duration &#123;</span><br><span class="line">    __weak typeof(self) weakSelf = self;</span><br><span class="line">    [self sd_setImageWithURL:[NSURL URLWithString:url]</span><br><span class="line">            placeholderImage:[UIImage imageNamed:placeholder]</span><br><span class="line">                   completed:^(UIImage * _Nullable image, NSError * _Nullable error, SDImageCacheType cacheType, NSURL * _Nullable imageURL) &#123;</span><br><span class="line">                       if (image &amp;&amp; cacheType == SDImageCacheTypeNone) &#123;</span><br><span class="line">                           /**  &lt; 添加交叉渐变动画 &gt;  */</span><br><span class="line">                           CATransition *animation = [CATransition animation];</span><br><span class="line">                           animation.type = kCATransitionFade;</span><br><span class="line">                           animation.duration = duration;</span><br><span class="line">                           [weakSelf.layer addAnimation:animation forKey:@&quot;fadeAnimation&quot;];</span><br><span class="line">                       &#125;</span><br><span class="line">    &#125;];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>获取设备uuid</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">/**</span><br><span class="line"> also known as udid/uniqueDeviceIdentifier but this doesn&apos;t persists to system reset,we can use it to identifier user.</span><br><span class="line"></span><br><span class="line"> @return uuid string.</span><br><span class="line"> */</span><br><span class="line">- (NSString *)wb_uuid;</span><br></pre></td></tr></table></figure></li><li><p>根据颜色生成图片</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">+ (nullable UIImage *)wb_imageWithColor:(UIColor *)color</span><br><span class="line">                                   size:(CGSize)size &#123;</span><br><span class="line">    if (!color || size.width &lt;= 0 || size.height &lt;= 0) return nil;</span><br><span class="line">    CGRect rect = CGRectMake(0.0f, 0.0f, size.width, size.height);</span><br><span class="line">    UIGraphicsBeginImageContextWithOptions(rect.size, NO, 0);</span><br><span class="line">    CGContextRef context = UIGraphicsGetCurrentContext();</span><br><span class="line">    CGContextSetFillColorWithColor(context, color.CGColor);</span><br><span class="line">    CGContextFillRect(context, rect);</span><br><span class="line">    UIImage *image = UIGraphicsGetImageFromCurrentImageContext();</span><br><span class="line">    UIGraphicsEndImageContext();</span><br><span class="line">    return image;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>从十六进制字符串获取颜色</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line">+ (UIColor *)wb_colorWithHexString:(NSString *)color</span><br><span class="line">                             alpha:(CGFloat)alpha &#123;</span><br><span class="line">    //删除字符串中的空格</span><br><span class="line">    NSString *cString = [[color stringByTrimmingCharactersInSet:[NSCharacterSet whitespaceAndNewlineCharacterSet]] uppercaseString];</span><br><span class="line">    // String should be 6 or 8 characters</span><br><span class="line">    if ([cString length] &lt; 6)</span><br><span class="line">    &#123;</span><br><span class="line">        return [UIColor clearColor];</span><br><span class="line">    &#125;</span><br><span class="line">    // strip 0X if it appears</span><br><span class="line">    //如果是0x开头的，那么截取字符串，字符串从索引为2的位置开始，一直到末尾</span><br><span class="line">    if ([cString hasPrefix:@&quot;0X&quot;])</span><br><span class="line">    &#123;</span><br><span class="line">        cString = [cString substringFromIndex:2];</span><br><span class="line">    &#125;</span><br><span class="line">    //如果是#开头的，那么截取字符串，字符串从索引为1的位置开始，一直到末尾</span><br><span class="line">    if ([cString hasPrefix:@&quot;#&quot;])</span><br><span class="line">    &#123;</span><br><span class="line">        cString = [cString substringFromIndex:1];</span><br><span class="line">    &#125;</span><br><span class="line">    if ([cString length] != 6)</span><br><span class="line">    &#123;</span><br><span class="line">        return [UIColor clearColor];</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    // Separate into r, g, b substrings</span><br><span class="line">    NSRange range;</span><br><span class="line">    range.location = 0;</span><br><span class="line">    range.length = 2;</span><br><span class="line">    //r</span><br><span class="line">    NSString *rString = [cString substringWithRange:range];</span><br><span class="line">    //g</span><br><span class="line">    range.location = 2;</span><br><span class="line">    NSString *gString = [cString substringWithRange:range];</span><br><span class="line">    //b</span><br><span class="line">    range.location = 4;</span><br><span class="line">    NSString *bString = [cString substringWithRange:range];</span><br><span class="line">    </span><br><span class="line">    // Scan values</span><br><span class="line">    unsigned int r, g, b;</span><br><span class="line">    [[NSScanner scannerWithString:rString] scanHexInt:&amp;r];</span><br><span class="line">    [[NSScanner scannerWithString:gString] scanHexInt:&amp;g];</span><br><span class="line">    [[NSScanner scannerWithString:bString] scanHexInt:&amp;b];</span><br><span class="line">    return [UIColor colorWithRed:((float)r / 255.0f) green:((float)g / 255.0f) blue:((float)b / 255.0f) alpha:alpha];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>设置UITextView占位文字，通过Runtime实现</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">@property (nonatomic, strong) IBInspectable NSString *placeholder;</span><br><span class="line">@property (nonatomic, strong) NSAttributedString *attributedPlaceholder;</span><br><span class="line">@property (nonatomic, strong) IBInspectable UIColor *placeholderColor;</span><br><span class="line"></span><br><span class="line">+ (UIColor *)defaultPlaceholderColor;</span><br></pre></td></tr></table></figure></li></ul><h3 id="五、QuartzCore"><a href="#五、QuartzCore" class="headerlink" title="五、QuartzCore"></a>五、QuartzCore</h3><ul><li>spring动画<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">- (void)wb_springAnimation:(NSTimeInterval)duration &#123;</span><br><span class="line">    CAKeyframeAnimation *popAnimation = [CAKeyframeAnimation animationWithKeyPath:@&quot;transform&quot;];</span><br><span class="line">    popAnimation.duration = duration;</span><br><span class="line">    popAnimation.values = @[[NSValue valueWithCATransform3D:CATransform3DMakeScale(0.01f, 0.01f, 1.0f)],</span><br><span class="line">                            [NSValue valueWithCATransform3D:CATransform3DMakeScale(1.1f, 1.1f, 1.0f)],</span><br><span class="line">                            [NSValue valueWithCATransform3D:CATransform3DMakeScale(0.9f, 0.9f, 1.0f)],</span><br><span class="line">                            [NSValue valueWithCATransform3D:CATransform3DIdentity]];</span><br><span class="line">    popAnimation.keyTimes = @[@0.2f, @0.5f, @0.75f, @1.0f];</span><br><span class="line">    popAnimation.timingFunctions = @[[CAMediaTimingFunction functionWithName:kCAMediaTimingFunctionEaseInEaseOut],</span><br><span class="line">                                     [CAMediaTimingFunction functionWithName:kCAMediaTimingFunctionEaseInEaseOut],</span><br><span class="line">                                     [CAMediaTimingFunction functionWithName:kCAMediaTimingFunctionEaseInEaseOut]];</span><br><span class="line">    popAnimation.removedOnCompletion = YES;</span><br><span class="line">    [[self layer] addAnimation:popAnimation forKey:nil];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h3 id="六、Marco"><a href="#六、Marco" class="headerlink" title="六、Marco"></a>六、Marco</h3><ul><li><p>设置平方字体</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">/**  &lt; 设置平方字体PingFangSC &gt;  */</span><br><span class="line">#define kWB_PFR kWB_SYSTEM_VERSION_9_OR_LATER ? @&quot;PingFangSC-Regular&quot; : @&quot;PingFang SC&quot;</span><br></pre></td></tr></table></figure></li><li><p>清除警告宏</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">/** &lt;&lt; 忽略PerformSelector警告 &gt; */</span><br><span class="line">#define SUPPRESS_PerformSelectorLeak_WARNING(Stuff) \</span><br><span class="line">do &#123; \</span><br><span class="line">_Pragma(&quot;clang diagnostic push&quot;) \</span><br><span class="line">_Pragma(&quot;clang diagnostic ignored \&quot;-Warc-performSelector-leaks\&quot;&quot;) \</span><br><span class="line">Stuff; \</span><br><span class="line">_Pragma(&quot;clang diagnostic pop&quot;) \</span><br><span class="line">&#125; while (0)</span><br><span class="line"></span><br><span class="line">/** &lt;&lt; 忽略未定义方法警告 &gt; */</span><br><span class="line">#define  SUPPRESS_Undeclaredselector_WARNING(Stuff) \</span><br><span class="line">do &#123; \</span><br><span class="line">_Pragma(&quot;clang diagnostic push&quot;) \</span><br><span class="line">_Pragma(&quot;clang diagnostic ignored \&quot;-Wundeclared-selector\&quot;&quot;) \</span><br><span class="line">Stuff; \</span><br><span class="line">_Pragma(&quot;clang diagnostic pop&quot;) \</span><br><span class="line">&#125; while (0)</span><br><span class="line"></span><br><span class="line">/** &lt;&lt; 忽略过期API警告 &gt; */</span><br><span class="line">#define SUPPRESS_DEPRECATED_WARNING(Stuff) \</span><br><span class="line">do &#123; \</span><br><span class="line">_Pragma(&quot;clang diagnostic push&quot;) \</span><br><span class="line">_Pragma(&quot;clang diagnostic ignored \&quot;-Wdeprecated-declarations\&quot;&quot;) \</span><br><span class="line">Stuff; \</span><br><span class="line">_Pragma(&quot;clang diagnostic pop&quot;) \</span><br><span class="line">&#125; while (0)</span><br></pre></td></tr></table></figure></li><li><p>iOS 11滚动视图适配</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">/**  &lt; Adaptive  &gt;  */</span><br><span class="line">#define  kWB_AdjustsScrollViewInsets_NO(scrollView,vc)\</span><br><span class="line">do &#123; \</span><br><span class="line">_Pragma(&quot;clang diagnostic push&quot;) \</span><br><span class="line">_Pragma(&quot;clang diagnostic ignored \&quot;-Warc-performSelector-leaks\&quot;&quot;) \</span><br><span class="line">if ([UIScrollView instancesRespondToSelector:NSSelectorFromString(@&quot;setContentInsetAdjustmentBehavior:&quot;)]) &#123;\</span><br><span class="line">[scrollView   performSelector:NSSelectorFromString(@&quot;setContentInsetAdjustmentBehavior:&quot;) withObject:@(2)];\</span><br><span class="line">&#125; else &#123;\</span><br><span class="line">vc.automaticallyAdjustsScrollViewInsets = NO;\</span><br><span class="line">&#125;\</span><br><span class="line">_Pragma(&quot;clang diagnostic pop&quot;) \</span><br><span class="line">&#125; while (0)</span><br></pre></td></tr></table></figure></li><li><p>适配宏</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">/**  &lt; 屏幕适配 ipone6/6s 控件宽高 字体大小都可以用这个宏 &gt;  */</span><br><span class="line">#define kWB_AUTOLAYOUTSIZE(size) ((size) * (SCREEN_WIDTH / 375))</span><br></pre></td></tr></table></figure></li><li><p>iPhone X相关</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">/**  &lt; 判断是否是iPhone X &gt;  */</span><br><span class="line">#define kWB_IS_IPHONE_X ([UIScreen instancesRespondToSelector:@selector(currentMode)] ? CGSizeEqualToSize(CGSizeMake(1125, 2436), [[UIScreen mainScreen] currentMode].size) : NO)</span><br><span class="line"></span><br><span class="line">/**  &lt; 导航栏高度 无largeTitle &gt;  */</span><br><span class="line">#define kWB_NAVIGATIONBAR_HEIGHT 44</span><br><span class="line">/**  &lt; 状态栏高度 &gt;  */</span><br><span class="line">#define kWB_STATUSBAR_HEIGHT [UIApplication sharedApplication].statusBarFrame.size.height</span><br><span class="line">/**  &lt; 整个导航栏高度 &gt;  */</span><br><span class="line">#define kWB_NAVI_HEIGHT (kWB_IS_IPHONE_X ? (88) : (64))</span><br><span class="line">/**  &lt; 标签栏高度 &gt;  */</span><br><span class="line">#define kWB_TABBAR_HEIGHT (kWB_IS_IPHONE_X ? (83) : (49))</span><br><span class="line">/**  &lt; iOS 11 底部安全域距离 &gt;  */</span><br><span class="line">#define kWB_BOTTOM_SAFEAREA_HEIGHT (kWB_IS_IPHONE_X ? (34) : (0))</span><br><span class="line"></span><br><span class="line">/**  &lt; 判断 iOS 11 或更高的系统版本 &gt;  */</span><br><span class="line">#define kWB_SYSTEM_VERSION_11_OR_LATER SYSTEM_VERSION_GREATER_THAN_OR_EQUAL_TO(@&quot;11.0&quot;)</span><br></pre></td></tr></table></figure></li><li><p>单例宏定义</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br></pre></td><td class="code"><pre><span class="line">/**  &lt; 单例ARC&amp;MRC宏定义 &gt;  */</span><br><span class="line">/**  &lt; .h &gt;  */</span><br><span class="line">#define singletonH(name) +(instancetype)share##name;</span><br><span class="line"></span><br><span class="line">/**  &lt; .m &gt;  */</span><br><span class="line">#if __has_feature(objc_arc)</span><br><span class="line">//ARC</span><br><span class="line">#define singleM(name) static id _instance;\</span><br><span class="line">+(instancetype)allocWithZone:(struct _NSZone *)zone\</span><br><span class="line">&#123;\</span><br><span class="line">static dispatch_once_t onceToken;\</span><br><span class="line">dispatch_once(&amp;onceToken, ^&#123;\</span><br><span class="line">_instance = [super allocWithZone:zone];\</span><br><span class="line">&#125;);\</span><br><span class="line">return _instance;\</span><br><span class="line">&#125;\</span><br><span class="line">\</span><br><span class="line">+(instancetype)share##name\</span><br><span class="line">&#123;\</span><br><span class="line">return [[self alloc]init];\</span><br><span class="line">&#125;\</span><br><span class="line">-(id)copyWithZone:(NSZone *)zone\</span><br><span class="line">&#123;\</span><br><span class="line">return _instance;\</span><br><span class="line">&#125;\</span><br><span class="line">\</span><br><span class="line">-(id)mutableCopyWithZone:(NSZone *)zone\</span><br><span class="line">&#123;\</span><br><span class="line">return _instance;\</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">#else</span><br><span class="line">//非ARC</span><br><span class="line">#define singleM static id _instance;\</span><br><span class="line">+(instancetype)allocWithZone:(struct _NSZone *)zone\</span><br><span class="line">&#123;\</span><br><span class="line">static dispatch_once_t onceToken;\</span><br><span class="line">dispatch_once(&amp;onceToken, ^&#123;\</span><br><span class="line">_instance = [super allocWithZone:zone];\</span><br><span class="line">&#125;);\</span><br><span class="line">return _instance;\</span><br><span class="line">&#125;\</span><br><span class="line">\</span><br><span class="line">+(instancetype)shareTools\</span><br><span class="line">&#123;\</span><br><span class="line">return [[self alloc]init];\</span><br><span class="line">&#125;\</span><br><span class="line">-(id)copyWithZone:(NSZone *)zone\</span><br><span class="line">&#123;\</span><br><span class="line">return _instance;\</span><br><span class="line">&#125;\</span><br><span class="line">-(id)mutableCopyWithZone:(NSZone *)zone\</span><br><span class="line">&#123;\</span><br><span class="line">return _instance;\</span><br><span class="line">&#125;\</span><br><span class="line">-(oneway void)release\</span><br><span class="line">&#123;\</span><br><span class="line">&#125;\</span><br><span class="line">\</span><br><span class="line">-(instancetype)retain\</span><br><span class="line">&#123;\</span><br><span class="line">return _instance;\</span><br><span class="line">&#125;\</span><br><span class="line">\</span><br><span class="line">-(NSUInteger)retainCount\</span><br><span class="line">&#123;\</span><br><span class="line">return MAXFLOAT;\</span><br><span class="line">&#125;</span><br><span class="line">#endif</span><br></pre></td></tr></table></figure></li><li><p>Block防止循环引用宏定义</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">#ifndef weakify</span><br><span class="line">    #if DEBUG</span><br><span class="line">        #if __has_feature(objc_arc)</span><br><span class="line">        #define weakify(object) autoreleasepool&#123;&#125; __weak __typeof__(object) weak##_##object = object;</span><br><span class="line">        #else</span><br><span class="line">        #define weakify(object) autoreleasepool&#123;&#125; __block __typeof__(object) block##_##object = object;</span><br><span class="line">        #endif</span><br><span class="line">    #else</span><br><span class="line">        #if __has_feature(objc_arc)</span><br><span class="line">        #define weakify(object) try&#123;&#125; @finally&#123;&#125; &#123;&#125; __weak __typeof__(object) weak##_##object = object;</span><br><span class="line">        #else</span><br><span class="line">        #define weakify(object) try&#123;&#125; @finally&#123;&#125; &#123;&#125; __block __typeof__(object) block##_##object = object;</span><br><span class="line">        #endif</span><br><span class="line">    #endif</span><br><span class="line">#endif</span><br><span class="line"></span><br><span class="line">#ifndef strongify</span><br><span class="line">    #if DEBUG</span><br><span class="line">        #if __has_feature(objc_arc)</span><br><span class="line">        #define strongify(object) autoreleasepool&#123;&#125; __typeof__(object) object = weak##_##object;</span><br><span class="line">        #else</span><br><span class="line">        #define strongify(object) autoreleasepool&#123;&#125; __typeof__(object) object = block##_##object;</span><br><span class="line">        #endif</span><br><span class="line">    #else</span><br><span class="line">        #if __has_feature(objc_arc)</span><br><span class="line">        #define strongify(object) try&#123;&#125; @finally&#123;&#125; __typeof__(object) object = weak##_##object;</span><br><span class="line">        #else</span><br><span class="line">        #define strongify(object) try&#123;&#125; @finally&#123;&#125; __typeof__(object) object = block##_##object;</span><br><span class="line">        #endif</span><br><span class="line">    #endif</span><br><span class="line">#endif</span><br></pre></td></tr></table></figure></li></ul><h3 id="七、结语"><a href="#七、结语" class="headerlink" title="七、结语"></a>七、结语</h3><p>上面这些方法是我在项目中使用的较多的方法，当然分类方法也不止我贴出的这些，有兴趣的朋友可以到我的<a href="https://github.com/wenmobo" target="_blank" rel="noopener">GitHub</a>上查看，<a href="https://github.com/wenmobo/WBCategories" target="_blank" rel="noopener">WBCategories</a>有些分类是我自己写的，如果有写的不对的地方，欢迎批评指正，我也会第一时间修改，如果对你有帮助也请Star一个吧。Finally，I will continue update it!</p><h3 id="参考博客"><a href="#参考博客" class="headerlink" title="参考博客"></a>参考博客</h3><ul><li><a href="https://www.jianshu.com/p/535d1574cb86" target="_blank" rel="noopener">iOS 关于Category</a></li><li><a href="https://www.jianshu.com/p/e917e7d95f69" target="_blank" rel="noopener">ios-category解析</a></li></ul>]]></content>
    
    <summary type="html">
    
      在日常开发过程中，我们也经常用到分类。分类（Category）是OC中的特有语法，它是表示一个指向分类的结构体的指针。原则上它只能增加方法，不能增加成员（实例）变量
    
    </summary>
    
      <category term="iOS" scheme="http://blogwenbo.com/categories/iOS/"/>
    
    
      <category term="iOS" scheme="http://blogwenbo.com/tags/iOS/"/>
    
      <category term="Objective-C" scheme="http://blogwenbo.com/tags/Objective-C/"/>
    
  </entry>
  
  <entry>
    <title>MAC上iTerm 2安装与使用</title>
    <link href="http://blogwenbo.com/2018/07/08/MAC%E4%B8%8AiTerm-2%E5%AE%89%E8%A3%85%E4%B8%8E%E4%BD%BF%E7%94%A8/"/>
    <id>http://blogwenbo.com/2018/07/08/MAC上iTerm-2安装与使用/</id>
    <published>2018-07-08T09:20:04.000Z</published>
    <updated>2018-07-08T09:25:55.244Z</updated>
    
    <content type="html"><![CDATA[<p class="description"></p><a id="more"></a><h3 id="更新日志"><a href="#更新日志" class="headerlink" title="更新日志"></a>更新日志</h3><ul><li>2018-05-20 <a href="https://blog.csdn.net/Mona_233/article/details/54563416" target="_blank" rel="noopener">Mac安装powerline 权限问题</a></li></ul><h3 id="一、前言"><a href="#一、前言" class="headerlink" title="一、前言"></a>一、前言</h3><p>iTerm2是MAC下最好用的终端工具，并且还是免费的。iTerm2 是配置完毕开箱即用的 tmux，有标签变色、智能选中等特色功能。在日常开发中，我们难免会与终端命令打交道，比如使用Git，CocoaPods，Homebrew，Hexo等，下面开始介绍自定义终端样式吧！</p><h3 id="二、目录"><a href="#二、目录" class="headerlink" title="二、目录"></a>二、目录</h3><blockquote><ul><li>下载安装<a href="http://www.iterm2.com/" target="_blank" rel="noopener">iTerm 2</a></li><li>安装powerline</li><li>安装oh-my-zsh</li><li>安装字体库<a href="https://github.com/powerline/fonts" target="_blank" rel="noopener">fonts</a></li><li>导入配色</li><li>主题设置</li><li>添加指令高亮效果<a href="https://github.com/zsh-users/zsh-syntax-highlighting" target="_blank" rel="noopener">zsh-syntax-highlighting</a></li><li>快捷键</li><li>问题解决</li></ul></blockquote><h3 id="三、下载安装iTerm-2"><a href="#三、下载安装iTerm-2" class="headerlink" title="三、下载安装iTerm 2"></a>三、下载安装<a href="http://www.iterm2.com/" target="_blank" rel="noopener">iTerm 2</a></h3><ul><li><a href="https://github.com/gnachman/iTerm2" target="_blank" rel="noopener">GitHub</a></li></ul><h3 id="四、安装powerline"><a href="#四、安装powerline" class="headerlink" title="四、安装powerline"></a>四、安装powerline</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">//没有安装pip先安装pip</span><br><span class="line">sudo easy_install pip</span><br><span class="line"></span><br><span class="line">//之后安装powerline（这里可能会报错，可以参考问题解决）</span><br><span class="line">pip install powerline-status</span><br></pre></td></tr></table></figure><h3 id="五、安装oh-my-zsh"><a href="#五、安装oh-my-zsh" class="headerlink" title="五、安装oh-my-zsh"></a>五、安装oh-my-zsh</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -L https://raw.github.com/robbyrussell/oh-my-zsh/master/tools/install.sh | sh</span><br></pre></td></tr></table></figure><h3 id="六、安装字体库fonts"><a href="#六、安装字体库fonts" class="headerlink" title="六、安装字体库fonts"></a>六、安装字体库<a href="https://github.com/powerline/fonts" target="_blank" rel="noopener">fonts</a></h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">//克隆字体库到本地</span><br><span class="line">git clone https://github.com/powerline/fonts.git</span><br><span class="line"></span><br><span class="line">//安装字体</span><br><span class="line">cd fonts</span><br><span class="line">./install.sh</span><br></pre></td></tr></table></figure><p>安装成功之后输出：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">➜  fonts git:(master) ./install.sh</span><br><span class="line">Copying fonts...</span><br><span class="line">Powerline fonts installed to /Users/WENBO/Library/Fonts</span><br></pre></td></tr></table></figure></p><h3 id="七、导入配色"><a href="#七、导入配色" class="headerlink" title="七、导入配色"></a>七、导入配色</h3><ul><li><p>首先到GitHub下载<a href="https://github.com/altercation/solarized" target="_blank" rel="noopener">solarized</a></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone https://github.com/altercation/solarized</span><br></pre></td></tr></table></figure></li><li><p>解压zip文件，进入<strong>solarized/iterm2-colors-solarized</strong><br>文件，双击<strong>Solarized Dark.itermcolors</strong>和<strong>Solarized Light.itermcolors</strong>进行安装导入，如下图所示<br><img src="https://user-gold-cdn.xitu.io/2018/5/20/1637e1a0a8980e6e?w=1196&amp;h=762&amp;f=png&amp;s=130004" alt="install-solarized.png"></p></li><li>进入系统偏好设置，<strong>profiles</strong>-&gt;<strong>Colors</strong>选择刚刚导入的配色方案即可<br><img src="https://user-gold-cdn.xitu.io/2018/5/20/1637e1a0a8c30214?w=384&amp;h=570&amp;f=png&amp;s=95177" alt="屏幕快照 2018-02-12 下午4.07.41.png"><h3 id="八、主题设置"><a href="#八、主题设置" class="headerlink" title="八、主题设置"></a>八、主题设置</h3></li><li><p>使用<a href="https://github.com/fcamblor/oh-my-zsh-agnoster-fcamblor" target="_blank" rel="noopener">agnoster</a>，下载安装：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">//克隆主题到本地</span><br><span class="line">git clone  https://github.com/fcamblor/oh-my-zsh-agnoster-fcamblor</span><br><span class="line"></span><br><span class="line">//安装主题</span><br><span class="line">cd oh-my-zsh-agnoster-fcamblor</span><br><span class="line">./install</span><br></pre></td></tr></table></figure></li><li><p>安装成功之后，编辑<strong>~/.zshrc</strong>文件，将<strong>ZSH_THEME</strong>改为<strong>agnoster</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"># Set name of the theme to load. Optionally, if you set this to &quot;random&quot;</span><br><span class="line"># it&apos;ll load a random theme each time that oh-my-zsh is loaded.</span><br><span class="line"># See https://github.com/robbyrussell/oh-my-zsh/wiki/Themes</span><br><span class="line">ZSH_THEME=&quot;agnoster&quot;</span><br></pre></td></tr></table></figure></li></ul><h3 id="九、添加指令高亮效果zsh-syntax-highlighting"><a href="#九、添加指令高亮效果zsh-syntax-highlighting" class="headerlink" title="九、添加指令高亮效果zsh-syntax-highlighting"></a>九、添加指令高亮效果<a href="https://github.com/zsh-users/zsh-syntax-highlighting" target="_blank" rel="noopener">zsh-syntax-highlighting</a></h3><ul><li><p>下载文件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">//克隆项目到本地</span><br><span class="line">git clone git://github.com/zsh-users/zsh-syntax-highlighting.git</span><br></pre></td></tr></table></figure></li><li><p>编辑<strong>.zshrc</strong>文件，在最后添加如下内容</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">source /Users/WENBO/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh</span><br><span class="line">plugins=(zsh-syntax-highlighting)</span><br></pre></td></tr></table></figure></li></ul><p><strong>注意</strong><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/Users/WENBO是*.zshrc文件所在路径，这里替换成你自己的就好了</span><br></pre></td></tr></table></figure></p><ul><li>设置成功之后，效果如下：<br><img src="https://user-gold-cdn.xitu.io/2018/5/20/1637e1a0a8d66380?w=1144&amp;h=140&amp;f=png&amp;s=31193" alt="屏幕快照 2018-02-12 下午4.55.25.png"></li></ul><h3 id="十、快捷键"><a href="#十、快捷键" class="headerlink" title="十、快捷键"></a>十、快捷键</h3><p>自己也才安装，先记录下来吧。</p><table><thead><tr><th style="text-align:center">说明</th><th style="text-align:center">快捷键</th></tr></thead><tbody><tr><td style="text-align:center">新建标签</td><td style="text-align:center">command + t</td></tr><tr><td style="text-align:center">关闭标签</td><td style="text-align:center">command + w</td></tr><tr><td style="text-align:center">切换标签</td><td style="text-align:center">command + 数字 command + 左右方向键</td></tr><tr><td style="text-align:center">切换全屏</td><td style="text-align:center">command + enter</td></tr><tr><td style="text-align:center">查找</td><td style="text-align:center">command +f</td></tr><tr><td style="text-align:center">垂直分屏</td><td style="text-align:center">command + d</td></tr><tr><td style="text-align:center">水平分屏</td><td style="text-align:center">command + shift + d</td></tr><tr><td style="text-align:center">切换屏幕</td><td style="text-align:center">command + option + 方向键 command + [ 或 command + ]</td></tr><tr><td style="text-align:center">查看历史命令</td><td style="text-align:center">command + ;</td></tr><tr><td style="text-align:center">查看剪贴板历史</td><td style="text-align:center">command + shift + h</td></tr><tr><td style="text-align:center">清除当前行</td><td style="text-align:center">ctrl + u</td></tr><tr><td style="text-align:center">到行首</td><td style="text-align:center">ctrl + a</td></tr><tr><td style="text-align:center">到行尾</td><td style="text-align:center">ctrl + e</td></tr><tr><td style="text-align:center">前进后退</td><td style="text-align:center">ctrl + f/b (相当于左右方向键)</td></tr><tr><td style="text-align:center">上一条命令</td><td style="text-align:center">ctrl + p</td></tr><tr><td style="text-align:center">搜索命令历史</td><td style="text-align:center">ctrl + r</td></tr><tr><td style="text-align:center">删除当前光标的字符</td><td style="text-align:center">ctrl + d</td></tr><tr><td style="text-align:center">删除光标之前的字符</td><td style="text-align:center">ctrl + h</td></tr><tr><td style="text-align:center">删除光标之前的单词</td><td style="text-align:center">ctrl + w</td></tr><tr><td style="text-align:center">删除到文本末尾</td><td style="text-align:center">ctrl + k</td></tr><tr><td style="text-align:center">交换光标处文本</td><td style="text-align:center">ctrl + t</td></tr><tr><td style="text-align:center">清屏1</td><td style="text-align:center">command + r</td></tr><tr><td style="text-align:center">清屏2</td><td style="text-align:center">ctrl + l</td></tr></tbody></table><h3 id="十一、问题解决"><a href="#十一、问题解决" class="headerlink" title="十一、问题解决"></a>十一、问题解决</h3><ul><li><a href="http://blog.csdn.net/tymatlab/article/details/78609861" target="_blank" rel="noopener">brew link python报错</a><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo mkdir /usr/local/Frameworks</span><br><span class="line">sudo chown $(whoami):admin /usr/local/Frameworks</span><br></pre></td></tr></table></figure></li></ul><p>之后执行，链接成功<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">brew link python</span><br></pre></td></tr></table></figure></p><ul><li><p>安装powerline报错<strong>Permission denied</strong>，原因是没有安装python,，通过homebrew安装python</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">brew install python</span><br></pre></td></tr></table></figure></li><li><p>命令显示？号，如下图所示：<br><img src="https://user-gold-cdn.xitu.io/2018/5/20/1637e1a0a8a8e24b?w=1146&amp;h=78&amp;f=png&amp;s=18694" alt="屏幕快照 2018-02-12 下午4.38.27.png"><br>解决办法：进入<strong>Preference</strong>-&gt;<strong>Profiles</strong>-&gt;<strong>Text</strong>，做如下配置即可：<br><img src="https://user-gold-cdn.xitu.io/2018/5/20/1637e1a0a8f2d04e?w=1240&amp;h=742&amp;f=png&amp;s=251534" alt="屏幕快照 2018-02-12 下午4.59.18.png"></p></li><li>Mac安装powerline 权限问题，报错如下<br><img src="https://user-gold-cdn.xitu.io/2018/5/20/1637e1a0cbe25c05?w=1136&amp;h=328&amp;f=png&amp;s=60589" alt="屏幕快照 2018-05-20 下午3.57.18.png"><br>解决办法：<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install powerline-status --user -U</span><br></pre></td></tr></table></figure></li></ul><h3 id="十二、结语"><a href="#十二、结语" class="headerlink" title="十二、结语"></a>十二、结语</h3><p>在掘金上发现了这款终端工具，自己平时也有用到终端工具，于是就尝试给自己的MAC装上这款软件，在安装过程中还是遇到一些问题，不过最后都解决了。如果你也爱好终端命令操作，可以尝试DIY你喜欢的终端样式哦。</p><h3 id="参考文章"><a href="#参考文章" class="headerlink" title="参考文章"></a>参考文章</h3><ul><li><a href="https://www.jianshu.com/p/7de00c73a2bb" target="_blank" rel="noopener">iTerm 2 &amp;&amp; Oh My Zsh【DIY教程——亲身体验过程】</a></li><li><a href="http://matt33.com/2016/07/09/mac-software/" target="_blank" rel="noopener">Mac终端iTerm2配置</a></li></ul>]]></content>
    
    <summary type="html">
    
      iTerm2是MAC下最好用的终端工具，并且还是免费的。iTerm2 是配置完毕开箱即用的 tmux，有标签变色、智能选中等特色功能。在日常开发中，我们难免会与终端命令打交道，比如使用Git，CocoaPods，Homebrew，Hexo等，下面开始介绍自定义终端样式吧
    
    </summary>
    
      <category term="Terminal" scheme="http://blogwenbo.com/categories/Terminal/"/>
    
    
      <category term="Terminal" scheme="http://blogwenbo.com/tags/Terminal/"/>
    
      <category term="MAC" scheme="http://blogwenbo.com/tags/MAC/"/>
    
      <category term="item2" scheme="http://blogwenbo.com/tags/item2/"/>
    
  </entry>
  
  <entry>
    <title>Cell自适应高度标签</title>
    <link href="http://blogwenbo.com/2018/07/08/Cell%E8%87%AA%E9%80%82%E5%BA%94%E9%AB%98%E5%BA%A6%E6%A0%87%E7%AD%BE/"/>
    <id>http://blogwenbo.com/2018/07/08/Cell自适应高度标签/</id>
    <published>2018-07-08T09:12:24.000Z</published>
    <updated>2018-07-08T09:19:26.221Z</updated>
    
    <content type="html"><![CDATA[<p class="description"></p><a id="more"></a><h3 id="一、本地数据自适应"><a href="#一、本地数据自适应" class="headerlink" title="一、本地数据自适应"></a>一、本地数据自适应</h3><ul><li>在做项目意见反馈的时候，需要选择反馈类型，整个界面是UITableView，我现在喜欢用自动布局，用的Masonry布局框架，开始选择类型是放在本地的，用Masonry实现cell高度自适应还算相对简单的，下面是实现数据在本地高度自适应的核心代码，该方法在cell初始化方法中调用：<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br></pre></td><td class="code"><pre><span class="line">- (void)initSubviews &#123;</span><br><span class="line">    /** &lt;&lt; init subviews &gt; */</span><br><span class="line">    CGFloat margin = 15.f;</span><br><span class="line">    CGFloat spacing = 10.f;</span><br><span class="line">    CGFloat maxWidth = ScreenWidth;</span><br><span class="line">    __block CGFloat rowWidth = 0;</span><br><span class="line">    __block BOOL isNeedChangeLine = YES;</span><br><span class="line">    __block UIButton *lastButton = nil;</span><br><span class="line">    NSInteger count = self.dataArray.count;</span><br><span class="line">    [self.dataArray enumerateObjectsUsingBlock:^(CYBImageTitleModel * _Nonnull obj, NSUInteger idx, BOOL * _Nonnull stop) &#123;</span><br><span class="line">        UIButton *button = [UIButton buttonWithType:UIButtonTypeCustom];</span><br><span class="line">        button.titleLabel.font = FONT(14.f);</span><br><span class="line">        button.adjustsImageWhenHighlighted = NO;</span><br><span class="line">        [button setTitleColor:[UIColor lightGrayColor]</span><br><span class="line">                     forState:UIControlStateNormal];</span><br><span class="line">        [button setTitleColor:Color_Orange</span><br><span class="line">                     forState:UIControlStateSelected];</span><br><span class="line">        [button setBackgroundImage:obj.image</span><br><span class="line">                          forState:UIControlStateNormal];</span><br><span class="line">        [button setBackgroundImage:obj.selectedImage</span><br><span class="line">                          forState:UIControlStateSelected];</span><br><span class="line">        [button setTitle:obj.title</span><br><span class="line">                forState:UIControlStateNormal];</span><br><span class="line">        button.tag = kBTN_TAG + idx;</span><br><span class="line">        button.selected = obj.isSelected;</span><br><span class="line">        if (obj.isSelected) &#123;</span><br><span class="line">            tempBtn = button;</span><br><span class="line">        &#125;</span><br><span class="line">        [button wb_addTarget:self action:@selector(buttonClicked:)];</span><br><span class="line">        </span><br><span class="line">        [self.contentView addSubview:button];</span><br><span class="line"></span><br><span class="line">        CGFloat titleWidth = [obj.title boundingRectWithSize:CGSizeMake(CGFLOAT_MAX, 28)</span><br><span class="line">                                                     options:NSStringDrawingUsesLineFragmentOrigin</span><br><span class="line">                                                  attributes:@&#123;NSFontAttributeName : FONT(14.f)&#125; context:nil].size.width + 2 * 8;</span><br><span class="line">        rowWidth += titleWidth + spacing;</span><br><span class="line">        /** &lt; 是否需要换行 &gt;  */</span><br><span class="line">        if (rowWidth &gt; maxWidth - 2 * margin) &#123;</span><br><span class="line">            isNeedChangeLine = YES;</span><br><span class="line">            /** &lt; 判断是否超过最大值 &gt;  */</span><br><span class="line">            if (titleWidth + 2 * margin &gt; maxWidth) &#123;</span><br><span class="line">                titleWidth = maxWidth - 2 * margin;</span><br><span class="line">            &#125;</span><br><span class="line">            /** &lt; 换行后重新设置当前行的总宽度 &gt;  */</span><br><span class="line">            rowWidth = titleWidth + spacing;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        [button mas_makeConstraints:^(MASConstraintMaker *make) &#123;</span><br><span class="line">            /** &lt; 换行 &gt;  */</span><br><span class="line">            if (isNeedChangeLine) &#123;</span><br><span class="line">                if (!lastButton) &#123;</span><br><span class="line">                    make.top.equalTo(self.contentView.mas_top).offset(margin);</span><br><span class="line">                &#125;else &#123;</span><br><span class="line">                    make.top.equalTo(lastButton.mas_bottom).offset(spacing);</span><br><span class="line">                &#125;</span><br><span class="line">                make.left.equalTo(self.contentView.mas_left).offset(margin);</span><br><span class="line">                isNeedChangeLine = NO;</span><br><span class="line">            &#125;else &#123;</span><br><span class="line">                make.left.equalTo(lastButton.mas_right).offset(spacing);</span><br><span class="line">                make.top.equalTo(lastButton.mas_top);</span><br><span class="line">            &#125;</span><br><span class="line">            make.height.mas_equalTo(@(28));</span><br><span class="line">            make.width.mas_equalTo(@(titleWidth));</span><br><span class="line">            </span><br><span class="line">            /** &lt; 最后一个 &gt;  */</span><br><span class="line">            if (idx == count - 1) &#123;</span><br><span class="line">                make.bottom.equalTo(self.contentView.mas_bottom).offset(-margin);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;];</span><br><span class="line">        lastButton = button;</span><br><span class="line">    &#125;];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h3 id="二、网络请求数据高度自适应"><a href="#二、网络请求数据高度自适应" class="headerlink" title="二、网络请求数据高度自适应"></a>二、网络请求数据高度自适应</h3><ul><li><p>后来改需求了，需要从网络请求意见反馈类型，好吧，上面的方法已经有实现高度自适应关键代码了，只要稍作修改就可实现了。但是实现过程并不是想象中那么简单，中间也经理了很多波折。因为时间还是很充裕的，我就考虑到将标签空间封装成一个视图，等要使用的时候自己添加到cell上，并设置上下左右约束，封装完成之后并没有达到我想要的效果，我发现cell根本就撑不起来，我检查了一遍约束，上下左右约束没有遗漏呀，封装的视图<strong>WBAutoTagListView</strong>核心代码如下，约束实在<strong>layoutSubviews</strong>设置的：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line">#pragma mark &lt; Layout &gt;</span><br><span class="line">- (void)layoutSubviews &#123;</span><br><span class="line">    [super layoutSubviews];</span><br><span class="line">    </span><br><span class="line">    CGFloat maxWidth = self.bounds.size.width - _secionInset.left - _secionInset.right;</span><br><span class="line">    __block CGFloat rowWidth = 0;</span><br><span class="line">    __block BOOL isNeedChangeLine = YES;</span><br><span class="line">    __block WBTagListItem *lastItem = nil;</span><br><span class="line">    NSInteger count = self.itemArray.count;</span><br><span class="line">    [self.itemArray enumerateObjectsUsingBlock:^(WBTagListItem * _Nonnull obj, NSUInteger idx, BOOL * _Nonnull stop) &#123;</span><br><span class="line">        </span><br><span class="line">        CGFloat titleWidth = obj.titleWidth;</span><br><span class="line">        rowWidth += titleWidth + _minimumInteritemSpacing;</span><br><span class="line">         /** &lt; 是否需要换行 &gt;  */</span><br><span class="line">        if (rowWidth &gt; maxWidth - 2 * _minimumInteritemSpacing) &#123;</span><br><span class="line">            isNeedChangeLine = YES;</span><br><span class="line">            /** &lt; 判断是否超过最大值 &gt;  */</span><br><span class="line">            if (titleWidth + 2 * _minimumInteritemSpacing &gt; maxWidth) &#123;</span><br><span class="line">                titleWidth = maxWidth - 2 * _minimumInteritemSpacing;</span><br><span class="line">            &#125;</span><br><span class="line">            /** &lt; 换行后重新设置当前行的总宽度 &gt;  */</span><br><span class="line">            rowWidth = titleWidth + _minimumInteritemSpacing;</span><br><span class="line">        &#125;</span><br><span class="line">        [obj mas_makeConstraints:^(MASConstraintMaker *make) &#123;</span><br><span class="line">            /** &lt; 换行 &gt;  */</span><br><span class="line">            if (isNeedChangeLine) &#123;</span><br><span class="line">                if (!lastItem) &#123;</span><br><span class="line">                    make.top.equalTo(self.mas_top).offset(_secionInset.top);</span><br><span class="line">                &#125;else &#123;</span><br><span class="line">                    make.top.equalTo(lastItem.mas_bottom).offset(_minimumLineSpacing);</span><br><span class="line">                &#125;</span><br><span class="line">                make.left.equalTo(self.mas_left).offset(_secionInset.left);</span><br><span class="line">                isNeedChangeLine = NO;</span><br><span class="line">            &#125;else &#123;</span><br><span class="line">                make.left.equalTo(lastItem.mas_right).offset(_minimumInteritemSpacing);</span><br><span class="line">                make.top.equalTo(lastItem.mas_top);</span><br><span class="line">            &#125;</span><br><span class="line">            make.height.mas_equalTo(@(_itemHeight));</span><br><span class="line">            make.width.mas_equalTo(@(titleWidth));</span><br><span class="line">            </span><br><span class="line">            /** &lt; 最后一个 &gt;  */</span><br><span class="line">            if (idx == count - 1) &#123;</span><br><span class="line">                make.bottom.mas_offset(-_secionInset.bottom).priorityMedium();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;];</span><br><span class="line">        lastItem = obj;</span><br><span class="line">    &#125;];</span><br><span class="line">    NSLog(@&quot;%f&quot;,[self systemLayoutSizeFittingSize:UILayoutFittingCompressedSize].height);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>经测试，将该视图添加到控制器的视图上是可以自适应高度的，但是添加的cell上，就无法撑cell高度，尝试了许多写法，还是未能实现，控制台提示了无法算出cell的高度，就给了一个默认高度，顿时都无语了，有知道的大神能告诉我为什么有内容却无法撑起cell高度吗？</p></li><li><p>既然封装的视图无法实现cell高度自适应，我就尝试另外的思路方法，既然是cell自适应，那就索性封装一个标签cell吧<strong>WBTagListViewCell</strong>，为了可复用性，也为<strong>WBTagListViewCell</strong>添加了一些配置属性，如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line">/** &lt; 数据源 &gt; */</span><br><span class="line">@property (nonatomic, strong) NSArray &lt;WBTagListModel *&gt;*items;</span><br><span class="line">/** &lt; 内边距 默认： UIEdgeInsetsMake(15, 15, 15, 15) &gt; */</span><br><span class="line">@property (nonatomic, assign) UIEdgeInsets secionInset;</span><br><span class="line">/** &lt; 行间距 默认：15 &gt; */</span><br><span class="line">@property (nonatomic, assign) CGFloat minimumLineSpacing;</span><br><span class="line">/** &lt; item之间距离 默认：10 &gt; */</span><br><span class="line">@property (nonatomic, assign) CGFloat minimumInteritemSpacing;</span><br><span class="line">/** &lt; 是否允许点击 默认：YES &gt; */</span><br><span class="line">@property (nonatomic, assign) BOOL allowSelection;</span><br><span class="line">/** &lt; 是否允许多选 默认：NO &gt; */</span><br><span class="line">@property (nonatomic, assign) BOOL allowMultipleSelection;</span><br><span class="line">/** &lt; 标签高度 默认：28.f &gt; */</span><br><span class="line">@property (nonatomic, assign) CGFloat itemHeight;</span><br><span class="line"></span><br><span class="line">/** &lt; 标签左右间距 默认：10.f &gt; */</span><br><span class="line">@property (nonatomic, assign) CGFloat leftRightMargin;</span><br><span class="line">/** &lt; 背景图片 &gt; */</span><br><span class="line">@property (nonatomic, copy) NSString *bgImageName;</span><br><span class="line">/** &lt; 选中背景图片 &gt; */</span><br><span class="line">@property (nonatomic, copy) NSString *selectedBgImageName;</span><br><span class="line">/** &lt; 标签颜色 默认：浅灰色 &gt; */</span><br><span class="line">@property (nonatomic, strong) UIColor *titleColor;</span><br><span class="line">/** &lt; 按钮选中颜色 &gt; */</span><br><span class="line">@property (nonatomic, strong) UIColor *titleSelectedColor;</span><br><span class="line">/** &lt; 标题大小 默认：14pt &gt; */</span><br><span class="line">@property (nonatomic, strong) UIFont *font;</span><br><span class="line">/** &lt; 边框宽度 默认：0 &gt; */</span><br><span class="line">@property (nonatomic, assign) CGFloat borderWidth;</span><br><span class="line">/** &lt; 边框颜色 bodoerWidth &gt; 0 设置有效 &gt; */</span><br><span class="line">@property (nonatomic, strong) UIColor *borderColor;</span><br><span class="line">/** &lt; 选中边框颜色 bodoerWidth &gt; 0 设置有效 &gt; */</span><br><span class="line">@property (nonatomic, strong) UIColor *selectedBorderColor;</span><br><span class="line">/** &lt; 圆角大小 默认：0 &gt; */</span><br><span class="line">@property (nonatomic, assign) CGFloat cornerRadius;</span><br><span class="line">/** &lt; 选中的item &gt; */</span><br><span class="line">@property (nonatomic, strong) NSMutableArray *selectedItems;</span><br><span class="line"></span><br><span class="line">@property (nonatomic, weak) id &lt;WBTagListViewCellDelegate&gt; delegate;</span><br></pre></td></tr></table></figure></li><li><p>关键实现步骤是重写了cell的<strong>updateConstraints</strong>，在有数据源的时候调用<strong>setNeedsUpdateConstraints</strong>，关键代码如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br></pre></td><td class="code"><pre><span class="line">- (void)createTagWithData:(NSArray &lt;WBTagListModel *&gt;*)itemsArray &#123;</span><br><span class="line">    for (UIView *view in self.itemArray) &#123;</span><br><span class="line">        [view removeFromSuperview];</span><br><span class="line">    &#125;</span><br><span class="line">    [self.itemArray removeAllObjects];</span><br><span class="line">    </span><br><span class="line">    for (NSInteger index = 0; index &lt; itemsArray.count; index ++) &#123;</span><br><span class="line">        WBTagListItem *item = [WBTagListItem new];</span><br><span class="line">        item.title = itemsArray[index].title;</span><br><span class="line">        item.isSelected = itemsArray[index].isSelected;</span><br><span class="line">        item.itemTag = index;</span><br><span class="line">        item.delegate = self;</span><br><span class="line">        [self.contentView addSubview:item];</span><br><span class="line">        [self.itemArray addObject:item];</span><br><span class="line">        </span><br><span class="line">        /** &lt; 默认选中第一个 &gt; */</span><br><span class="line">        if (index == 0 &amp;&amp; itemsArray[index].isSelected) &#123;</span><br><span class="line">            _tempItem = item;</span><br><span class="line">            [self.selectedItems removeAllObjects];</span><br><span class="line">            [self.selectedItems addObject:_tempItem];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    [self setNeedsUpdateConstraints];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">- (void)updateConstraints &#123;</span><br><span class="line">    [super updateConstraints];</span><br><span class="line">    </span><br><span class="line">    CGFloat maxWidth = self.contentView.bounds.size.width - _secionInset.left - _secionInset.right;</span><br><span class="line">    __block CGFloat rowWidth = 0;</span><br><span class="line">    __block BOOL isNeedChangeLine = YES;</span><br><span class="line">    __block WBTagListItem *lastItem = nil;</span><br><span class="line">    NSInteger count = self.itemArray.count;</span><br><span class="line">    [self.itemArray enumerateObjectsUsingBlock:^(WBTagListItem * _Nonnull obj, NSUInteger idx, BOOL * _Nonnull stop) &#123;</span><br><span class="line">        </span><br><span class="line">        CGFloat titleWidth = obj.titleWidth;</span><br><span class="line">        rowWidth += titleWidth + _minimumInteritemSpacing;</span><br><span class="line">        /** &lt; 是否需要换行 &gt;  */</span><br><span class="line">        if (rowWidth &gt; maxWidth - 2 * _minimumInteritemSpacing) &#123;</span><br><span class="line">            isNeedChangeLine = YES;</span><br><span class="line">            /** &lt; 判断是否超过最大值 &gt;  */</span><br><span class="line">            if (titleWidth + 2 * _minimumInteritemSpacing &gt; maxWidth) &#123;</span><br><span class="line">                titleWidth = maxWidth - 2 * _minimumInteritemSpacing;</span><br><span class="line">            &#125;</span><br><span class="line">            /** &lt; 换行后重新设置当前行的总宽度 &gt;  */</span><br><span class="line">            rowWidth = titleWidth + _minimumInteritemSpacing;</span><br><span class="line">        &#125;</span><br><span class="line">        [obj mas_makeConstraints:^(MASConstraintMaker *make) &#123;</span><br><span class="line">            /** &lt; 换行 &gt;  */</span><br><span class="line">            if (isNeedChangeLine) &#123;</span><br><span class="line">                if (!lastItem) &#123;</span><br><span class="line">                    make.top.equalTo(self.contentView.mas_top).offset(_secionInset.top);</span><br><span class="line">                &#125;else &#123;</span><br><span class="line">                    make.top.equalTo(lastItem.mas_bottom).offset(_minimumLineSpacing);</span><br><span class="line">                &#125;</span><br><span class="line">                make.left.equalTo(self.contentView.mas_left).offset(_secionInset.left);</span><br><span class="line">                isNeedChangeLine = NO;</span><br><span class="line">            &#125;else &#123;</span><br><span class="line">                make.left.equalTo(lastItem.mas_right).offset(_minimumInteritemSpacing);</span><br><span class="line">                make.top.equalTo(lastItem.mas_top);</span><br><span class="line">            &#125;</span><br><span class="line">            make.height.mas_equalTo(@(_itemHeight));</span><br><span class="line">            make.width.mas_equalTo(@(titleWidth));</span><br><span class="line">            </span><br><span class="line">            /** &lt; 最后一个 &gt;  */</span><br><span class="line">            if (idx == count - 1) &#123;</span><br><span class="line">                make.bottom.equalTo(self.contentView.mas_bottom).offset(-_secionInset.bottom).priorityMedium();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;];</span><br><span class="line">        lastItem = obj;</span><br><span class="line">    &#125;];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>最后运行效果也贴一张图吧<br><img src="https://user-gold-cdn.xitu.io/2018/6/8/163db0915798250b?w=884&amp;h=1915&amp;f=png&amp;s=173327" alt="Simulator Screen Shot - iPhone X - 2018-06-07 at 23.48.33.png"></p></li><li>封装cell在实现过程中，也遇到一些问题，最开始把约束写到<strong>layoutSubviews</strong>还是无法自适应高度，再就是要考虑到cell复用的问题。不管怎样最后还是实现了自己想要的效果，由于技术有限，可能我有写的不对不好的地方，还请斧正。最后也贴出自动布局和frame布局标签demo，如果觉得对你有帮助，请Star鼓励下吧。<h3 id="三、GitHub-Demo"><a href="#三、GitHub-Demo" class="headerlink" title="三、GitHub Demo"></a>三、GitHub Demo</h3>Auto：<a href="https://github.com/wenmobo/WBTagsView/tree/master/WBAutoTagListViewDemo" target="_blank" rel="noopener">WBAutoTagListViewDemo</a><br>Frame：<a href="https://github.com/wenmobo/WBTagsView/tree/master/WB_TagsViewDemo" target="_blank" rel="noopener">WB_TagsViewDemo</a></li></ul><h3 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h3><ul><li><a href="https://developer.apple.com/documentation/uikit/uiview/1622450-setneedsupdateconstraints" target="_blank" rel="noopener">Apple官方文档</a></li></ul>]]></content>
    
    <summary type="html">
    
      好久没有更新自己的博客了，去年自己在博客总结说到自己要坚持更新博客，不管是否有技术含量，都要持之以恒，无论做什么，都贵在坚持，我希望通过写博客能积累自己的技术与经验。不多说了，言归正传，下面开始介绍我是如何实现Cell标签自适应的吧。
    
    </summary>
    
      <category term="iOS" scheme="http://blogwenbo.com/categories/iOS/"/>
    
    
      <category term="iOS" scheme="http://blogwenbo.com/tags/iOS/"/>
    
      <category term="Objective-C" scheme="http://blogwenbo.com/tags/Objective-C/"/>
    
  </entry>
  
  <entry>
    <title>item2自动连接SSH</title>
    <link href="http://blogwenbo.com/2018/07/08/item2%E8%87%AA%E5%8A%A8%E8%BF%9E%E6%8E%A5SSH/"/>
    <id>http://blogwenbo.com/2018/07/08/item2自动连接SSH/</id>
    <published>2018-07-08T09:06:49.000Z</published>
    <updated>2018-07-08T09:14:36.381Z</updated>
    
    <content type="html"><![CDATA[<p class="description"></p><a id="more"></a><h3 id="目录"><a href="#目录" class="headerlink" title="目录"></a>目录</h3><blockquote><p>1、编辑命令脚本<br>2、配置item2</p></blockquote><h4 id="1、编辑命令脚本"><a href="#1、编辑命令脚本" class="headerlink" title="1、编辑命令脚本"></a>1、编辑命令脚本</h4><ul><li><p>2.1.1 打开item2终端，创建脚本文件<strong>CentOSAutoLoginSSH</strong>（名字可以自定义）文件，保存在一个你指定的文件夹下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">//切换文件夹</span><br><span class="line">cd [你要保存的文件夹下]</span><br><span class="line"></span><br><span class="line">//创建文件</span><br><span class="line">touch CentOSAutoLoginSSH</span><br></pre></td></tr></table></figure></li><li><p>2.1.2 编辑CentOSAutoLoginSSH</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim CentOSAutoLoginSSH</span><br></pre></td></tr></table></figure></li></ul><p>2.1.3 配置CentOSAutoLoginSSH<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">#!/usr/bin/expect -f  </span><br><span class="line">#搬瓦工控制面板中的SSH Port</span><br><span class="line">  set port 2121  </span><br><span class="line">#默认用户名root</span><br><span class="line">  set user root  </span><br><span class="line">#主机地址</span><br><span class="line">  set host 172.16.10.71  </span><br><span class="line">#密码</span><br><span class="line">  set password mima123456  </span><br><span class="line">  set timeout -1  </span><br><span class="line">   </span><br><span class="line">  spawn ssh -p$port $user@$host  </span><br><span class="line">  expect &quot;*assword:*&quot;  </span><br><span class="line">  send &quot;$password\r&quot;  </span><br><span class="line">  interact  </span><br><span class="line">  expect eof  </span><br><span class="line"></span><br><span class="line">:wq</span><br></pre></td></tr></table></figure></p><p>编辑完成之后<code>:wq</code>保存配置信息。</p><h4 id="2、配置item2"><a href="#2、配置item2" class="headerlink" title="2、配置item2"></a>2、配置item2</h4><ul><li>2.2.1 item2-&gt;Preference-&gt;Profile添加配置文件，操作如下图所示：<br><img src="https://user-gold-cdn.xitu.io/2018/6/10/163e84603e9d33cf?w=1240&amp;h=768&amp;f=png&amp;s=247953" alt="屏幕快照 2018-05-20 下午6.42.05.png"></li><li>2.2.2 测试免密自动登录，选择顶部菜单<strong>Profile</strong>中的<strong>CentOSAutoLoginSSH</strong>，这时可能会报错，因为<strong>CentOSAutoLoginSSH</strong>没有执行权限，需要执行以下命令：<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chmod u+x /Users/user/.ssh/CentOSAutoLoginSSH</span><br></pre></td></tr></table></figure></li></ul><p><img src="https://user-gold-cdn.xitu.io/2018/6/10/163e846040081c42?w=496&amp;h=326&amp;f=png&amp;s=46574" alt="屏幕快照 2018-05-20 下午6.47.14.png"></p><p>然后测试，就实现了免密自动登录了。</p><ul><li>2.2.3 然后我们就可以查看shadowsocks文件下的配置文件了<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cat /etc/shadowsocks/config.json</span><br></pre></td></tr></table></figure></li></ul><h3 id="参考文章"><a href="#参考文章" class="headerlink" title="参考文章"></a>参考文章</h3><ul><li><a href="https://blog.csdn.net/fangxiaoji/article/details/50710220" target="_blank" rel="noopener">使用iTerm2快捷连接SSH</a></li><li><a href="https://blog.csdn.net/jobschen/article/details/52823980" target="_blank" rel="noopener">Mac Item2 SSH免密登录Linux 服务器的两种方式</a></li></ul>]]></content>
    
    <summary type="html">
    
      本文主要介绍如何用item2实现免密登录。
    
    </summary>
    
      <category term="MAC" scheme="http://blogwenbo.com/categories/MAC/"/>
    
    
      <category term="Terminal" scheme="http://blogwenbo.com/tags/Terminal/"/>
    
      <category term="item2" scheme="http://blogwenbo.com/tags/item2/"/>
    
      <category term="SSH" scheme="http://blogwenbo.com/tags/SSH/"/>
    
      <category term="Shadowsocks" scheme="http://blogwenbo.com/tags/Shadowsocks/"/>
    
  </entry>
  
  <entry>
    <title>Xcode无线真机调试</title>
    <link href="http://blogwenbo.com/2018/07/08/Xcode%E6%97%A0%E7%BA%BF%E7%9C%9F%E6%9C%BA%E8%B0%83%E8%AF%95/"/>
    <id>http://blogwenbo.com/2018/07/08/Xcode无线真机调试/</id>
    <published>2018-07-08T08:58:29.000Z</published>
    <updated>2018-07-08T09:03:10.145Z</updated>
    
    <content type="html"><![CDATA[<p class="description"></p><a id="more"></a><h3 id="一、硬性条件"><a href="#一、硬性条件" class="headerlink" title="一、硬性条件"></a>一、硬性条件</h3><ul><li>硬件环境<br>MAC、Xcode9</li><li>系统<br>Mac OSX 10.12.5、iOS11<h3 id="二、具体操作步骤"><a href="#二、具体操作步骤" class="headerlink" title="二、具体操作步骤"></a>二、具体操作步骤</h3></li><li>将手机用数据线连接到MAC，Xcode-&gt;Devices And Simulators-&gt;Devices中勾选<strong>connect via network</strong><br><img src="https://user-gold-cdn.xitu.io/2018/6/10/163e852cb5e36b84?w=1240&amp;h=871&amp;f=png&amp;s=181947" alt="屏幕快照 2018-06-05 下午10.40.47.png"></li><li>点击手机图标，鼠标右键，配置局域网Connect via IP Address<br><img src="https://user-gold-cdn.xitu.io/2018/6/10/163e852cba4f9aa5?w=1240&amp;h=865&amp;f=png&amp;s=147034" alt="屏幕快照 2018-06-05 下午10.44.35.png"></li><li>配置完成之后手机图标会有一个地球标志，带表已经连接成功</li><li>最后运行项目，就可以无线调试啦</li></ul>]]></content>
    
    <summary type="html">
    
      看到安卓的小伙伴都能用无线调试APP，好生羡慕，为什么Xcode不支持无线调试呢，索性自己也在Google上搜一搜发现Xcode9是支持无线调试的，虽然自己平时也不怎用，还是做下记录吧。
    
    </summary>
    
      <category term="iOS" scheme="http://blogwenbo.com/categories/iOS/"/>
    
    
      <category term="iOS" scheme="http://blogwenbo.com/tags/iOS/"/>
    
      <category term="LLDB" scheme="http://blogwenbo.com/tags/LLDB/"/>
    
      <category term="Xcode" scheme="http://blogwenbo.com/tags/Xcode/"/>
    
      <category term="iPhone" scheme="http://blogwenbo.com/tags/iPhone/"/>
    
  </entry>
  
  <entry>
    <title>iOS定位处理约束冲突</title>
    <link href="http://blogwenbo.com/2018/07/08/iOS%E5%AE%9A%E4%BD%8D%E5%A4%84%E7%90%86%E7%BA%A6%E6%9D%9F%E5%86%B2%E7%AA%81/"/>
    <id>http://blogwenbo.com/2018/07/08/iOS定位处理约束冲突/</id>
    <published>2018-07-08T03:58:08.000Z</published>
    <updated>2018-07-08T04:03:16.299Z</updated>
    
    <content type="html"><![CDATA[<p class="description"></p><a id="more"></a><h3 id="一、添加UIViewAlertForUnsatisfiableConstraints断点"><a href="#一、添加UIViewAlertForUnsatisfiableConstraints断点" class="headerlink" title="一、添加UIViewAlertForUnsatisfiableConstraints断点"></a>一、添加UIViewAlertForUnsatisfiableConstraints断点</h3><ul><li>添加<strong>Symbolic Breakpoints</strong><br><img src="https://user-gold-cdn.xitu.io/2018/6/10/163e857ace3a0af6?w=428&amp;h=226&amp;f=png&amp;s=37641" alt="屏幕快照 2018-06-04 下午2.44.35.png"></li><li><p>编辑断点symbol填入</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">UIViewAlertForUnsatisfiableConstraints</span><br></pre></td></tr></table></figure></li><li><p>添加控制台打印action</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">po [[UIWindow keyWindow] _autolayoutTrace]</span><br></pre></td></tr></table></figure></li></ul><p><img src="https://user-gold-cdn.xitu.io/2018/6/10/163e857ace93dcbb?w=998&amp;h=514&amp;f=png&amp;s=129745" alt="屏幕快照 2018-06-04 下午2.44.50.png"></p><h3 id="二、定位约束警告冲突"><a href="#二、定位约束警告冲突" class="headerlink" title="二、定位约束警告冲突"></a>二、定位约束警告冲突</h3><ul><li><p>添加好断点之后，当界面有约束冲突，就会触发断点，控制打印如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">[LayoutConstraints] Unable to simultaneously satisfy constraints.</span><br><span class="line">Probably at least one of the constraints in the following list is one you don&apos;t want. </span><br><span class="line">Try this: </span><br><span class="line">(1) look at each constraint and try to figure out which you don&apos;t expect; </span><br><span class="line">(2) find the code that added the unwanted constraint or constraints and fix it. </span><br><span class="line">(</span><br><span class="line">&lt;MASLayoutConstraint:0x604000ab04a0 UIButton:0x7faf99f04010.width == 40&gt;,</span><br><span class="line">&lt;MASLayoutConstraint:0x604000ab66e0 UIButton:0x7faf99f04010.left == CYBButtonView:0x7faf99f83360.left + 10&gt;,</span><br><span class="line">&lt;MASLayoutConstraint:0x604000abaa00 UILabel:0x7faf99f5f8e0.left == UIButton:0x7faf99f04010.right&gt;,</span><br><span class="line">&lt;MASLayoutConstraint:0x604000abd580 UILabel:0x7faf99f5f8e0.left == CYBButtonView:0x7faf99f83360.left + 15&gt;,</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line">Will attempt to recover by breaking constraint </span><br><span class="line">&lt;MASLayoutConstraint:0x604000ab04a0 UIButton:0x7faf99f04010.width == 40&gt;</span><br><span class="line"></span><br><span class="line">Make a symbolic breakpoint at UIViewAlertForUnsatisfiableConstraints to catch this in the debugger.</span><br><span class="line">The methods in the UIConstraintBasedLayoutDebugging category on UIView listed in &lt;UIKit/UIView.h&gt; may also be helpful.</span><br></pre></td></tr></table></figure></li><li><p>根据提示，找到约束有问题的控件地址<strong>0x7faf99f04010</strong>，然后全局搜索，就能找到具体是哪个控件</p></li><li>如果控制台打印不够直观看出是哪个控件约束有问题，我们可以通过 LLDB命令工具<a href="https://github.com/facebook/chisel" target="_blank" rel="noopener">chisel</a>定位寻找。</li></ul><h3 id="三、解决冲突"><a href="#三、解决冲突" class="headerlink" title="三、解决冲突"></a>三、解决冲突</h3><p>通常解决冲突的方法有：</p><blockquote><ul><li>删除多余约束</li><li>修改约束优先级</li></ul></blockquote><h3 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h3><p>1、<a href="https://stackoverflow.com/questions/26389273/how-to-trap-on-uiviewalertforunsatisfiableconstraints" target="_blank" rel="noopener">How to trap on UIViewAlertForUnsatisfiableConstraints?</a></p>]]></content>
    
    <summary type="html">
    
      在做项目的时候，无意间看到自动布局约束警告，开始也也觉得没什么，虽然有警告，但并不影响UI展示效果。但是越来越有代码洁癖的我，也忍受不了控制台输出一大堆约束警告Log，于是就查阅如何定位解决约束冲突，同时自己也记录下来。下面开始介绍具体操作步骤吧。
    
    </summary>
    
      <category term="iOS" scheme="http://blogwenbo.com/categories/iOS/"/>
    
    
      <category term="iOS" scheme="http://blogwenbo.com/tags/iOS/"/>
    
      <category term="Chisel" scheme="http://blogwenbo.com/tags/Chisel/"/>
    
      <category term="Xcode" scheme="http://blogwenbo.com/tags/Xcode/"/>
    
      <category term="Objective-C" scheme="http://blogwenbo.com/tags/Objective-C/"/>
    
      <category term="Swift" scheme="http://blogwenbo.com/tags/Swift/"/>
    
  </entry>
  
  <entry>
    <title>Chisel-LLDB调试助手</title>
    <link href="http://blogwenbo.com/2018/07/08/Chisel-LLDB%E8%B0%83%E8%AF%95%E5%8A%A9%E6%89%8B/"/>
    <id>http://blogwenbo.com/2018/07/08/Chisel-LLDB调试助手/</id>
    <published>2018-07-08T03:52:01.000Z</published>
    <updated>2018-07-08T04:02:50.619Z</updated>
    
    <content type="html"><![CDATA[<p class="description"></p><a id="more"></a><blockquote><p>Chisel is a collection of LLDB commands to assist debugging iOS apps.</p></blockquote><h3 id="目录"><a href="#目录" class="headerlink" title="目录"></a>目录</h3><blockquote><ul><li>GitHub地址</li><li>安装</li><li>常用常用Commands</li><li>推荐博客</li></ul></blockquote><h3 id="一、GitHub地址"><a href="#一、GitHub地址" class="headerlink" title="一、GitHub地址"></a>一、GitHub地址</h3><p><a href="https://github.com/facebook/chisel" target="_blank" rel="noopener">Chisel</a></p><h3 id="二、安装"><a href="#二、安装" class="headerlink" title="二、安装"></a>二、安装</h3><ul><li>未安装Homrebrew，先安装Homrebrew<br>参考<a href="https://www.jianshu.com/p/c60789934af1" target="_blank" rel="noopener">MAC上Homebrew常用命令</a></li><li><p>安装Chisel</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">brew install chisel</span><br></pre></td></tr></table></figure></li><li><p>如果没有创建<strong>.lldbinit</strong>文件，则在终端创建文件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">touch .lldbinit </span><br><span class="line">//open .lldbinit</span><br></pre></td></tr></table></figure></li><li><p>编辑<strong>.lldbinit</strong>文件，并添加以下内容<code>command script import /usr/local/opt/chisel/libexec/fblldb.py</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">vim .lldbinit</span><br><span class="line"></span><br><span class="line">//添加以下内容</span><br><span class="line"># ~/.lldbinit</span><br><span class="line">...</span><br><span class="line">command script import /path/to/fblldb.py</span><br></pre></td></tr></table></figure></li></ul><p>最后wq保存，重启Xcode，就可以使用Chisel了。</p><h3 id="三、常用Commands"><a href="#三、常用Commands" class="headerlink" title="三、常用Commands"></a>三、常用Commands</h3><table><thead><tr><th style="text-align:left">命令</th><th style="text-align:left">命令描述</th><th style="text-align:left">iOS</th><th style="text-align:left">OS X</th></tr></thead><tbody><tr><td style="text-align:left">pviews</td><td style="text-align:left">Print the recursive view description for the key window.</td><td style="text-align:left">YES</td><td style="text-align:left">YES</td></tr><tr><td style="text-align:left">pvc</td><td style="text-align:left">Print the recursive view controller description for the key window.</td><td style="text-align:left">YES</td><td style="text-align:left">NO</td></tr><tr><td style="text-align:left">visualize</td><td style="text-align:left">Open a UIImage, CGImageRef, UIView, CALayer, NSData (of an image), UIColor, CIColor, or CGColorRef in Preview.app on your Mac.</td><td style="text-align:left">YES</td><td style="text-align:left">NO</td></tr><tr><td style="text-align:left">fv</td><td style="text-align:left">Find a view in the hierarchy whose class name matches the provided regex.</td><td style="text-align:left">YES</td><td style="text-align:left">NO</td></tr><tr><td style="text-align:left">fvc</td><td style="text-align:left">Find a view controller in the hierarchy whose class name matches the provided regex.</td><td style="text-align:left">YES</td><td style="text-align:left">NO</td></tr><tr><td style="text-align:left">show/hide</td><td style="text-align:left">Show or hide the given view or layer. You don’t even have to continue the process to see the changes!</td><td style="text-align:left">YES</td><td style="text-align:left">YES</td></tr><tr><td style="text-align:left">mask/unmask</td><td style="text-align:left">Overlay a view or layer with a transparent rectangle to visualize where it is.</td><td style="text-align:left">YES</td><td style="text-align:left">NO</td></tr><tr><td style="text-align:left">border/unborder</td><td style="text-align:left">Add a border to a view or layer to visualize where it is.</td><td style="text-align:left">YES</td><td style="text-align:left">YES</td></tr><tr><td style="text-align:left">caflush</td><td style="text-align:left">Flush the render server (equivalent to a “repaint” if no animations are in-flight).</td><td style="text-align:left">YES</td><td style="text-align:left">YES</td></tr><tr><td style="text-align:left">bmessage</td><td style="text-align:left">Set a symbolic breakpoint on the method of a class or the method of an instance without worrying which class in the hierarchy actually implements the method.</td><td style="text-align:left">YES</td><td style="text-align:left">YES</td></tr><tr><td style="text-align:left">wivar</td><td style="text-align:left">Set a watchpoint on an instance variable of an object.</td><td style="text-align:left">YES</td><td style="text-align:left">YES</td></tr><tr><td style="text-align:left">presponder</td><td style="text-align:left">Print the responder chain starting from the given object.</td><td style="text-align:left">YES</td><td style="text-align:left">YES</td></tr><tr><td style="text-align:left">…</td><td style="text-align:left">…</td><td style="text-align:left">…</td><td style="text-align:left">…</td></tr></tbody></table><p>就介绍这么多了，现在自己用到的也并不算太多，做下记录，方便自己以后查阅，有兴趣的朋友可以自行了解其用法吧。</p><h3 id="推荐博客"><a href="#推荐博客" class="headerlink" title="推荐博客"></a>推荐博客</h3><p>1、<a href="https://www.jianshu.com/p/b2371dd4443b" target="_blank" rel="noopener">LLdb篇2教你使用faceBook的chisel来提高调试效率</a><br>2、<a href="https://blog.cnbluebox.com/blog/2015/03/05/chisel/" target="_blank" rel="noopener">Chisel-LLDB命令插件，让调试更Easy</a></p>]]></content>
    
    <summary type="html">
    
      在我查阅如何定位视图约束冲突相关博客资料的时候，了解到了**Facebook**开源的这款LLDB调试工具，通过Chisel可以轻松的找到约束有冲突的视图，自己以前只接触过Xcode自带LLDB工具，用的也不算太多，通过阅读相关文档，发现**Chisel**有很多实用的功能，比如说打印视图层级关系，通过命令添加断点，打印对象继承关系，预览打开UIImage、CGImageRef图片，显示隐藏视图或layer等等
    
    </summary>
    
      <category term="iOS" scheme="http://blogwenbo.com/categories/iOS/"/>
    
    
      <category term="iOS" scheme="http://blogwenbo.com/tags/iOS/"/>
    
      <category term="LLDB" scheme="http://blogwenbo.com/tags/LLDB/"/>
    
      <category term="Terminal" scheme="http://blogwenbo.com/tags/Terminal/"/>
    
      <category term="Chisel" scheme="http://blogwenbo.com/tags/Chisel/"/>
    
  </entry>
  
  <entry>
    <title>iOS优秀三方开源库整理，了解一下</title>
    <link href="http://blogwenbo.com/2018/07/08/iOS%E4%BC%98%E7%A7%80%E4%B8%89%E6%96%B9%E5%BC%80%E6%BA%90%E5%BA%93%E6%95%B4%E7%90%86%EF%BC%8C%E4%BA%86%E8%A7%A3%E4%B8%80%E4%B8%8B/"/>
    <id>http://blogwenbo.com/2018/07/08/iOS优秀三方开源库整理，了解一下/</id>
    <published>2018-07-08T03:00:36.000Z</published>
    <updated>2018-07-08T03:46:40.352Z</updated>
    
    <content type="html"><![CDATA[<p class="description"></p><a id="more"></a><h3 id="一、前言"><a href="#一、前言" class="headerlink" title="一、前言"></a>一、前言</h3><blockquote><p>在自己工作之余，收集整理了一些优秀的三方开源框架，自己整理的这些三方开源库涵盖了iOS开发面很多方面的知识。非常感谢这些开源库的作者们，正是因为这些库，提高了我们的开发效率，同样也是我们学习进步的源泉。现将这个整理工程文件分享出来，希望能给需要的朋友一些帮助，同时也自己也做下收集记录。</p></blockquote><p><strong>Github整理的地址</strong>：<br><a href="https://github.com/wenmobo/WBCollectOCThirdLib" target="_blank" rel="noopener">WBCollectOCThirdLib</a><br><a href="https://github.com/wenmobo/WBCollectSwfitThirdLib" target="_blank" rel="noopener">WBCollectSwfitThirdLib</a></p><h3 id="二、Objective-C三方开源库"><a href="#二、Objective-C三方开源库" class="headerlink" title="二、Objective-C三方开源库"></a>二、Objective-C三方开源库</h3><ul><li>表格侧滑菜单  <pre><code>[MGSwipeTableCell](https://github.com/MortimerGoro/MGSwipeTableCell) - **6300 star**  [SWTableViewCell](https://github.com/CEWendel/SWTableViewCell) - **7088 star**    [ZJSwipeTableView](https://github.com/jasnig/ZJSwipeTableView) - **7 star**</code></pre></li><li>表格高度缓存库    <pre><code>[FDTemplateLayoutCell](https://github.com/forkingdog/UITableView-FDTemplateLayoutCell) - **8992 star**   [HYBMasonryAutoCellHeight](https://github.com/CoderJackyHuang/HYBMasonryAutoCellHeight) - **595 star**</code></pre></li><li>表格刷新控件  <pre><code>[MJRefresh](https://github.com/CoderMJLee/MJRefresh) - **12006 star**  [KafkaRefresh](https://github.com/OpenFeyn/KafkaRefresh) - **627 star**</code></pre></li><li>弹出菜单（类似微信弹出菜单）  <pre><code>[FTPopOverMenu](https://github.com/liufengting/FTPopOverMenu) - **712 star**    [kxmenu](https://github.com/kolyvan/kxmenu) - **1776 star**  [PopMenuTableView](https://github.com/KongPro/PopMenuTableView) - **217 star**  </code></pre></li><li>导航栏    <pre><code>[FDFullscreenPopGesture](https://github.com/forkingdog/FDFullscreenPopGesture) - **5010 star**  [KMNavigationBarTransition](https://github.com/MoZhouqi/KMNavigationBarTransition) - **2549 star**  [RTRootNavigationController](https://github.com/rickytan/RTRootNavigationController) - **1333 star**    [WRNavigationBar](https://github.com/wangrui460/WRNavigationBar) - **1852 star**</code></pre></li><li>动画  <pre><code>[lottie-ios](https://github.com/airbnb/lottie-ios) - **14103 star**  [pop](https://github.com/facebook/pop) - **19064 star**     [LSAnimator](https://github.com/Lision/LSAnimator) **1238 star**</code></pre></li><li>分段控件  <pre><code>[HMSegmentedControl](https://github.com/HeshamMegid/HMSegmentedControl) - **3392 star**  </code></pre></li><li>富文本编辑    <pre><code>[ZSSRichTextEditor](https://github.com/nnhubbard/ZSSRichTextEditor) - **2891 star**</code></pre></li><li>弹幕  <pre><code>[HJDanmakuDemo](https://github.com/panghaijiao/HJDanmakuDemo) - **717 star**    </code></pre></li><li>滚动视图  <pre><code>[SwipeView](https://github.com/nicklockwood/SwipeView) - **2611 star**</code></pre></li><li>滚动视图嵌套  <pre><code>[HJTabViewController](https://github.com/panghaijiao/HJTabViewController) - **191 star**    [LTScrollView](https://github.com/gltwy/LTScrollView) - **236 star**</code></pre></li><li>红点提示  <pre><code>[JSBadgeView](https://github.com/JaviSoto/JSBadgeView) - **1209 star**   [WZLBadge](https://github.com/weng1250/WZLBadge) - **1603 star**</code></pre></li><li>键盘  <pre><code>[IQKeyboardManager](https://github.com/hackiftekhar/IQKeyboardManager) - **11697 star**  [MMNumberKeyboard](https://github.com/matmartinez/MMNumberKeyboard) - **911 star**  [TPKeyboardAvoiding](https://github.com/michaeltyson/TPKeyboardAvoiding) - **5568 star**    </code></pre></li><li>界面布局   <pre><code>[FlexLib](https://github.com/zhenglibao/FlexLib) - **496 star**  [Masonry](https://github.com/SnapKit/Masonry) - **16526 star**  [SDAutoLayout](https://github.com/gsdios/SDAutoLayout) - **5241 star**   [WHC_AutoLayoutKit](https://github.com/netyouli/WHC_AutoLayoutKit) - **786 star**</code></pre></li><li>进度指示器    <pre><code>[DACircularProgress](https://github.com/danielamitay/DACircularProgress) - **2307 star**    [SDProgressView](https://github.com/gsdios/SDProgressView) - **378 star**</code></pre></li><li>开发模式  <pre><code>[KVOController](https://github.com/facebook/KVOController) - **6524 star**   </code></pre></li><li>控制器切换    <pre><code>[DWQListOfDifferentOrderStatus](https://github.com/DevelopmentEngineer-DWQ/DWQListOfDifferentOrderStatus) **12 star**   [HYPageView](https://github.com/runlhy/HYPageView) - **74 star**  [SGPagingView](https://github.com/kingsic/SGPagingView) - **822 star**    [WMPageController](https://github.com/wangmchn/WMPageController) - **2229 star**    [ZJScrollPageView](https://github.com/jasnig/ZJScrollPageView) - **847 star**</code></pre></li><li>数据存储  <pre><code>[fmdb](https://github.com/ccgus/fmdb) - **12533 star**   [BGFMDB](https://github.com/huangzhibiao/BGFMDB) - **771 star**  [JKDBModel](https://github.com/Haley-Wong/JKDBModel) - **683 star**  [JRDB](https://github.com/scubers/JRDB) - **480 star**  [LKDBHelper-SQLite-ORM](https://github.com/li6185377/LKDBHelper-SQLite-ORM) - **980 star**</code></pre></li><li>数据转模型  <pre><code>[MJExtension](https://github.com/CoderMJLee/MJExtension) - **7667 star**   [YYModel](https://github.com/ibireme/YYModel) - **3589 star**  [Mantle](https://github.com/Mantle/Mantle)  - **11023 star**    [jsonmodel](https://github.com/jsonmodel/jsonmodel) - **6559 star**  [GDataXML-HTML](https://github.com/graetzer/GDataXML-HTML) - **261 star**</code></pre></li><li>搜索  <pre><code>[PYSearch](https://github.com/ko1o/PYSearch) - **2976 star**</code></pre></li><li>提示框架  <pre><code>[MBProgressHUD](https://github.com/jdg/MBProgressHUD/tree/master) - **14618 star**  [SVProgressHUD](https://github.com/SVProgressHUD/SVProgressHUD) - **11046 star**    [JGProgressHUD](https://github.com/JonasGessner/JGProgressHUD) - **2257 star**  [KSToastView](https://github.com/c0ming/KSToastView) - **91 star**  [MMPopupView](https://github.com/adad184/MMPopupView) - **1910 star**   [SCLAlertView](https://github.com/dogo/SCLAlertView) - **3084 star**   [Toast](https://github.com/scalessec/Toast) - **3085 star**</code></pre></li><li>图表绘制  <pre><code>[AAChartKit](https://github.com/AAChartModel/AAChartKit) - **2241 star**   [JHChart](https://github.com/China131/JHChart) - **508 star**  [ZFChart](https://github.com/Zirkfied/ZFChart) - **670 star**  [DVPieChart](https://github.com/FireMou/DVPieChart) - **63 star**  [DVLineChart](https://github.com/FireMou/DVLineChart) - **56 star**</code></pre></li><li>图片缓存框架  <pre><code>[SDWebImage](https://github.com/rs/SDWebImage) - **22089 star**  [FLAnimatedImage](https://github.com/Flipboard/FLAnimatedImage) - **6691 star**     [iOS-WebP](https://github.com/seanooi/iOS-WebP) - **739 star**  [YYWebImage](https://github.com/ibireme/YYWebImage) - **3195 star**  </code></pre></li><li>图片浏览  <pre><code>[MWPhotoBrowser](https://github.com/mwaterfall/MWPhotoBrowser) - **8238 star**  [PYPhotoBrowser](https://github.com/ko1o/PYPhotoBrowser) - **1782 star**   [SDPhotoBrowser](https://github.com/gsdios/SDPhotoBrowser) - **962 star**    [STPhotoBrowser](https://github.com/STShenZhaoliang/STPhotoBrowser) - **299 star**  [KSPhotoBrowser](https://github.com/skx926/KSPhotoBrowser) - **457 star**</code></pre></li><li>图片轮播  <pre><code>[SDCycleScrollView](https://github.com/gsdios/SDCycleScrollView) - **4921 star**    [HYBLoopScrollView](https://github.com/CoderJackyHuang/HYBLoopScrollView) - **615 star**    [TXScrollLabelView](https://github.com/tingxins/TXScrollLabelView) - **497 star**</code></pre></li><li>图片拾取  <pre><code>[TZImagePickerController](https://github.com/banchichen/TZImagePickerController) - **5065 star**    [CTAssetsPickerController](https://github.com/chiunam/CTAssetsPickerController) - **2142 star**     [DNImagePicker](https://github.com/AwesomeDennis/DNImagePicker) - **365 star**  [HXWeiboPhotoPicker](https://github.com/KeenTeam1990/HXWeiboPhotoPicker) - **7 star**</code></pre></li><li>3D效果图  <pre><code>[HelloPanoramaGL](https://github.com/heroims/HelloPanoramaGL) - **39 star**</code></pre></li><li>网络请求  <pre><code>[AFNetworking](https://github.com/AFNetworking/AFNetworking) - **31246 star**    [YTKNetwork](https://github.com/yuantiku/YTKNetwork) - **5385 star**   [PPNetworkHelper](https://github.com/jkpang/PPNetworkHelper) - **1180 star**     [HYBNetworking](https://github.com/CoderJackyHuang/HYBNetworking) - **541 star**    [SJNetwork](https://github.com/knightsj/SJNetwork) - **153 star**</code></pre></li><li>网络状态监测  <pre><code>[Reachability](https://github.com/tonymillion/Reachability) - **6665 star**</code></pre></li><li>文件下载  <pre><code>[TWRDownloadManager](https://github.com/chasseurmic/TWRDownloadManager) - **366 star**  [ZFDownload](https://github.com/renzifeng/ZFDownload) - **291 star**</code></pre></li><li>旋转木马  <pre><code>[iCarousel](https://github.com/nicklockwood/iCarousel) - **10628 star**  [NewPagedFlowView](https://github.com/PageGuo/NewPagedFlowView) - **512 star**</code></pre></li><li>音视频    <pre><code>[ijkplayer](https://github.com/Bilibili/ijkplayer) - **19602 star**  [ZFPlayer](https://github.com/renzifeng/ZFPlayer) - **4539 star**  [WMPlayer](https://github.com/zhengwenming/WMPlayer) - **2397 star**   [TBPlayer](https://github.com/suifengqjn/TBPlayer) - **1125 star**  [TTAVPlayer](https://github.com/tangdiforx/TTAVPlayer) - **118 star**</code></pre></li><li>占位图        <pre><code>[DZNEmptyDataSet](https://github.com/dzenbot/DZNEmptyDataSet) - **10439 star**  [LYEmptyView](https://github.com/dev-liyang/LYEmptyView) - **657 star**</code></pre></li><li>C语言扩展库   <pre><code>[libextobjc](https://github.com/jspahrsummers/libextobjc) - **3936 star**   </code></pre></li><li>Socket编程    <pre><code>[CocoaAsyncSocket](https://github.com/robbiehanson/CocoaAsyncSocket) - **10193 star**   [SocketRocket](https://github.com/facebook/SocketRocket) - **7833 star**   [socket.io](https://github.com/socketio/socket.io) - **42419 star**  [MQTTKit](https://github.com/mobile-web-messaging/MQTTKit) - **407 star**</code></pre></li><li>内存泄露检测工具  <pre><code>[MLeaksFinder](https://github.com/Tencent/MLeaksFinder) - **3568 star**   [FBRetainCycleDetector](https://github.com/facebook/FBRetainCycleDetector) - **3068 star**</code></pre></li><li>YYKit     <pre><code>[YYKit](https://github.com/ibireme/YYKit) - **12185 star**</code></pre></li><li>LOG工具   <pre><code>[CocoaLumberjack](https://github.com/CocoaLumberjack/CocoaLumberjack) - **10382 star**</code></pre></li><li>OC与JS交互    <pre><code>[WebViewJavascriptBridge](https://github.com/marcuswestin/WebViewJavascriptBridge) - **11017 star**</code></pre></li><li>输入框占位符  <pre><code>[UITextView-Placeholder](https://github.com/devxoul/UITextView-Placeholder) - **797 star**  [RPFloatingPlaceholders](https://github.com/iwasrobbed/RPFloatingPlaceholders) - **1115 star**  [SZTextView](https://github.com/glaszig/SZTextView) - **652 star**  </code></pre></li><li>分类  <pre><code>[JKCategories](https://github.com/shaojiankui/JKCategories) - **2770 star**</code></pre></li><li>图像处理  <pre><code>[GPUImage](https://github.com/BradLarson/GPUImage) - **17606 star**</code></pre></li><li>iOS开发知识集合   <pre><code>[iOS-Tips](https://github.com/awesome-tips/iOS-Tips) - **2187 star**   </code></pre></li><li>面试题集锦    <pre><code>[iOSInterviewQuestions](https://github.com/ChenYilong/iOSInterviewQuestions) - **6809 star**     [iOS-InterviewQuestion-collection](https://github.com/liberalisman/iOS-InterviewQuestion-collection) - **1019 star** </code></pre></li><li>三方开源库分析    <pre><code>[analyze](https://github.com/Draveness/analyze) - **6077 star**</code></pre></li></ul><h3 id="三、Swift三方开源库"><a href="#三、Swift三方开源库" class="headerlink" title="三、Swift三方开源库"></a>三、Swift三方开源库</h3><ul><li>动画  <pre><code>[NVActivityIndicatorView](https://github.com/ninjaprox/NVActivityIndicatorView) - **7098 star**</code></pre></li><li>网络请求  <pre><code>[Alamofire](https://github.com/Alamofire/Alamofire) - **28292 star**</code></pre></li><li>占位图    <pre><code>[SkeletonView](https://github.com/Juanpe/SkeletonView) - **5083 star**</code></pre></li><li>二维码扫描    <pre><code>[EFQRCode](https://github.com/EyreFree/EFQRCode) - **2751 star**</code></pre></li><li>布局框架  <pre><code>[SnapKit](https://github.com/SnapKit/SnapKit) - **12978 star**  </code></pre></li><li>图表绘制  <pre><code>[Charts](https://github.com/danielgindi/Charts) - **18605 star**</code></pre><h3 id="四、结语"><a href="#四、结语" class="headerlink" title="四、结语"></a>四、结语</h3><blockquote><p>上面这些三方开源库按照自己的理解分类整理了一遍，其中OC语言库居多，自己现在也是基于OC开发，Swift收集的相对较少，这些库也是自己现在所了解到的，当然还有很多优秀的三方库自己也未发现和接触，我以后会不断在这篇博客中更新优秀的三方开源库。</p></blockquote></li></ul>]]></content>
    
    <summary type="html">
    
      在自己工作之余，收集整理了一些优秀的三方开源框架，自己整理的这些三方开源库涵盖了iOS开发面很多方面的知识。非常感谢这些开源库的作者们，正是因为这些库，提高了我们的开发效率，同样也是我们学习进步的源泉。现将这个整理工程文件分享出来，希望能给需要的朋友一些帮助，同时也自己也做下收集记录。
    
    </summary>
    
      <category term="iOS" scheme="http://blogwenbo.com/categories/iOS/"/>
    
    
      <category term="iOS" scheme="http://blogwenbo.com/tags/iOS/"/>
    
      <category term="GitHub" scheme="http://blogwenbo.com/tags/GitHub/"/>
    
      <category term="Objective-C" scheme="http://blogwenbo.com/tags/Objective-C/"/>
    
      <category term="Swift" scheme="http://blogwenbo.com/tags/Swift/"/>
    
  </entry>
  
  <entry>
    <title>GitPages+Hexo搭建个人博客</title>
    <link href="http://blogwenbo.com/2018/07/07/GitPages-Hexo%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/"/>
    <id>http://blogwenbo.com/2018/07/07/GitPages-Hexo搭建个人博客/</id>
    <published>2018-07-07T15:24:44.000Z</published>
    <updated>2018-07-08T03:47:31.593Z</updated>
    
    <content type="html"><![CDATA[<p class="description"></p><a id="more"></a><p>如果你想从零开始搭建一个属于自己的静态博客网站，可以参考下面三篇博文，这三篇博文是记录我从零开始搭建自己静态博客的全过程，希望能给需要的朋友一些参考：</p><ul><li><a href="https://www.jianshu.com/p/201283bcd64a" target="_blank" rel="noopener">GitPages+Hexo搭建个人博客</a></li><li><a href="https://www.jianshu.com/p/d5d3e10576d1" target="_blank" rel="noopener">Hexo相关配置和使用</a></li><li><a href="https://www.jianshu.com/p/9f0e90cc32c2" target="_blank" rel="noopener">Hexo-NexT配置超炫网页效果</a></li></ul><p>最终成果： <a href="http://blogwenbo.com/">blogwenbo.com</a></p><h3 id="一、GitHub创建项目"><a href="#一、GitHub创建项目" class="headerlink" title="一、GitHub创建项目"></a>一、GitHub创建项目</h3><ul><li>1.1 使用GitPages搭建自己静态博客前提要注册申请GitHub账号。GitHub相关配置可参考这篇文章：<a href="https://www.jianshu.com/p/7edb6b838a2e" target="_blank" rel="noopener">MAC上Git安装与GitHub基本使用</a>。</li><li>1.2 GitHub上新创建一个<a href="https://github.com/wenmobo/wenmobo.github.io" target="_blank" rel="noopener">wenmobo.github.io</a>仓库，<strong>wenmobo</strong>是我的账号名，这里替换成你自己的就可以了。项目格式名称为<code>[用户名].github.io</code>，如下：<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">username.github.io</span><br></pre></td></tr></table></figure></li></ul><p>创建成功之后如下：<br><img src="http://upload-images.jianshu.io/upload_images/3072214-224c6bb8fcdf8ffd.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="屏幕快照 2018-01-14 下午11.52.25.png"></p><ul><li>1.3 在桌面新建一个文件夹<strong>MyBlog</strong>，<code>cd</code>到该文件夹，将项目克隆到本地：<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone git@github.com:wenmobo/wenmobo.github.io.git</span><br></pre></td></tr></table></figure></li></ul><h3 id="二、安装Node-js"><a href="#二、安装Node-js" class="headerlink" title="二、安装Node.js"></a>二、安装<a href="https://nodejs.org/en/" target="_blank" rel="noopener">Node.js</a></h3><ul><li>2.1 Node.js支持用HomeBrew安装，首先要安装Homebrew，Homebrew安装可查看这篇文章：<a href="https://www.jianshu.com/p/c60789934af1" target="_blank" rel="noopener">MAC上Homebrew常用命令整理</a></li><li>2.2 Homebrew安装好之后，用Homebrew安装Node.js，终端输入：<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">brew node</span><br></pre></td></tr></table></figure></li></ul><h3 id="三、安装hexo"><a href="#三、安装hexo" class="headerlink" title="三、安装hexo"></a>三、安装<a href="https://hexo.io/zh-cn/" target="_blank" rel="noopener">hexo</a></h3><ul><li><p>3.1 安装hexo，终端输入：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install -g hexo-cli</span><br></pre></td></tr></table></figure></li><li><p>3.2 在本地仓库<strong>MyBlog</strong>新建文件夹<strong>Blog</strong>，然后在终端<code>cd [Blog文件夹路径]</code>，执行以下命令初始化博客：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">hexo init</span><br><span class="line"></span><br><span class="line">//或者</span><br><span class="line">hexo init &lt;folder&gt;</span><br><span class="line">cd &lt;folder&gt;</span><br><span class="line">npm instal</span><br></pre></td></tr></table></figure></li></ul><p>成功之后，目录文件如下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">.</span><br><span class="line">├── _config.yml</span><br><span class="line">├── package.json</span><br><span class="line">├── scaffolds</span><br><span class="line">├── source</span><br><span class="line">|   ├── _drafts</span><br><span class="line">|   └── _posts</span><br><span class="line">└── themes</span><br></pre></td></tr></table></figure></p><ul><li>3.3 查看本地效果，终端输入：<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo s</span><br></pre></td></tr></table></figure></li></ul><p>终端输出：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">WMBdeMacBook-Pro:Hexo WENBO$ hexo s</span><br><span class="line">INFO  Start processing</span><br><span class="line">INFO  Hexo is running at http://localhost:4000/. Press Ctrl+C to stop.</span><br></pre></td></tr></table></figure></p><p>将<a href="http://localhost:4000/.拷贝到Chome浏览器，查看效果，如下图所示：" target="_blank" rel="noopener">http://localhost:4000/.拷贝到Chome浏览器，查看效果，如下图所示：</a><br><img src="http://upload-images.jianshu.io/upload_images/3072214-9ce7b0f78ef70404.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="屏幕快照 2018-01-14 下午11.01.57.png"></p><h3 id="四、总结"><a href="#四、总结" class="headerlink" title="四、总结"></a>四、总结</h3><blockquote><p>GitHubPages+Hexo搭建静态博客的准备工作到这里都完成了，下面一篇文章：<a href="https://www.jianshu.com/p/d5d3e10576d1" target="_blank" rel="noopener">Hexo相关配置和使用</a>会介绍Hexo相关配置。</p></blockquote><h3 id="五、参考文章"><a href="#五、参考文章" class="headerlink" title="五、参考文章"></a>五、参考文章</h3><p>1、<a href="http://blog.csdn.net/yanzhenjie1003/article/details/51703370" target="_blank" rel="noopener">GithubPages教程 在GithubPages上搭建个人主页</a><br>2、<a href="https://itgoyo.github.io/2019/12/28/%E5%9C%A8Github%E4%B8%8A%E4%BD%BF%E7%94%A8Hexo%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2.html" target="_blank" rel="noopener">在Github上使用Hexo搭建个人博客</a><br>3、<a href="https://www.jianshu.com/p/6d2ec4ca6186" target="_blank" rel="noopener">如何使用hexo搭建个人博客（Mac OS系统，windows仅作参考）</a><br>4、<a href="https://www.jianshu.com/p/bcdbe7347c8d" target="_blank" rel="noopener">Hexo博客主题推荐</a></p>]]></content>
    
    <summary type="html">
    
      这篇文章主要介绍如何用GitPages+Hexo搭建个人博客，如果你也有兴趣，那么这篇文章对你将有所帮助。
    
    </summary>
    
      <category term="Hexo" scheme="http://blogwenbo.com/categories/Hexo/"/>
    
    
      <category term="Hexo" scheme="http://blogwenbo.com/tags/Hexo/"/>
    
      <category term="GitHub" scheme="http://blogwenbo.com/tags/GitHub/"/>
    
      <category term="GitPages" scheme="http://blogwenbo.com/tags/GitPages/"/>
    
  </entry>
  
</feed>
