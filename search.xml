<?xml version="1.0" encoding="utf-8"?>
<search> 
  
    
    <entry>
      <title>Cell自适应高度标签</title>
      <link href="/2018/07/08/Cell%E8%87%AA%E9%80%82%E5%BA%94%E9%AB%98%E5%BA%A6%E6%A0%87%E7%AD%BE/"/>
      <url>/2018/07/08/Cell%E8%87%AA%E9%80%82%E5%BA%94%E9%AB%98%E5%BA%A6%E6%A0%87%E7%AD%BE/</url>
      <content type="html"><![CDATA[<p class="description"></p><a id="more"></a><h3 id="一、本地数据自适应"><a href="#一、本地数据自适应" class="headerlink" title="一、本地数据自适应"></a>一、本地数据自适应</h3><ul><li>在做项目意见反馈的时候，需要选择反馈类型，整个界面是UITableView，我现在喜欢用自动布局，用的Masonry布局框架，开始选择类型是放在本地的，用Masonry实现cell高度自适应还算相对简单的，下面是实现数据在本地高度自适应的核心代码，该方法在cell初始化方法中调用：<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br></pre></td><td class="code"><pre><span class="line">- (void)initSubviews &#123;</span><br><span class="line">    /** &lt;&lt; init subviews &gt; */</span><br><span class="line">    CGFloat margin = 15.f;</span><br><span class="line">    CGFloat spacing = 10.f;</span><br><span class="line">    CGFloat maxWidth = ScreenWidth;</span><br><span class="line">    __block CGFloat rowWidth = 0;</span><br><span class="line">    __block BOOL isNeedChangeLine = YES;</span><br><span class="line">    __block UIButton *lastButton = nil;</span><br><span class="line">    NSInteger count = self.dataArray.count;</span><br><span class="line">    [self.dataArray enumerateObjectsUsingBlock:^(CYBImageTitleModel * _Nonnull obj, NSUInteger idx, BOOL * _Nonnull stop) &#123;</span><br><span class="line">        UIButton *button = [UIButton buttonWithType:UIButtonTypeCustom];</span><br><span class="line">        button.titleLabel.font = FONT(14.f);</span><br><span class="line">        button.adjustsImageWhenHighlighted = NO;</span><br><span class="line">        [button setTitleColor:[UIColor lightGrayColor]</span><br><span class="line">                     forState:UIControlStateNormal];</span><br><span class="line">        [button setTitleColor:Color_Orange</span><br><span class="line">                     forState:UIControlStateSelected];</span><br><span class="line">        [button setBackgroundImage:obj.image</span><br><span class="line">                          forState:UIControlStateNormal];</span><br><span class="line">        [button setBackgroundImage:obj.selectedImage</span><br><span class="line">                          forState:UIControlStateSelected];</span><br><span class="line">        [button setTitle:obj.title</span><br><span class="line">                forState:UIControlStateNormal];</span><br><span class="line">        button.tag = kBTN_TAG + idx;</span><br><span class="line">        button.selected = obj.isSelected;</span><br><span class="line">        if (obj.isSelected) &#123;</span><br><span class="line">            tempBtn = button;</span><br><span class="line">        &#125;</span><br><span class="line">        [button wb_addTarget:self action:@selector(buttonClicked:)];</span><br><span class="line">        </span><br><span class="line">        [self.contentView addSubview:button];</span><br><span class="line"></span><br><span class="line">        CGFloat titleWidth = [obj.title boundingRectWithSize:CGSizeMake(CGFLOAT_MAX, 28)</span><br><span class="line">                                                     options:NSStringDrawingUsesLineFragmentOrigin</span><br><span class="line">                                                  attributes:@&#123;NSFontAttributeName : FONT(14.f)&#125; context:nil].size.width + 2 * 8;</span><br><span class="line">        rowWidth += titleWidth + spacing;</span><br><span class="line">        /** &lt; 是否需要换行 &gt;  */</span><br><span class="line">        if (rowWidth &gt; maxWidth - 2 * margin) &#123;</span><br><span class="line">            isNeedChangeLine = YES;</span><br><span class="line">            /** &lt; 判断是否超过最大值 &gt;  */</span><br><span class="line">            if (titleWidth + 2 * margin &gt; maxWidth) &#123;</span><br><span class="line">                titleWidth = maxWidth - 2 * margin;</span><br><span class="line">            &#125;</span><br><span class="line">            /** &lt; 换行后重新设置当前行的总宽度 &gt;  */</span><br><span class="line">            rowWidth = titleWidth + spacing;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        [button mas_makeConstraints:^(MASConstraintMaker *make) &#123;</span><br><span class="line">            /** &lt; 换行 &gt;  */</span><br><span class="line">            if (isNeedChangeLine) &#123;</span><br><span class="line">                if (!lastButton) &#123;</span><br><span class="line">                    make.top.equalTo(self.contentView.mas_top).offset(margin);</span><br><span class="line">                &#125;else &#123;</span><br><span class="line">                    make.top.equalTo(lastButton.mas_bottom).offset(spacing);</span><br><span class="line">                &#125;</span><br><span class="line">                make.left.equalTo(self.contentView.mas_left).offset(margin);</span><br><span class="line">                isNeedChangeLine = NO;</span><br><span class="line">            &#125;else &#123;</span><br><span class="line">                make.left.equalTo(lastButton.mas_right).offset(spacing);</span><br><span class="line">                make.top.equalTo(lastButton.mas_top);</span><br><span class="line">            &#125;</span><br><span class="line">            make.height.mas_equalTo(@(28));</span><br><span class="line">            make.width.mas_equalTo(@(titleWidth));</span><br><span class="line">            </span><br><span class="line">            /** &lt; 最后一个 &gt;  */</span><br><span class="line">            if (idx == count - 1) &#123;</span><br><span class="line">                make.bottom.equalTo(self.contentView.mas_bottom).offset(-margin);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;];</span><br><span class="line">        lastButton = button;</span><br><span class="line">    &#125;];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h3 id="二、网络请求数据高度自适应"><a href="#二、网络请求数据高度自适应" class="headerlink" title="二、网络请求数据高度自适应"></a>二、网络请求数据高度自适应</h3><ul><li><p>后来改需求了，需要从网络请求意见反馈类型，好吧，上面的方法已经有实现高度自适应关键代码了，只要稍作修改就可实现了。但是实现过程并不是想象中那么简单，中间也经理了很多波折。因为时间还是很充裕的，我就考虑到将标签空间封装成一个视图，等要使用的时候自己添加到cell上，并设置上下左右约束，封装完成之后并没有达到我想要的效果，我发现cell根本就撑不起来，我检查了一遍约束，上下左右约束没有遗漏呀，封装的视图<strong>WBAutoTagListView</strong>核心代码如下，约束实在<strong>layoutSubviews</strong>设置的：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line">#pragma mark &lt; Layout &gt;</span><br><span class="line">- (void)layoutSubviews &#123;</span><br><span class="line">    [super layoutSubviews];</span><br><span class="line">    </span><br><span class="line">    CGFloat maxWidth = self.bounds.size.width - _secionInset.left - _secionInset.right;</span><br><span class="line">    __block CGFloat rowWidth = 0;</span><br><span class="line">    __block BOOL isNeedChangeLine = YES;</span><br><span class="line">    __block WBTagListItem *lastItem = nil;</span><br><span class="line">    NSInteger count = self.itemArray.count;</span><br><span class="line">    [self.itemArray enumerateObjectsUsingBlock:^(WBTagListItem * _Nonnull obj, NSUInteger idx, BOOL * _Nonnull stop) &#123;</span><br><span class="line">        </span><br><span class="line">        CGFloat titleWidth = obj.titleWidth;</span><br><span class="line">        rowWidth += titleWidth + _minimumInteritemSpacing;</span><br><span class="line">         /** &lt; 是否需要换行 &gt;  */</span><br><span class="line">        if (rowWidth &gt; maxWidth - 2 * _minimumInteritemSpacing) &#123;</span><br><span class="line">            isNeedChangeLine = YES;</span><br><span class="line">            /** &lt; 判断是否超过最大值 &gt;  */</span><br><span class="line">            if (titleWidth + 2 * _minimumInteritemSpacing &gt; maxWidth) &#123;</span><br><span class="line">                titleWidth = maxWidth - 2 * _minimumInteritemSpacing;</span><br><span class="line">            &#125;</span><br><span class="line">            /** &lt; 换行后重新设置当前行的总宽度 &gt;  */</span><br><span class="line">            rowWidth = titleWidth + _minimumInteritemSpacing;</span><br><span class="line">        &#125;</span><br><span class="line">        [obj mas_makeConstraints:^(MASConstraintMaker *make) &#123;</span><br><span class="line">            /** &lt; 换行 &gt;  */</span><br><span class="line">            if (isNeedChangeLine) &#123;</span><br><span class="line">                if (!lastItem) &#123;</span><br><span class="line">                    make.top.equalTo(self.mas_top).offset(_secionInset.top);</span><br><span class="line">                &#125;else &#123;</span><br><span class="line">                    make.top.equalTo(lastItem.mas_bottom).offset(_minimumLineSpacing);</span><br><span class="line">                &#125;</span><br><span class="line">                make.left.equalTo(self.mas_left).offset(_secionInset.left);</span><br><span class="line">                isNeedChangeLine = NO;</span><br><span class="line">            &#125;else &#123;</span><br><span class="line">                make.left.equalTo(lastItem.mas_right).offset(_minimumInteritemSpacing);</span><br><span class="line">                make.top.equalTo(lastItem.mas_top);</span><br><span class="line">            &#125;</span><br><span class="line">            make.height.mas_equalTo(@(_itemHeight));</span><br><span class="line">            make.width.mas_equalTo(@(titleWidth));</span><br><span class="line">            </span><br><span class="line">            /** &lt; 最后一个 &gt;  */</span><br><span class="line">            if (idx == count - 1) &#123;</span><br><span class="line">                make.bottom.mas_offset(-_secionInset.bottom).priorityMedium();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;];</span><br><span class="line">        lastItem = obj;</span><br><span class="line">    &#125;];</span><br><span class="line">    NSLog(@&quot;%f&quot;,[self systemLayoutSizeFittingSize:UILayoutFittingCompressedSize].height);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>经测试，将该视图添加到控制器的视图上是可以自适应高度的，但是添加的cell上，就无法撑cell高度，尝试了许多写法，还是未能实现，控制台提示了无法算出cell的高度，就给了一个默认高度，顿时都无语了，有知道的大神能告诉我为什么有内容却无法撑起cell高度吗？</p></li><li><p>既然封装的视图无法实现cell高度自适应，我就尝试另外的思路方法，既然是cell自适应，那就索性封装一个标签cell吧<strong>WBTagListViewCell</strong>，为了可复用性，也为<strong>WBTagListViewCell</strong>添加了一些配置属性，如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line">/** &lt; 数据源 &gt; */</span><br><span class="line">@property (nonatomic, strong) NSArray &lt;WBTagListModel *&gt;*items;</span><br><span class="line">/** &lt; 内边距 默认： UIEdgeInsetsMake(15, 15, 15, 15) &gt; */</span><br><span class="line">@property (nonatomic, assign) UIEdgeInsets secionInset;</span><br><span class="line">/** &lt; 行间距 默认：15 &gt; */</span><br><span class="line">@property (nonatomic, assign) CGFloat minimumLineSpacing;</span><br><span class="line">/** &lt; item之间距离 默认：10 &gt; */</span><br><span class="line">@property (nonatomic, assign) CGFloat minimumInteritemSpacing;</span><br><span class="line">/** &lt; 是否允许点击 默认：YES &gt; */</span><br><span class="line">@property (nonatomic, assign) BOOL allowSelection;</span><br><span class="line">/** &lt; 是否允许多选 默认：NO &gt; */</span><br><span class="line">@property (nonatomic, assign) BOOL allowMultipleSelection;</span><br><span class="line">/** &lt; 标签高度 默认：28.f &gt; */</span><br><span class="line">@property (nonatomic, assign) CGFloat itemHeight;</span><br><span class="line"></span><br><span class="line">/** &lt; 标签左右间距 默认：10.f &gt; */</span><br><span class="line">@property (nonatomic, assign) CGFloat leftRightMargin;</span><br><span class="line">/** &lt; 背景图片 &gt; */</span><br><span class="line">@property (nonatomic, copy) NSString *bgImageName;</span><br><span class="line">/** &lt; 选中背景图片 &gt; */</span><br><span class="line">@property (nonatomic, copy) NSString *selectedBgImageName;</span><br><span class="line">/** &lt; 标签颜色 默认：浅灰色 &gt; */</span><br><span class="line">@property (nonatomic, strong) UIColor *titleColor;</span><br><span class="line">/** &lt; 按钮选中颜色 &gt; */</span><br><span class="line">@property (nonatomic, strong) UIColor *titleSelectedColor;</span><br><span class="line">/** &lt; 标题大小 默认：14pt &gt; */</span><br><span class="line">@property (nonatomic, strong) UIFont *font;</span><br><span class="line">/** &lt; 边框宽度 默认：0 &gt; */</span><br><span class="line">@property (nonatomic, assign) CGFloat borderWidth;</span><br><span class="line">/** &lt; 边框颜色 bodoerWidth &gt; 0 设置有效 &gt; */</span><br><span class="line">@property (nonatomic, strong) UIColor *borderColor;</span><br><span class="line">/** &lt; 选中边框颜色 bodoerWidth &gt; 0 设置有效 &gt; */</span><br><span class="line">@property (nonatomic, strong) UIColor *selectedBorderColor;</span><br><span class="line">/** &lt; 圆角大小 默认：0 &gt; */</span><br><span class="line">@property (nonatomic, assign) CGFloat cornerRadius;</span><br><span class="line">/** &lt; 选中的item &gt; */</span><br><span class="line">@property (nonatomic, strong) NSMutableArray *selectedItems;</span><br><span class="line"></span><br><span class="line">@property (nonatomic, weak) id &lt;WBTagListViewCellDelegate&gt; delegate;</span><br></pre></td></tr></table></figure></li><li><p>关键实现步骤是重写了cell的<strong>updateConstraints</strong>，在有数据源的时候调用<strong>setNeedsUpdateConstraints</strong>，关键代码如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br></pre></td><td class="code"><pre><span class="line">- (void)createTagWithData:(NSArray &lt;WBTagListModel *&gt;*)itemsArray &#123;</span><br><span class="line">    for (UIView *view in self.itemArray) &#123;</span><br><span class="line">        [view removeFromSuperview];</span><br><span class="line">    &#125;</span><br><span class="line">    [self.itemArray removeAllObjects];</span><br><span class="line">    </span><br><span class="line">    for (NSInteger index = 0; index &lt; itemsArray.count; index ++) &#123;</span><br><span class="line">        WBTagListItem *item = [WBTagListItem new];</span><br><span class="line">        item.title = itemsArray[index].title;</span><br><span class="line">        item.isSelected = itemsArray[index].isSelected;</span><br><span class="line">        item.itemTag = index;</span><br><span class="line">        item.delegate = self;</span><br><span class="line">        [self.contentView addSubview:item];</span><br><span class="line">        [self.itemArray addObject:item];</span><br><span class="line">        </span><br><span class="line">        /** &lt; 默认选中第一个 &gt; */</span><br><span class="line">        if (index == 0 &amp;&amp; itemsArray[index].isSelected) &#123;</span><br><span class="line">            _tempItem = item;</span><br><span class="line">            [self.selectedItems removeAllObjects];</span><br><span class="line">            [self.selectedItems addObject:_tempItem];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    [self setNeedsUpdateConstraints];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">- (void)updateConstraints &#123;</span><br><span class="line">    [super updateConstraints];</span><br><span class="line">    </span><br><span class="line">    CGFloat maxWidth = self.contentView.bounds.size.width - _secionInset.left - _secionInset.right;</span><br><span class="line">    __block CGFloat rowWidth = 0;</span><br><span class="line">    __block BOOL isNeedChangeLine = YES;</span><br><span class="line">    __block WBTagListItem *lastItem = nil;</span><br><span class="line">    NSInteger count = self.itemArray.count;</span><br><span class="line">    [self.itemArray enumerateObjectsUsingBlock:^(WBTagListItem * _Nonnull obj, NSUInteger idx, BOOL * _Nonnull stop) &#123;</span><br><span class="line">        </span><br><span class="line">        CGFloat titleWidth = obj.titleWidth;</span><br><span class="line">        rowWidth += titleWidth + _minimumInteritemSpacing;</span><br><span class="line">        /** &lt; 是否需要换行 &gt;  */</span><br><span class="line">        if (rowWidth &gt; maxWidth - 2 * _minimumInteritemSpacing) &#123;</span><br><span class="line">            isNeedChangeLine = YES;</span><br><span class="line">            /** &lt; 判断是否超过最大值 &gt;  */</span><br><span class="line">            if (titleWidth + 2 * _minimumInteritemSpacing &gt; maxWidth) &#123;</span><br><span class="line">                titleWidth = maxWidth - 2 * _minimumInteritemSpacing;</span><br><span class="line">            &#125;</span><br><span class="line">            /** &lt; 换行后重新设置当前行的总宽度 &gt;  */</span><br><span class="line">            rowWidth = titleWidth + _minimumInteritemSpacing;</span><br><span class="line">        &#125;</span><br><span class="line">        [obj mas_makeConstraints:^(MASConstraintMaker *make) &#123;</span><br><span class="line">            /** &lt; 换行 &gt;  */</span><br><span class="line">            if (isNeedChangeLine) &#123;</span><br><span class="line">                if (!lastItem) &#123;</span><br><span class="line">                    make.top.equalTo(self.contentView.mas_top).offset(_secionInset.top);</span><br><span class="line">                &#125;else &#123;</span><br><span class="line">                    make.top.equalTo(lastItem.mas_bottom).offset(_minimumLineSpacing);</span><br><span class="line">                &#125;</span><br><span class="line">                make.left.equalTo(self.contentView.mas_left).offset(_secionInset.left);</span><br><span class="line">                isNeedChangeLine = NO;</span><br><span class="line">            &#125;else &#123;</span><br><span class="line">                make.left.equalTo(lastItem.mas_right).offset(_minimumInteritemSpacing);</span><br><span class="line">                make.top.equalTo(lastItem.mas_top);</span><br><span class="line">            &#125;</span><br><span class="line">            make.height.mas_equalTo(@(_itemHeight));</span><br><span class="line">            make.width.mas_equalTo(@(titleWidth));</span><br><span class="line">            </span><br><span class="line">            /** &lt; 最后一个 &gt;  */</span><br><span class="line">            if (idx == count - 1) &#123;</span><br><span class="line">                make.bottom.equalTo(self.contentView.mas_bottom).offset(-_secionInset.bottom).priorityMedium();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;];</span><br><span class="line">        lastItem = obj;</span><br><span class="line">    &#125;];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>最后运行效果也贴一张图吧<br><img src="https://user-gold-cdn.xitu.io/2018/6/8/163db0915798250b?w=884&amp;h=1915&amp;f=png&amp;s=173327" alt="Simulator Screen Shot - iPhone X - 2018-06-07 at 23.48.33.png"></p></li><li>封装cell在实现过程中，也遇到一些问题，最开始把约束写到<strong>layoutSubviews</strong>还是无法自适应高度，再就是要考虑到cell复用的问题。不管怎样最后还是实现了自己想要的效果，由于技术有限，可能我有写的不对不好的地方，还请斧正。最后也贴出自动布局和frame布局标签demo，如果觉得对你有帮助，请Star鼓励下吧。<h3 id="三、GitHub-Demo"><a href="#三、GitHub-Demo" class="headerlink" title="三、GitHub Demo"></a>三、GitHub Demo</h3>Auto：<a href="https://github.com/wenmobo/WBTagsView/tree/master/WBAutoTagListViewDemo" target="_blank" rel="noopener">WBAutoTagListViewDemo</a><br>Frame：<a href="https://github.com/wenmobo/WBTagsView/tree/master/WB_TagsViewDemo" target="_blank" rel="noopener">WB_TagsViewDemo</a></li></ul><h3 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h3><ul><li><a href="https://developer.apple.com/documentation/uikit/uiview/1622450-setneedsupdateconstraints" target="_blank" rel="noopener">Apple官方文档</a></li></ul>]]></content>
      
      <categories>
          
          <category> iOS </category>
          
      </categories>
      
      
        <tags>
            
            <tag> iOS </tag>
            
            <tag> Objective-C </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>item2自动连接SSH</title>
      <link href="/2018/07/08/item2%E8%87%AA%E5%8A%A8%E8%BF%9E%E6%8E%A5SSH/"/>
      <url>/2018/07/08/item2%E8%87%AA%E5%8A%A8%E8%BF%9E%E6%8E%A5SSH/</url>
      <content type="html"><![CDATA[<p class="description"></p><a id="more"></a><h3 id="目录"><a href="#目录" class="headerlink" title="目录"></a>目录</h3><blockquote><p>1、编辑命令脚本<br>2、配置item2</p></blockquote><h4 id="1、编辑命令脚本"><a href="#1、编辑命令脚本" class="headerlink" title="1、编辑命令脚本"></a>1、编辑命令脚本</h4><ul><li><p>2.1.1 打开item2终端，创建脚本文件<strong>CentOSAutoLoginSSH</strong>（名字可以自定义）文件，保存在一个你指定的文件夹下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">//切换文件夹</span><br><span class="line">cd [你要保存的文件夹下]</span><br><span class="line"></span><br><span class="line">//创建文件</span><br><span class="line">touch CentOSAutoLoginSSH</span><br></pre></td></tr></table></figure></li><li><p>2.1.2 编辑CentOSAutoLoginSSH</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim CentOSAutoLoginSSH</span><br></pre></td></tr></table></figure></li></ul><p>2.1.3 配置CentOSAutoLoginSSH<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">#!/usr/bin/expect -f  </span><br><span class="line">#搬瓦工控制面板中的SSH Port</span><br><span class="line">  set port 2121  </span><br><span class="line">#默认用户名root</span><br><span class="line">  set user root  </span><br><span class="line">#主机地址</span><br><span class="line">  set host 172.16.10.71  </span><br><span class="line">#密码</span><br><span class="line">  set password mima123456  </span><br><span class="line">  set timeout -1  </span><br><span class="line">   </span><br><span class="line">  spawn ssh -p$port $user@$host  </span><br><span class="line">  expect &quot;*assword:*&quot;  </span><br><span class="line">  send &quot;$password\r&quot;  </span><br><span class="line">  interact  </span><br><span class="line">  expect eof  </span><br><span class="line"></span><br><span class="line">:wq</span><br></pre></td></tr></table></figure></p><p>编辑完成之后<code>:wq</code>保存配置信息。</p><h4 id="2、配置item2"><a href="#2、配置item2" class="headerlink" title="2、配置item2"></a>2、配置item2</h4><ul><li>2.2.1 item2-&gt;Preference-&gt;Profile添加配置文件，操作如下图所示：<br><img src="https://user-gold-cdn.xitu.io/2018/6/10/163e84603e9d33cf?w=1240&amp;h=768&amp;f=png&amp;s=247953" alt="屏幕快照 2018-05-20 下午6.42.05.png"></li><li>2.2.2 测试免密自动登录，选择顶部菜单<strong>Profile</strong>中的<strong>CentOSAutoLoginSSH</strong>，这时可能会报错，因为<strong>CentOSAutoLoginSSH</strong>没有执行权限，需要执行以下命令：<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chmod u+x /Users/user/.ssh/CentOSAutoLoginSSH</span><br></pre></td></tr></table></figure></li></ul><p><img src="https://user-gold-cdn.xitu.io/2018/6/10/163e846040081c42?w=496&amp;h=326&amp;f=png&amp;s=46574" alt="屏幕快照 2018-05-20 下午6.47.14.png"></p><p>然后测试，就实现了免密自动登录了。</p><ul><li>2.2.3 然后我们就可以查看shadowsocks文件下的配置文件了<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cat /etc/shadowsocks/config.json</span><br></pre></td></tr></table></figure></li></ul><h3 id="参考文章"><a href="#参考文章" class="headerlink" title="参考文章"></a>参考文章</h3><ul><li><a href="https://blog.csdn.net/fangxiaoji/article/details/50710220" target="_blank" rel="noopener">使用iTerm2快捷连接SSH</a></li><li><a href="https://blog.csdn.net/jobschen/article/details/52823980" target="_blank" rel="noopener">Mac Item2 SSH免密登录Linux 服务器的两种方式</a></li></ul>]]></content>
      
      <categories>
          
          <category> MAC </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Terminal </tag>
            
            <tag> item2 </tag>
            
            <tag> SSH </tag>
            
            <tag> Shadowsocks </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Xcode无线真机调试</title>
      <link href="/2018/07/08/Xcode%E6%97%A0%E7%BA%BF%E7%9C%9F%E6%9C%BA%E8%B0%83%E8%AF%95/"/>
      <url>/2018/07/08/Xcode%E6%97%A0%E7%BA%BF%E7%9C%9F%E6%9C%BA%E8%B0%83%E8%AF%95/</url>
      <content type="html"><![CDATA[<p class="description"></p><a id="more"></a><h3 id="一、硬性条件"><a href="#一、硬性条件" class="headerlink" title="一、硬性条件"></a>一、硬性条件</h3><ul><li>硬件环境<br>MAC、Xcode9</li><li>系统<br>Mac OSX 10.12.5、iOS11<h3 id="二、具体操作步骤"><a href="#二、具体操作步骤" class="headerlink" title="二、具体操作步骤"></a>二、具体操作步骤</h3></li><li>将手机用数据线连接到MAC，Xcode-&gt;Devices And Simulators-&gt;Devices中勾选<strong>connect via network</strong><br><img src="https://user-gold-cdn.xitu.io/2018/6/10/163e852cb5e36b84?w=1240&amp;h=871&amp;f=png&amp;s=181947" alt="屏幕快照 2018-06-05 下午10.40.47.png"></li><li>点击手机图标，鼠标右键，配置局域网Connect via IP Address<br><img src="https://user-gold-cdn.xitu.io/2018/6/10/163e852cba4f9aa5?w=1240&amp;h=865&amp;f=png&amp;s=147034" alt="屏幕快照 2018-06-05 下午10.44.35.png"></li><li>配置完成之后手机图标会有一个地球标志，带表已经连接成功</li><li>最后运行项目，就可以无线调试啦</li></ul>]]></content>
      
      <categories>
          
          <category> iOS </category>
          
      </categories>
      
      
        <tags>
            
            <tag> iOS </tag>
            
            <tag> LLDB </tag>
            
            <tag> Xcode </tag>
            
            <tag> iPhone </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>iOS定位处理约束冲突</title>
      <link href="/2018/07/08/iOS%E5%AE%9A%E4%BD%8D%E5%A4%84%E7%90%86%E7%BA%A6%E6%9D%9F%E5%86%B2%E7%AA%81/"/>
      <url>/2018/07/08/iOS%E5%AE%9A%E4%BD%8D%E5%A4%84%E7%90%86%E7%BA%A6%E6%9D%9F%E5%86%B2%E7%AA%81/</url>
      <content type="html"><![CDATA[<p class="description"></p><a id="more"></a><h3 id="一、添加UIViewAlertForUnsatisfiableConstraints断点"><a href="#一、添加UIViewAlertForUnsatisfiableConstraints断点" class="headerlink" title="一、添加UIViewAlertForUnsatisfiableConstraints断点"></a>一、添加UIViewAlertForUnsatisfiableConstraints断点</h3><ul><li>添加<strong>Symbolic Breakpoints</strong><br><img src="https://user-gold-cdn.xitu.io/2018/6/10/163e857ace3a0af6?w=428&amp;h=226&amp;f=png&amp;s=37641" alt="屏幕快照 2018-06-04 下午2.44.35.png"></li><li><p>编辑断点symbol填入</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">UIViewAlertForUnsatisfiableConstraints</span><br></pre></td></tr></table></figure></li><li><p>添加控制台打印action</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">po [[UIWindow keyWindow] _autolayoutTrace]</span><br></pre></td></tr></table></figure></li></ul><p><img src="https://user-gold-cdn.xitu.io/2018/6/10/163e857ace93dcbb?w=998&amp;h=514&amp;f=png&amp;s=129745" alt="屏幕快照 2018-06-04 下午2.44.50.png"></p><h3 id="二、定位约束警告冲突"><a href="#二、定位约束警告冲突" class="headerlink" title="二、定位约束警告冲突"></a>二、定位约束警告冲突</h3><ul><li><p>添加好断点之后，当界面有约束冲突，就会触发断点，控制打印如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">[LayoutConstraints] Unable to simultaneously satisfy constraints.</span><br><span class="line">Probably at least one of the constraints in the following list is one you don&apos;t want. </span><br><span class="line">Try this: </span><br><span class="line">(1) look at each constraint and try to figure out which you don&apos;t expect; </span><br><span class="line">(2) find the code that added the unwanted constraint or constraints and fix it. </span><br><span class="line">(</span><br><span class="line">&lt;MASLayoutConstraint:0x604000ab04a0 UIButton:0x7faf99f04010.width == 40&gt;,</span><br><span class="line">&lt;MASLayoutConstraint:0x604000ab66e0 UIButton:0x7faf99f04010.left == CYBButtonView:0x7faf99f83360.left + 10&gt;,</span><br><span class="line">&lt;MASLayoutConstraint:0x604000abaa00 UILabel:0x7faf99f5f8e0.left == UIButton:0x7faf99f04010.right&gt;,</span><br><span class="line">&lt;MASLayoutConstraint:0x604000abd580 UILabel:0x7faf99f5f8e0.left == CYBButtonView:0x7faf99f83360.left + 15&gt;,</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line">Will attempt to recover by breaking constraint </span><br><span class="line">&lt;MASLayoutConstraint:0x604000ab04a0 UIButton:0x7faf99f04010.width == 40&gt;</span><br><span class="line"></span><br><span class="line">Make a symbolic breakpoint at UIViewAlertForUnsatisfiableConstraints to catch this in the debugger.</span><br><span class="line">The methods in the UIConstraintBasedLayoutDebugging category on UIView listed in &lt;UIKit/UIView.h&gt; may also be helpful.</span><br></pre></td></tr></table></figure></li><li><p>根据提示，找到约束有问题的控件地址<strong>0x7faf99f04010</strong>，然后全局搜索，就能找到具体是哪个控件</p></li><li>如果控制台打印不够直观看出是哪个控件约束有问题，我们可以通过 LLDB命令工具<a href="https://github.com/facebook/chisel" target="_blank" rel="noopener">chisel</a>定位寻找。</li></ul><h3 id="三、解决冲突"><a href="#三、解决冲突" class="headerlink" title="三、解决冲突"></a>三、解决冲突</h3><p>通常解决冲突的方法有：</p><blockquote><ul><li>删除多余约束</li><li>修改约束优先级</li></ul></blockquote><h3 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h3><p>1、<a href="https://stackoverflow.com/questions/26389273/how-to-trap-on-uiviewalertforunsatisfiableconstraints" target="_blank" rel="noopener">How to trap on UIViewAlertForUnsatisfiableConstraints?</a></p>]]></content>
      
      <categories>
          
          <category> iOS </category>
          
      </categories>
      
      
        <tags>
            
            <tag> iOS </tag>
            
            <tag> Chisel </tag>
            
            <tag> Xcode </tag>
            
            <tag> Objective-C </tag>
            
            <tag> Swift </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Chisel-LLDB调试助手</title>
      <link href="/2018/07/08/Chisel-LLDB%E8%B0%83%E8%AF%95%E5%8A%A9%E6%89%8B/"/>
      <url>/2018/07/08/Chisel-LLDB%E8%B0%83%E8%AF%95%E5%8A%A9%E6%89%8B/</url>
      <content type="html"><![CDATA[<p class="description"></p><a id="more"></a><blockquote><p>Chisel is a collection of LLDB commands to assist debugging iOS apps.</p></blockquote><h3 id="目录"><a href="#目录" class="headerlink" title="目录"></a>目录</h3><blockquote><ul><li>GitHub地址</li><li>安装</li><li>常用常用Commands</li><li>推荐博客</li></ul></blockquote><h3 id="一、GitHub地址"><a href="#一、GitHub地址" class="headerlink" title="一、GitHub地址"></a>一、GitHub地址</h3><p><a href="https://github.com/facebook/chisel" target="_blank" rel="noopener">Chisel</a></p><h3 id="二、安装"><a href="#二、安装" class="headerlink" title="二、安装"></a>二、安装</h3><ul><li>未安装Homrebrew，先安装Homrebrew<br>参考<a href="https://www.jianshu.com/p/c60789934af1" target="_blank" rel="noopener">MAC上Homebrew常用命令</a></li><li><p>安装Chisel</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">brew install chisel</span><br></pre></td></tr></table></figure></li><li><p>如果没有创建<strong>.lldbinit</strong>文件，则在终端创建文件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">touch .lldbinit </span><br><span class="line">//open .lldbinit</span><br></pre></td></tr></table></figure></li><li><p>编辑<strong>.lldbinit</strong>文件，并添加以下内容<code>command script import /usr/local/opt/chisel/libexec/fblldb.py</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">vim .lldbinit</span><br><span class="line"></span><br><span class="line">//添加以下内容</span><br><span class="line"># ~/.lldbinit</span><br><span class="line">...</span><br><span class="line">command script import /path/to/fblldb.py</span><br></pre></td></tr></table></figure></li></ul><p>最后wq保存，重启Xcode，就可以使用Chisel了。</p><h3 id="三、常用Commands"><a href="#三、常用Commands" class="headerlink" title="三、常用Commands"></a>三、常用Commands</h3><table><thead><tr><th style="text-align:left">命令</th><th style="text-align:left">命令描述</th><th style="text-align:left">iOS</th><th style="text-align:left">OS X</th></tr></thead><tbody><tr><td style="text-align:left">pviews</td><td style="text-align:left">Print the recursive view description for the key window.</td><td style="text-align:left">YES</td><td style="text-align:left">YES</td></tr><tr><td style="text-align:left">pvc</td><td style="text-align:left">Print the recursive view controller description for the key window.</td><td style="text-align:left">YES</td><td style="text-align:left">NO</td></tr><tr><td style="text-align:left">visualize</td><td style="text-align:left">Open a UIImage, CGImageRef, UIView, CALayer, NSData (of an image), UIColor, CIColor, or CGColorRef in Preview.app on your Mac.</td><td style="text-align:left">YES</td><td style="text-align:left">NO</td></tr><tr><td style="text-align:left">fv</td><td style="text-align:left">Find a view in the hierarchy whose class name matches the provided regex.</td><td style="text-align:left">YES</td><td style="text-align:left">NO</td></tr><tr><td style="text-align:left">fvc</td><td style="text-align:left">Find a view controller in the hierarchy whose class name matches the provided regex.</td><td style="text-align:left">YES</td><td style="text-align:left">NO</td></tr><tr><td style="text-align:left">show/hide</td><td style="text-align:left">Show or hide the given view or layer. You don’t even have to continue the process to see the changes!</td><td style="text-align:left">YES</td><td style="text-align:left">YES</td></tr><tr><td style="text-align:left">mask/unmask</td><td style="text-align:left">Overlay a view or layer with a transparent rectangle to visualize where it is.</td><td style="text-align:left">YES</td><td style="text-align:left">NO</td></tr><tr><td style="text-align:left">border/unborder</td><td style="text-align:left">Add a border to a view or layer to visualize where it is.</td><td style="text-align:left">YES</td><td style="text-align:left">YES</td></tr><tr><td style="text-align:left">caflush</td><td style="text-align:left">Flush the render server (equivalent to a “repaint” if no animations are in-flight).</td><td style="text-align:left">YES</td><td style="text-align:left">YES</td></tr><tr><td style="text-align:left">bmessage</td><td style="text-align:left">Set a symbolic breakpoint on the method of a class or the method of an instance without worrying which class in the hierarchy actually implements the method.</td><td style="text-align:left">YES</td><td style="text-align:left">YES</td></tr><tr><td style="text-align:left">wivar</td><td style="text-align:left">Set a watchpoint on an instance variable of an object.</td><td style="text-align:left">YES</td><td style="text-align:left">YES</td></tr><tr><td style="text-align:left">presponder</td><td style="text-align:left">Print the responder chain starting from the given object.</td><td style="text-align:left">YES</td><td style="text-align:left">YES</td></tr><tr><td style="text-align:left">…</td><td style="text-align:left">…</td><td style="text-align:left">…</td><td style="text-align:left">…</td></tr></tbody></table><p>就介绍这么多了，现在自己用到的也并不算太多，做下记录，方便自己以后查阅，有兴趣的朋友可以自行了解其用法吧。</p><h3 id="推荐博客"><a href="#推荐博客" class="headerlink" title="推荐博客"></a>推荐博客</h3><p>1、<a href="https://www.jianshu.com/p/b2371dd4443b" target="_blank" rel="noopener">LLdb篇2教你使用faceBook的chisel来提高调试效率</a><br>2、<a href="https://blog.cnbluebox.com/blog/2015/03/05/chisel/" target="_blank" rel="noopener">Chisel-LLDB命令插件，让调试更Easy</a></p>]]></content>
      
      <categories>
          
          <category> iOS </category>
          
      </categories>
      
      
        <tags>
            
            <tag> iOS </tag>
            
            <tag> LLDB </tag>
            
            <tag> Terminal </tag>
            
            <tag> Chisel </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>iOS优秀三方开源库整理，了解一下</title>
      <link href="/2018/07/08/iOS%E4%BC%98%E7%A7%80%E4%B8%89%E6%96%B9%E5%BC%80%E6%BA%90%E5%BA%93%E6%95%B4%E7%90%86%EF%BC%8C%E4%BA%86%E8%A7%A3%E4%B8%80%E4%B8%8B/"/>
      <url>/2018/07/08/iOS%E4%BC%98%E7%A7%80%E4%B8%89%E6%96%B9%E5%BC%80%E6%BA%90%E5%BA%93%E6%95%B4%E7%90%86%EF%BC%8C%E4%BA%86%E8%A7%A3%E4%B8%80%E4%B8%8B/</url>
      <content type="html"><![CDATA[<p class="description"></p><a id="more"></a><h3 id="一、前言"><a href="#一、前言" class="headerlink" title="一、前言"></a>一、前言</h3><blockquote><p>在自己工作之余，收集整理了一些优秀的三方开源框架，自己整理的这些三方开源库涵盖了iOS开发面很多方面的知识。非常感谢这些开源库的作者们，正是因为这些库，提高了我们的开发效率，同样也是我们学习进步的源泉。现将这个整理工程文件分享出来，希望能给需要的朋友一些帮助，同时也自己也做下收集记录。</p></blockquote><p><strong>Github整理的地址</strong>：<br><a href="https://github.com/wenmobo/WBCollectOCThirdLib" target="_blank" rel="noopener">WBCollectOCThirdLib</a><br><a href="https://github.com/wenmobo/WBCollectSwfitThirdLib" target="_blank" rel="noopener">WBCollectSwfitThirdLib</a></p><h3 id="二、Objective-C三方开源库"><a href="#二、Objective-C三方开源库" class="headerlink" title="二、Objective-C三方开源库"></a>二、Objective-C三方开源库</h3><ul><li>表格侧滑菜单  <pre><code>[MGSwipeTableCell](https://github.com/MortimerGoro/MGSwipeTableCell) - **6300 star**  [SWTableViewCell](https://github.com/CEWendel/SWTableViewCell) - **7088 star**    [ZJSwipeTableView](https://github.com/jasnig/ZJSwipeTableView) - **7 star**</code></pre></li><li>表格高度缓存库    <pre><code>[FDTemplateLayoutCell](https://github.com/forkingdog/UITableView-FDTemplateLayoutCell) - **8992 star**   [HYBMasonryAutoCellHeight](https://github.com/CoderJackyHuang/HYBMasonryAutoCellHeight) - **595 star**</code></pre></li><li>表格刷新控件  <pre><code>[MJRefresh](https://github.com/CoderMJLee/MJRefresh) - **12006 star**  [KafkaRefresh](https://github.com/OpenFeyn/KafkaRefresh) - **627 star**</code></pre></li><li>弹出菜单（类似微信弹出菜单）  <pre><code>[FTPopOverMenu](https://github.com/liufengting/FTPopOverMenu) - **712 star**    [kxmenu](https://github.com/kolyvan/kxmenu) - **1776 star**  [PopMenuTableView](https://github.com/KongPro/PopMenuTableView) - **217 star**  </code></pre></li><li>导航栏    <pre><code>[FDFullscreenPopGesture](https://github.com/forkingdog/FDFullscreenPopGesture) - **5010 star**  [KMNavigationBarTransition](https://github.com/MoZhouqi/KMNavigationBarTransition) - **2549 star**  [RTRootNavigationController](https://github.com/rickytan/RTRootNavigationController) - **1333 star**    [WRNavigationBar](https://github.com/wangrui460/WRNavigationBar) - **1852 star**</code></pre></li><li>动画  <pre><code>[lottie-ios](https://github.com/airbnb/lottie-ios) - **14103 star**  [pop](https://github.com/facebook/pop) - **19064 star**     [LSAnimator](https://github.com/Lision/LSAnimator) **1238 star**</code></pre></li><li>分段控件  <pre><code>[HMSegmentedControl](https://github.com/HeshamMegid/HMSegmentedControl) - **3392 star**  </code></pre></li><li>富文本编辑    <pre><code>[ZSSRichTextEditor](https://github.com/nnhubbard/ZSSRichTextEditor) - **2891 star**</code></pre></li><li>弹幕  <pre><code>[HJDanmakuDemo](https://github.com/panghaijiao/HJDanmakuDemo) - **717 star**    </code></pre></li><li>滚动视图  <pre><code>[SwipeView](https://github.com/nicklockwood/SwipeView) - **2611 star**</code></pre></li><li>滚动视图嵌套  <pre><code>[HJTabViewController](https://github.com/panghaijiao/HJTabViewController) - **191 star**    [LTScrollView](https://github.com/gltwy/LTScrollView) - **236 star**</code></pre></li><li>红点提示  <pre><code>[JSBadgeView](https://github.com/JaviSoto/JSBadgeView) - **1209 star**   [WZLBadge](https://github.com/weng1250/WZLBadge) - **1603 star**</code></pre></li><li>键盘  <pre><code>[IQKeyboardManager](https://github.com/hackiftekhar/IQKeyboardManager) - **11697 star**  [MMNumberKeyboard](https://github.com/matmartinez/MMNumberKeyboard) - **911 star**  [TPKeyboardAvoiding](https://github.com/michaeltyson/TPKeyboardAvoiding) - **5568 star**    </code></pre></li><li>界面布局   <pre><code>[FlexLib](https://github.com/zhenglibao/FlexLib) - **496 star**  [Masonry](https://github.com/SnapKit/Masonry) - **16526 star**  [SDAutoLayout](https://github.com/gsdios/SDAutoLayout) - **5241 star**   [WHC_AutoLayoutKit](https://github.com/netyouli/WHC_AutoLayoutKit) - **786 star**</code></pre></li><li>进度指示器    <pre><code>[DACircularProgress](https://github.com/danielamitay/DACircularProgress) - **2307 star**    [SDProgressView](https://github.com/gsdios/SDProgressView) - **378 star**</code></pre></li><li>开发模式  <pre><code>[KVOController](https://github.com/facebook/KVOController) - **6524 star**   </code></pre></li><li>控制器切换    <pre><code>[DWQListOfDifferentOrderStatus](https://github.com/DevelopmentEngineer-DWQ/DWQListOfDifferentOrderStatus) **12 star**   [HYPageView](https://github.com/runlhy/HYPageView) - **74 star**  [SGPagingView](https://github.com/kingsic/SGPagingView) - **822 star**    [WMPageController](https://github.com/wangmchn/WMPageController) - **2229 star**    [ZJScrollPageView](https://github.com/jasnig/ZJScrollPageView) - **847 star**</code></pre></li><li>数据存储  <pre><code>[fmdb](https://github.com/ccgus/fmdb) - **12533 star**   [BGFMDB](https://github.com/huangzhibiao/BGFMDB) - **771 star**  [JKDBModel](https://github.com/Haley-Wong/JKDBModel) - **683 star**  [JRDB](https://github.com/scubers/JRDB) - **480 star**  [LKDBHelper-SQLite-ORM](https://github.com/li6185377/LKDBHelper-SQLite-ORM) - **980 star**</code></pre></li><li>数据转模型  <pre><code>[MJExtension](https://github.com/CoderMJLee/MJExtension) - **7667 star**   [YYModel](https://github.com/ibireme/YYModel) - **3589 star**  [Mantle](https://github.com/Mantle/Mantle)  - **11023 star**    [jsonmodel](https://github.com/jsonmodel/jsonmodel) - **6559 star**  [GDataXML-HTML](https://github.com/graetzer/GDataXML-HTML) - **261 star**</code></pre></li><li>搜索  <pre><code>[PYSearch](https://github.com/ko1o/PYSearch) - **2976 star**</code></pre></li><li>提示框架  <pre><code>[MBProgressHUD](https://github.com/jdg/MBProgressHUD/tree/master) - **14618 star**  [SVProgressHUD](https://github.com/SVProgressHUD/SVProgressHUD) - **11046 star**    [JGProgressHUD](https://github.com/JonasGessner/JGProgressHUD) - **2257 star**  [KSToastView](https://github.com/c0ming/KSToastView) - **91 star**  [MMPopupView](https://github.com/adad184/MMPopupView) - **1910 star**   [SCLAlertView](https://github.com/dogo/SCLAlertView) - **3084 star**   [Toast](https://github.com/scalessec/Toast) - **3085 star**</code></pre></li><li>图表绘制  <pre><code>[AAChartKit](https://github.com/AAChartModel/AAChartKit) - **2241 star**   [JHChart](https://github.com/China131/JHChart) - **508 star**  [ZFChart](https://github.com/Zirkfied/ZFChart) - **670 star**  [DVPieChart](https://github.com/FireMou/DVPieChart) - **63 star**  [DVLineChart](https://github.com/FireMou/DVLineChart) - **56 star**</code></pre></li><li>图片缓存框架  <pre><code>[SDWebImage](https://github.com/rs/SDWebImage) - **22089 star**  [FLAnimatedImage](https://github.com/Flipboard/FLAnimatedImage) - **6691 star**     [iOS-WebP](https://github.com/seanooi/iOS-WebP) - **739 star**  [YYWebImage](https://github.com/ibireme/YYWebImage) - **3195 star**  </code></pre></li><li>图片浏览  <pre><code>[MWPhotoBrowser](https://github.com/mwaterfall/MWPhotoBrowser) - **8238 star**  [PYPhotoBrowser](https://github.com/ko1o/PYPhotoBrowser) - **1782 star**   [SDPhotoBrowser](https://github.com/gsdios/SDPhotoBrowser) - **962 star**    [STPhotoBrowser](https://github.com/STShenZhaoliang/STPhotoBrowser) - **299 star**  [KSPhotoBrowser](https://github.com/skx926/KSPhotoBrowser) - **457 star**</code></pre></li><li>图片轮播  <pre><code>[SDCycleScrollView](https://github.com/gsdios/SDCycleScrollView) - **4921 star**    [HYBLoopScrollView](https://github.com/CoderJackyHuang/HYBLoopScrollView) - **615 star**    [TXScrollLabelView](https://github.com/tingxins/TXScrollLabelView) - **497 star**</code></pre></li><li>图片拾取  <pre><code>[TZImagePickerController](https://github.com/banchichen/TZImagePickerController) - **5065 star**    [CTAssetsPickerController](https://github.com/chiunam/CTAssetsPickerController) - **2142 star**     [DNImagePicker](https://github.com/AwesomeDennis/DNImagePicker) - **365 star**  [HXWeiboPhotoPicker](https://github.com/KeenTeam1990/HXWeiboPhotoPicker) - **7 star**</code></pre></li><li>3D效果图  <pre><code>[HelloPanoramaGL](https://github.com/heroims/HelloPanoramaGL) - **39 star**</code></pre></li><li>网络请求  <pre><code>[AFNetworking](https://github.com/AFNetworking/AFNetworking) - **31246 star**    [YTKNetwork](https://github.com/yuantiku/YTKNetwork) - **5385 star**   [PPNetworkHelper](https://github.com/jkpang/PPNetworkHelper) - **1180 star**     [HYBNetworking](https://github.com/CoderJackyHuang/HYBNetworking) - **541 star**    [SJNetwork](https://github.com/knightsj/SJNetwork) - **153 star**</code></pre></li><li>网络状态监测  <pre><code>[Reachability](https://github.com/tonymillion/Reachability) - **6665 star**</code></pre></li><li>文件下载  <pre><code>[TWRDownloadManager](https://github.com/chasseurmic/TWRDownloadManager) - **366 star**  [ZFDownload](https://github.com/renzifeng/ZFDownload) - **291 star**</code></pre></li><li>旋转木马  <pre><code>[iCarousel](https://github.com/nicklockwood/iCarousel) - **10628 star**  [NewPagedFlowView](https://github.com/PageGuo/NewPagedFlowView) - **512 star**</code></pre></li><li>音视频    <pre><code>[ijkplayer](https://github.com/Bilibili/ijkplayer) - **19602 star**  [ZFPlayer](https://github.com/renzifeng/ZFPlayer) - **4539 star**  [WMPlayer](https://github.com/zhengwenming/WMPlayer) - **2397 star**   [TBPlayer](https://github.com/suifengqjn/TBPlayer) - **1125 star**  [TTAVPlayer](https://github.com/tangdiforx/TTAVPlayer) - **118 star**</code></pre></li><li>占位图        <pre><code>[DZNEmptyDataSet](https://github.com/dzenbot/DZNEmptyDataSet) - **10439 star**  [LYEmptyView](https://github.com/dev-liyang/LYEmptyView) - **657 star**</code></pre></li><li>C语言扩展库   <pre><code>[libextobjc](https://github.com/jspahrsummers/libextobjc) - **3936 star**   </code></pre></li><li>Socket编程    <pre><code>[CocoaAsyncSocket](https://github.com/robbiehanson/CocoaAsyncSocket) - **10193 star**   [SocketRocket](https://github.com/facebook/SocketRocket) - **7833 star**   [socket.io](https://github.com/socketio/socket.io) - **42419 star**  [MQTTKit](https://github.com/mobile-web-messaging/MQTTKit) - **407 star**</code></pre></li><li>内存泄露检测工具  <pre><code>[MLeaksFinder](https://github.com/Tencent/MLeaksFinder) - **3568 star**   [FBRetainCycleDetector](https://github.com/facebook/FBRetainCycleDetector) - **3068 star**</code></pre></li><li>YYKit     <pre><code>[YYKit](https://github.com/ibireme/YYKit) - **12185 star**</code></pre></li><li>LOG工具   <pre><code>[CocoaLumberjack](https://github.com/CocoaLumberjack/CocoaLumberjack) - **10382 star**</code></pre></li><li>OC与JS交互    <pre><code>[WebViewJavascriptBridge](https://github.com/marcuswestin/WebViewJavascriptBridge) - **11017 star**</code></pre></li><li>输入框占位符  <pre><code>[UITextView-Placeholder](https://github.com/devxoul/UITextView-Placeholder) - **797 star**  [RPFloatingPlaceholders](https://github.com/iwasrobbed/RPFloatingPlaceholders) - **1115 star**  [SZTextView](https://github.com/glaszig/SZTextView) - **652 star**  </code></pre></li><li>分类  <pre><code>[JKCategories](https://github.com/shaojiankui/JKCategories) - **2770 star**</code></pre></li><li>图像处理  <pre><code>[GPUImage](https://github.com/BradLarson/GPUImage) - **17606 star**</code></pre></li><li>iOS开发知识集合   <pre><code>[iOS-Tips](https://github.com/awesome-tips/iOS-Tips) - **2187 star**   </code></pre></li><li>面试题集锦    <pre><code>[iOSInterviewQuestions](https://github.com/ChenYilong/iOSInterviewQuestions) - **6809 star**     [iOS-InterviewQuestion-collection](https://github.com/liberalisman/iOS-InterviewQuestion-collection) - **1019 star** </code></pre></li><li>三方开源库分析    <pre><code>[analyze](https://github.com/Draveness/analyze) - **6077 star**</code></pre></li></ul><h3 id="三、Swift三方开源库"><a href="#三、Swift三方开源库" class="headerlink" title="三、Swift三方开源库"></a>三、Swift三方开源库</h3><ul><li>动画  <pre><code>[NVActivityIndicatorView](https://github.com/ninjaprox/NVActivityIndicatorView) - **7098 star**</code></pre></li><li>网络请求  <pre><code>[Alamofire](https://github.com/Alamofire/Alamofire) - **28292 star**</code></pre></li><li>占位图    <pre><code>[SkeletonView](https://github.com/Juanpe/SkeletonView) - **5083 star**</code></pre></li><li>二维码扫描    <pre><code>[EFQRCode](https://github.com/EyreFree/EFQRCode) - **2751 star**</code></pre></li><li>布局框架  <pre><code>[SnapKit](https://github.com/SnapKit/SnapKit) - **12978 star**  </code></pre></li><li>图表绘制  <pre><code>[Charts](https://github.com/danielgindi/Charts) - **18605 star**</code></pre><h3 id="四、结语"><a href="#四、结语" class="headerlink" title="四、结语"></a>四、结语</h3><blockquote><p>上面这些三方开源库按照自己的理解分类整理了一遍，其中OC语言库居多，自己现在也是基于OC开发，Swift收集的相对较少，这些库也是自己现在所了解到的，当然还有很多优秀的三方库自己也未发现和接触，我以后会不断在这篇博客中更新优秀的三方开源库。</p></blockquote></li></ul>]]></content>
      
      <categories>
          
          <category> iOS </category>
          
      </categories>
      
      
        <tags>
            
            <tag> GitHub </tag>
            
            <tag> iOS </tag>
            
            <tag> Objective-C </tag>
            
            <tag> Swift </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>GitPages+Hexo搭建个人博客</title>
      <link href="/2018/07/07/GitPages-Hexo%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/"/>
      <url>/2018/07/07/GitPages-Hexo%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/</url>
      <content type="html"><![CDATA[<p class="description"></p><a id="more"></a><p>如果你想从零开始搭建一个属于自己的静态博客网站，可以参考下面三篇博文，这三篇博文是记录我从零开始搭建自己静态博客的全过程，希望能给需要的朋友一些参考：</p><ul><li><a href="https://www.jianshu.com/p/201283bcd64a" target="_blank" rel="noopener">GitPages+Hexo搭建个人博客</a></li><li><a href="https://www.jianshu.com/p/d5d3e10576d1" target="_blank" rel="noopener">Hexo相关配置和使用</a></li><li><a href="https://www.jianshu.com/p/9f0e90cc32c2" target="_blank" rel="noopener">Hexo-NexT配置超炫网页效果</a></li></ul><p>最终成果： <a href="http://blogwenbo.com/">blogwenbo.com</a></p><h3 id="一、GitHub创建项目"><a href="#一、GitHub创建项目" class="headerlink" title="一、GitHub创建项目"></a>一、GitHub创建项目</h3><ul><li>1.1 使用GitPages搭建自己静态博客前提要注册申请GitHub账号。GitHub相关配置可参考这篇文章：<a href="https://www.jianshu.com/p/7edb6b838a2e" target="_blank" rel="noopener">MAC上Git安装与GitHub基本使用</a>。</li><li>1.2 GitHub上新创建一个<a href="https://github.com/wenmobo/wenmobo.github.io" target="_blank" rel="noopener">wenmobo.github.io</a>仓库，<strong>wenmobo</strong>是我的账号名，这里替换成你自己的就可以了。项目格式名称为<code>[用户名].github.io</code>，如下：<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">username.github.io</span><br></pre></td></tr></table></figure></li></ul><p>创建成功之后如下：<br><img src="http://upload-images.jianshu.io/upload_images/3072214-224c6bb8fcdf8ffd.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="屏幕快照 2018-01-14 下午11.52.25.png"></p><ul><li>1.3 在桌面新建一个文件夹<strong>MyBlog</strong>，<code>cd</code>到该文件夹，将项目克隆到本地：<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone git@github.com:wenmobo/wenmobo.github.io.git</span><br></pre></td></tr></table></figure></li></ul><h3 id="二、安装Node-js"><a href="#二、安装Node-js" class="headerlink" title="二、安装Node.js"></a>二、安装<a href="https://nodejs.org/en/" target="_blank" rel="noopener">Node.js</a></h3><ul><li>2.1 Node.js支持用HomeBrew安装，首先要安装Homebrew，Homebrew安装可查看这篇文章：<a href="https://www.jianshu.com/p/c60789934af1" target="_blank" rel="noopener">MAC上Homebrew常用命令整理</a></li><li>2.2 Homebrew安装好之后，用Homebrew安装Node.js，终端输入：<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">brew node</span><br></pre></td></tr></table></figure></li></ul><h3 id="三、安装hexo"><a href="#三、安装hexo" class="headerlink" title="三、安装hexo"></a>三、安装<a href="https://hexo.io/zh-cn/" target="_blank" rel="noopener">hexo</a></h3><ul><li><p>3.1 安装hexo，终端输入：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install -g hexo-cli</span><br></pre></td></tr></table></figure></li><li><p>3.2 在本地仓库<strong>MyBlog</strong>新建文件夹<strong>Blog</strong>，然后在终端<code>cd [Blog文件夹路径]</code>，执行以下命令初始化博客：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">hexo init</span><br><span class="line"></span><br><span class="line">//或者</span><br><span class="line">hexo init &lt;folder&gt;</span><br><span class="line">cd &lt;folder&gt;</span><br><span class="line">npm instal</span><br></pre></td></tr></table></figure></li></ul><p>成功之后，目录文件如下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">.</span><br><span class="line">├── _config.yml</span><br><span class="line">├── package.json</span><br><span class="line">├── scaffolds</span><br><span class="line">├── source</span><br><span class="line">|   ├── _drafts</span><br><span class="line">|   └── _posts</span><br><span class="line">└── themes</span><br></pre></td></tr></table></figure></p><ul><li>3.3 查看本地效果，终端输入：<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo s</span><br></pre></td></tr></table></figure></li></ul><p>终端输出：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">WMBdeMacBook-Pro:Hexo WENBO$ hexo s</span><br><span class="line">INFO  Start processing</span><br><span class="line">INFO  Hexo is running at http://localhost:4000/. Press Ctrl+C to stop.</span><br></pre></td></tr></table></figure></p><p>将<a href="http://localhost:4000/.拷贝到Chome浏览器，查看效果，如下图所示：" target="_blank" rel="noopener">http://localhost:4000/.拷贝到Chome浏览器，查看效果，如下图所示：</a><br><img src="http://upload-images.jianshu.io/upload_images/3072214-9ce7b0f78ef70404.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="屏幕快照 2018-01-14 下午11.01.57.png"></p><h3 id="四、总结"><a href="#四、总结" class="headerlink" title="四、总结"></a>四、总结</h3><blockquote><p>GitHubPages+Hexo搭建静态博客的准备工作到这里都完成了，下面一篇文章：<a href="https://www.jianshu.com/p/d5d3e10576d1" target="_blank" rel="noopener">Hexo相关配置和使用</a>会介绍Hexo相关配置。</p></blockquote><h3 id="五、参考文章"><a href="#五、参考文章" class="headerlink" title="五、参考文章"></a>五、参考文章</h3><p>1、<a href="http://blog.csdn.net/yanzhenjie1003/article/details/51703370" target="_blank" rel="noopener">GithubPages教程 在GithubPages上搭建个人主页</a><br>2、<a href="https://itgoyo.github.io/2019/12/28/%E5%9C%A8Github%E4%B8%8A%E4%BD%BF%E7%94%A8Hexo%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2.html" target="_blank" rel="noopener">在Github上使用Hexo搭建个人博客</a><br>3、<a href="https://www.jianshu.com/p/6d2ec4ca6186" target="_blank" rel="noopener">如何使用hexo搭建个人博客（Mac OS系统，windows仅作参考）</a><br>4、<a href="https://www.jianshu.com/p/bcdbe7347c8d" target="_blank" rel="noopener">Hexo博客主题推荐</a></p>]]></content>
      
      <categories>
          
          <category> Hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
            <tag> GitHub </tag>
            
            <tag> GitPages </tag>
            
        </tags>
      
    </entry>
    
  
  
</search>
